-- phpMyAdmin SQL Dump
-- version 4.2.8
-- http://www.phpmyadmin.net
--
-- Хост: localhost
-- Время создания: Дек 13 2014 г., 18:26
-- Версия сервера: 5.5.38-0ubuntu0.14.04.1
-- Версия PHP: 5.5.9-1ubuntu4.3

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- База данных: `dev-site`
--

-- --------------------------------------------------------

--
-- Структура таблицы `codes`
--

CREATE TABLE IF NOT EXISTS `codes` (
`id` int(11) NOT NULL,
  `title` varchar(64) NOT NULL,
  `language` varchar(16) DEFAULT NULL,
  `source` text NOT NULL,
  `author_id` int(11) NOT NULL,
  `password` varchar(32) NOT NULL,
  `added_at` datetime DEFAULT NULL
) ENGINE=MyISAM AUTO_INCREMENT=243 DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `codes`
--

INSERT INTO `codes` (`id`, `title`, `language`, `source`, `author_id`, `password`, `added_at`) VALUES
(1, 'FenxJS', 'js', '/** \r\n* FenxJS - JavaScript framework\r\n* @author   Ivan Gontarenko <vania.gontarenko@gmail.com>\r\n*/\r\n\r\n(function(){\r\n    \r\n    var FenxJS = (function(){\r\n        \r\n        var _regexp = {\r\n            byid: /^([a-zA-Z0-9_-]*)?(#([a-zA-Z0-9_-]+))$/, // div#id\r\n            byclass: /^([a-zA-Z0-9_-]*)?(\\.([a-zA-Z0-9_-]+))*$/, //div.class\r\n            byattr: /^(\\w*)(\\[(?:[^:\\\\\\/\\|\\*\\<\\>\\?\\"]+)(?:\\*?)=\\"?(?:[^:\\\\\\/\\|\\*\\<\\>\\?\\"]+)\\"?\\])$/i //img[attr=val]\r\n        };\r\n        \r\n        var _doc = document;\r\n        \r\n        var _objectID = 0;\r\n        \r\n        var _FenxJS_Info = {\r\n            version: ''1.1'',\r\n            codeName: ''FenxJS Framework'',\r\n            author: ''Ivan Gontarenko'',\r\n            authorContact: {\r\n                email: ''vania.gontarenko@gmail.com'',\r\n                tel: ''+3 8 (063) 274-28-70'',\r\n                website: ''http://codeblog.com.ua/'',\r\n                icq: ''48 300 60'',\r\n                skype: ''i.gontarenko''\r\n            },\r\n            tnx: ''CarbonJS''\r\n        };\r\n                \r\n        return {\r\n            \r\n            _cache: {},\r\n            \r\n            _elemCache: {},\r\n            \r\n            _temp: {},\r\n            \r\n            coreInit: function(){\r\n                \r\n                FenxJS.defaultExt = {           \r\n                    // ok DOM\r\n                    okDOM: function( func ){\r\n                        var oldOnLoad = window.onload;\r\n                        window.onload = function(){\r\n                            if( typeof oldOnLoad == ''function'' ) oldOnLoad();\r\n                            func();\r\n                        }\r\n                    },\r\n                    // ajax\r\n                    ajax: function( ajaxArr ){\r\n                        \r\n                        if( typeof ajaxArr == ''object'' ){\r\n                            \r\n                            var url = ajaxArr.url || "";\r\n                            var method = ajaxArr.method || "GET";\r\n                            var params = ajaxArr.params || {};\r\n                            \r\n                            var data = '''';\r\n                            var req = null;        \r\n                            \r\n                            method = method.toUpperCase();\r\n                            \r\n                            if( window.ActiveXObject ){                            \r\n                                try{\r\n                                    req = new ActiveXObject("Msxml2.XMLHTTP.6.0");\r\n                                }catch(e){\r\n                                    try{\r\n                                        req = new ActiveXObject("Msxml2.XMLHTTP.3.0");\r\n                                    }catch(e){\r\n                                        try{\r\n                                            req = new ActiveXObject("Msxml2.XMLHTTP");\r\n                                        }catch(e){\r\n                                            try{\r\n                                                req = new ActiveXObject("Microsoft.XMLHTTP");\r\n                                            }catch(e){\r\n                                                FenxJS.alertError(''Ajax'', ''Can`t create ActiveXObject!'');      \r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }else if( window.XMLHttpRequest ){\r\n                                req = new XMLHttpRequest();\r\n                            }\r\n                            \r\n                            if( req === null ){\r\n                                FenxJS.alertError(''Ajax'', ''Your broswer don`t support XMLTHHPRequest!'');      \r\n                                return;\r\n                            }\r\n                            \r\n                            if( method == "GET" ){\r\n                                var _pc = 0;\r\n                                var _ps = '''';\r\n                                for( var param in params ) _ps += ( (_pc++ == 0) ? ''?'' : ''&'' ) + param + ''='' + encodeURIComponent( params[ param ] );\r\n                                _ps += ( ( _ps.indexOf( ''?'' ) != -1 ) ? ''&'' : ''?'' ) + ''noneCache'' + (new Date).getTime() + ''=1'';\r\n                                url += _ps;\r\n                            }\r\n                            \r\n                            req.open( method, url, true );\r\n                                                    \r\n                            req.onreadystatechange = function(){\r\n                                if(ajaxArr.onReadyState){\r\n                                   ajaxArr.onReadyState(req.readyState);\r\n                                }\r\n                                if( req.readyState == 4 ){\r\n                                    if( req.status == 200 ){\r\n                                        if( ajaxArr.onComplete ){\r\n                                            ajaxArr.onComplete( req.responseText, req );\r\n                                        }\r\n                                    }else{\r\n                                        var _statusError = ''Status #'' + req.status;\r\n                                        switch( req.status ){\r\n                                            case 0:\r\n                                                _statusError += "\\nNon connection";\r\n                                                break;\r\n                                            case 404:\r\n                                                _statusError += "\\nScript not found";\r\n                                                break;\r\n                                            case 403:\r\n                                                _statusError += "\\nForbidden";\r\n                                                break;\r\n                                            case 500:\r\n                                                _statusError += "\\nInternal server error";\r\n                                                break;\r\n                                        }\r\n                                        FenxJS.alertError(''Ajax'', _statusError);      \r\n                                    }\r\n                                }                            \r\n                            }      \r\n                            \r\n                            if( method == "POST" ){\r\n                                var _pc = 0;\r\n                                var _ps = '''';\r\n                                for( var param in params ) _ps += ( (_pc++ == 0) ? '''' : ''&'' ) + param + ''='' + encodeURIComponent( params[ param ] );\r\n                                //headers\r\n                                req.setRequestHeader("Connection", "close");\r\n                                req.setRequestHeader("Content-length", _ps.length);\r\n                                req.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");\r\n                                data += _ps;\r\n                            }              \r\n                            \r\n                            req.send( data );             \r\n                            \r\n                        }else{\r\n                            FenxJS.alertError(''Ajax'', ''Need object!'');      \r\n                        }\r\n                        \r\n                    },\r\n                    cookie: {\r\n                        set: function( param, value, expr, path, domain, secure ){\r\n                            if( _doc.cookie ){\r\n                                if( typeof param == ''string'' && typeof value == ''string'' ){\r\n                                    var _updateCookie = '''';\r\n                                    _updateCookie += param + ''='' + escape( value );\r\n                                    if( typeof expr == ''number'' ){\r\n                                        _updateCookie += ''; expires='' + Math.round( ( new Date ).getTime() + expr );\r\n                                    }\r\n                                    if( typeof path == ''string'' ){\r\n                                        _updateCookie += ''; path='' + escape( path );\r\n                                    }\r\n                                    if( typeof domain == ''string'' ){\r\n                                        _updateCookie += ''; domain='' + domain;\r\n                                    }\r\n                                    if( typeof secure == ''boolean'' ){\r\n                                        _updateCookie += ''; secure'';\r\n                                    }\r\n                                    _doc.cookie = _updateCookie;\r\n                                }                            \r\n                            }else{\r\n                                FenxJS.alertError(''Cookie'', ''Your browser don`t support cookie'');\r\n                            }\r\n                        },\r\n                        get: function(name){\r\n                            if( _doc.cookie ){\r\n                                if( typeof name == ''string'' ){\r\n                                    var _r = _doc.cookie.match ( ''(^|;) ?'' + name + ''=([^;]*)(;|$)'' );\r\n                                    if( _r ){\r\n                                        return _r[2];\r\n                                    }else{\r\n                                        return null;\r\n                                    }\r\n                                }\r\n                            }else{\r\n                                FenxJS.alertError(''Cookie'', ''Your browser don`t support cookie'');\r\n                            }\r\n                        },\r\n                        remove: function(name){\r\n                            if( _doc.cookie ){\r\n                                if( typeof name == ''string'' ){\r\n                                    this.set( name, '''', -1 );\r\n                                }\r\n                            }else{\r\n                                FenxJS.alertError(''Cookie'', ''Your browser don`t support cookie'');\r\n                            }\r\n                        }\r\n                    },\r\n                    foreach: function( func ){\r\n                        var key = 0, elem;\r\n                        while( elem = this[key++] ) \r\n                            func.apply(elem, [key-1]); \r\n                        return this;\r\n                    },\r\n                    find: function( selector ){\r\n                        if( typeof selector == "string" ){\r\n                            var _newDoc = FenxJS.allMethods();\r\n                            this.foreach(function( index ){\r\n                                _newDoc[index] = FenxJS.get( selector, this );\r\n                            });\r\n                            return _newDoc;\r\n                        }else{\r\n                            return {};\r\n                        }\r\n                    },\r\n                    findFirst: function( selector ){\r\n                        if( typeof selector == "string" ){\r\n                            var _newDoc = {};\r\n                            _newDoc = FenxJS.get( selector, this[0] );\r\n                            return _newDoc;\r\n                        }else{\r\n                            return {};\r\n                        }\r\n                    },\r\n                    findLast: function( selector ){\r\n                        if( typeof selector == "string" ){\r\n                            var _newDoc = {};\r\n                            _newDoc = FenxJS.get( selector, this[this.length-1] );\r\n                            return _newDoc;\r\n                        }else{\r\n                            return {};\r\n                        }\r\n                    },\r\n                    findNew: function(){\r\n                        var s = this.__noCache.s;\r\n                        FenxJS._cache[this.__noCache.cacheUni]=null;\r\n                        var _newDoc = FenxJS.allMethods();\r\n                        this.foreach(function( index ){\r\n                            _newDoc[index] = FenxJS.get(s,_doc);\r\n                        });\r\n                        return _newDoc;\r\n                    },\r\n                    getItem: function(i){\r\n                        if(this[i])\r\n                            return this[i].isFenxJS?this[i]:_(this[i]);\r\n                        else\r\n                            return this;\r\n                    },\r\n                    firefox: function(){\r\n                        if( navigator.userAgent.toLowerCase().indexOf(''firefox'') && -[1,] ) return true;\r\n                    },\r\n                    ie: function(){\r\n                        if( navigator.userAgent.toLowerCase().indexOf(''msie'') ) return true;\r\n                    },\r\n                    opera: function(){\r\n                        if( navigator.userAgent.toLowerCase().indexOf(''opera'') && -[1,] ) return true;\r\n                    },\r\n                    safari: function(){\r\n                        if( navigator.userAgent.toLowerCase().indexOf(''safari'') && -[1,] ) return true;\r\n                    },\r\n                    getBrowser: function(){\r\n                        if(!FenxJS._cache[''_browserName'']){\r\n                            var _browserName = ''Unknown'';\r\n                            if( _().firefox() ){\r\n                                _browserName = "Firefox";\r\n                            }else if( _().ie() ){\r\n                                _browserName = "Internet Explorer";\r\n                            }else if( _().opera() ){\r\n                                _browserName = "Opera";\r\n                            }else if( _().safari() ){\r\n                                _browserName = "Safari";\r\n                            }\r\n                            FenxJS._cache[''_browserName''] = _browserName;\r\n                        }\r\n                        return FenxJS._cache[''_browserName''];     \r\n                    },\r\n                    isFenxJS: true,\r\n                    about: function(_return){\r\n                        var methods='''', message=""+(_return!=true?"\\n":''<br />'')+"", count=0;\r\n                        for( var m in _() ) methods += ''    '' + ++count + ''. '' + m + "();"+(_return!=true?"\\n":''<br />'');\r\n                        message += _FenxJS_Info.codeName + '' [v'' + _FenxJS_Info.version + "]"+(_return!=true?"\\n\\n":''<br /><br />'');\r\n                        message += ''Author: '' + _FenxJS_Info.author +(_return!=true?"\\n\\n":''<br /><br />'');\r\n                        message += ''======= Contact info =======''+(_return!=true?"\\n":''<br />'');\r\n                        message += ''Email: '' + _FenxJS_Info.authorContact.email + (_return!=true?"\\n":''<br />'');\r\n                        message += ''ICQ: '' + _FenxJS_Info.authorContact.icq + (_return!=true?"\\n":''<br />'');\r\n                        message += ''Skype: '' + _FenxJS_Info.authorContact.skype + (_return!=true?"\\n":''<br />'');\r\n                        message += ''Phone: '' + _FenxJS_Info.authorContact.tel + (_return!=true?"\\n":''<br />'');\r\n                        message += ''Site: '' + _FenxJS_Info.authorContact.website + (_return!=true?"\\n\\n":''<br /><br />'');\r\n                        message += ''Big thanks for: '' + _FenxJS_Info.tnx + (_return!=true?"\\n":''<br />'');\r\n                        message += (_return!=true?"\\n":''<br />'')+''======= FenxJS methods =======''+(_return!=true?"\\n":''<br />'');\r\n                        message += methods;\r\n                        if( _return == true )\r\n                            return message;\r\n                        else\r\n                            FenxJS.alertFenxJS(''Information'', ''FenxJS Code'', message);                        \r\n                    }                           \r\n                };    \r\n                                    \r\n                FenxJS.customExt = {\r\n                    addEvent: function(type, func){\r\n                        this.foreach(function(){\r\n                            FenxJS.addEvent(this, type, func);\r\n                        });\r\n                        return this;\r\n                    },\r\n                    removeEvent: function(type, func){\r\n                        this.foreach(function(){\r\n                            FenxJS.removeEvent(this, type, func);\r\n                        });\r\n                        return this;\r\n                    },\r\n                    attr: function( params ){        \r\n                        if( typeof params == ''object'' ){\r\n                            this.foreach(function(){\r\n                                for( var param in params ) \r\n                                    this[param] = params[ param ];\r\n                            });\r\n                            return this;\r\n                        }else if( typeof params == ''string'' ){\r\n                            return this[0][params];\r\n                        }        \r\n                    },\r\n                    click: function( func ){        \r\n                        if( typeof func == ''function'' ){\r\n                            this.foreach(function(){\r\n                                FenxJS.addEvent( this, ''click'', func );\r\n                            });\r\n                        }else{\r\n                            this.foreach(function(){\r\n                                this.click();\r\n                            });\r\n                        }\r\n                        return this;\r\n                    },\r\n                    hover: function( funcOver, funcOut ){\r\n                        if( typeof funcOver == ''function'' && typeof funcOut == ''function'' ){\r\n                            this.foreach(function(){\r\n                                FenxJS.addEvent( this, ''mouseover'', funcOver );\r\n                                FenxJS.addEvent( this, ''mouseout'', funcOut );\r\n                            });\r\n                            return this;\r\n                        }\r\n                    },\r\n                    html: function( _html ){\r\n                        if( _html == undefined ){\r\n                            return ( this[0].innerHTML || this[0].textContent );\r\n                        }else if( typeof _html == ''string'' ){\r\n                            this.foreach(function(){\r\n                                this.innerHTML = _html;\r\n                            });\r\n                            return this;\r\n                        }\r\n                    },\r\n                    value: function( _value ){\r\n                        if( _value == undefined ){\r\n                            return this[0].value;\r\n                        }else if( typeof _value == ''string'' ){\r\n                            this.foreach(function(){\r\n                                this.value = _value;\r\n                            });\r\n                            return this;\r\n                        }\r\n                    },\r\n                    css: function( prop, isArray ){\r\n                        \r\n                        if( typeof prop == ''object'' && !isArray ){\r\n                            var _style;\r\n                            this.foreach(function(){\r\n                                for( var c in prop ){\r\n                                    _style = c;\r\n                                    if( c != ''KhtmlOpacity'' && c != ''MozOpacity'' ){\r\n                                        c = c.replace(/\\-(\\w)/g, function() {\r\n                					       return arguments[1].toUpperCase();\r\n                                        });\r\n                                    }                  \r\n                                    if( c == ''float'' )\r\n                                        this.style[ ''styleFloat'' ] = prop[ _style ];   \r\n                                    else\r\n                                        this.style[ c ] = prop[ _style ];   \r\n                                }\r\n                            });\r\n                            return this;\r\n                        }else if( typeof prop == ''string'' ){\r\n                            return this[0].style[ prop ];\r\n                        }else if( typeof prop == ''object'' && isArray ){\r\n                            this.foreach(function(){\r\n                                for( var k in prop ){\r\n                                    style = k;\r\n                                    if( style != ''KhtmlOpacity'' && style != ''MozOpacity'' ){\r\n                                        style = style.replace(/\\-(\\w)/g, function() {\r\n                					       return arguments[1].toUpperCase();\r\n                                        });\r\n                                    }                  \r\n                                    if( style == ''float'' )\r\n                                        this.style[ ''styleFloat'' ] = prop[ k ];   \r\n                                    else\r\n                                        this.style[ style ] = prop[ k ]; \r\n                                }\r\n                            });\r\n                        }\r\n                    },\r\n                    xcss: function( styles ){\r\n                        if( typeof styles == ''object'' ){\r\n                            var _nums = styles.length,_c=0;\r\n                            this.foreach(function(){\r\n                                _(this).css(styles[_c]);\r\n                                if((_c+1)>=_nums)_c=0;\r\n                                else _c++;\r\n                            });\r\n                            return this;\r\n                        }   \r\n                    },\r\n                    cssToggle: function(cssMode1, cssMode2){\r\n                        if( typeof cssMode1 == ''object'' ){\r\n                            FenxJS._elemCache["_cssToggleStyles"]=FenxJS._elemCache["_cssToggleStyles"]||{};\r\n                            this.foreach(function(idx){\r\n                                var elem = _(this);\r\n                                var currentMode = elem.attr("_cssToggleMode")||"_1";\r\n                                var switchMode = (currentMode==''_1'')?''_2'':''_1'';\r\n                                if( cssMode2 == undefined ){\r\n                                    if( FenxJS._elemCache["_cssToggleStyles"][idx+''|''+elem[0].nodeName] == undefined ){\r\n                                        FenxJS._elemCache["_cssToggleStyles"][idx+''|''+elem[0].nodeName]={};\r\n                                        for( var _prop in cssMode1 ){\r\n                                            FenxJS._elemCache[''_cssToggleStyles''][idx+''|''+elem[0].nodeName][_prop] = elem.css(_prop)||'''';\r\n                                        }                            \r\n                                    }                        \r\n                                }                \r\n                                if(currentMode==''_1''){\r\n                                    elem.css(cssMode1);\r\n                                    elem.attr({_cssToggleMode:switchMode});\r\n                                }else{\r\n                                    if( cssMode2 == undefined ){                    \r\n                                        elem.css(FenxJS._elemCache[''_cssToggleStyles''][idx+''|''+elem[0].nodeName]);\r\n                                    }else{  \r\n                                        elem.css(cssMode2);\r\n                                    }                    \r\n                                    elem.attr({_cssToggleMode:switchMode});\r\n                                }\r\n                                \r\n                            });\r\n                            return this;\r\n                        }\r\n                    },\r\n                    show: function(){\r\n                        this.foreach(function(){\r\n                            var el = _(this);\r\n                            var oldDisplay = el.attr("_displayOld");\r\n                            el.css({display:oldDisplay||""});\r\n                            if(el.css("display")==="none"){\r\n                                var nodeName = this.nodeName, _body = document.body, _display;\r\n                                if(FenxJS._elemCache[nodeName]){\r\n                                    _display = FenxJS._elemCache[nodeName];\r\n                                }else{\r\n                                    var tempElem = document.createElement(nodeName);\r\n                                    _body.appendChild(tempElem);\r\n                                    _display = _(tempElem).css("display");\r\n                                    _body.removeChild(tempElem);\r\n                                    if( _display == "none" ) _display = "block";\r\n                                    FenxJS._elemCache[nodeName] = _display;\r\n                                }\r\n                                el.css({display:_display});\r\n                                el.attr({oldDisplay:_display});\r\n                            }\r\n                        });\r\n                        return this;\r\n                    },\r\n                    hide: function(){\r\n                        this.foreach(function(){\r\n                            var el = _(this);\r\n                            if(!el.attr("_displayOld")) el.attr({_displayOld:el.css("display")});\r\n                            el.css({display:"none"});\r\n                        });\r\n                        return this;\r\n                    },\r\n                    toggle: function(){\r\n                        this.foreach(function(){\r\n                            if( this.offsetWidth === 0 && this.offsetHeight === 0 && this.nodeName.toLowerCase() !== ''tr'' ){\r\n                                _(this).show();\r\n                            }else{\r\n                                _(this).hide();\r\n                            }\r\n                        });\r\n                        return this;\r\n                    },\r\n                    append: function( _val ){\r\n                        if( typeof _val == ''string'' ){\r\n                            this.foreach(function(){\r\n                                _(this).html( _(this).html() + _val );\r\n                            });\r\n                        }else if( _val.isFenxJS === true ){\r\n                            this.foreach(function(){\r\n                                var elem = this;\r\n                                _val.foreach(function(index){\r\n                                    elem.appendChild( this );\r\n                                });\r\n                            });\r\n                        }else if( typeof _val == ''object'' ){\r\n                            this.foreach(function(){\r\n                                this.appendChild( _val );\r\n                            });\r\n                        }\r\n                        return this;\r\n                    },\r\n                    remove: function(){\r\n                        this.foreach(function(){\r\n                            this.parentNode.removeChild(this);\r\n                        });\r\n                        return this;\r\n                    },\r\n                    prepend: function( _val ){\r\n                        if( typeof _val == ''string'' ){\r\n                            this.foreach(function(){\r\n                                _(this).html( _val + _(this).html() );\r\n                            });\r\n                        }else if( _val.isFenxJS == true ){\r\n                            this.foreach(function(){\r\n                                var elem = this;\r\n                                _val.foreach(function(index){\r\n                                    elem.insertBefore( this, elem.firstChild );\r\n                                });\r\n                            });\r\n                        }else if( typeof _val == ''object''  && _val.isFenxJS != true ){\r\n                            this.foreach(function(){\r\n                                this.insertBefore( _val, this.firstChild );\r\n                            });\r\n                        }\r\n                        return this;\r\n                    },\r\n                    setClass: function( newClass ){\r\n                        if( typeof newClass == ''string'' ){\r\n                            this.foreach(function(){\r\n                                this.className = newClass;\r\n                            });\r\n                        }\r\n                        return this;\r\n                    },\r\n                    cleanClass: function(){\r\n                        this.foreach(function(){\r\n                            this.className = '''';\r\n                        });\r\n                        return this;\r\n                    },\r\n                    addClass: function( newClass ){\r\n                        if( typeof newClass == ''string'' ){\r\n                            this.foreach(function(){\r\n                                if(!this.className.match(new RegExp(''(\\\\s|^)''+newClass+''(\\\\s|$)''))) this.className += '' '' + newClass;\r\n                            });\r\n                        }\r\n                        return this;\r\n                    },\r\n                    removeClass: function( toDeleteClass ){\r\n                        if( typeof toDeleteClass == ''string'' ){\r\n                            this.foreach(function(){\r\n                                if(this.className.match(new RegExp(''(\\\\s|^)''+toDeleteClass+''(\\\\s|$)''))) this.className = this.className.replace( toDeleteClass, '''' );\r\n                            });\r\n                        }\r\n                        return this;\r\n                    },\r\n                    x: function(v){\r\n                        if( this.length == 0 ){\r\n                            var e = v||window.event, posX;            \r\n                            if(e.pageX){\r\n                                posX = e.pageX;\r\n                            }else if(e.clientX){\r\n                                if(document.documentElement){\r\n                                    posX = e.clientX + document.documentElement.scrollLeft;\r\n                                }else if(document.body){\r\n                                    posX = e.clientX + document.body.scrollLeft;\r\n                                }\r\n                            }else{\r\n                                posX = 0;\r\n                            }\r\n                            return posX;\r\n                        }else{\r\n                            if( v != null ){\r\n                                if( this.css(''position'') !== ''absolute'' ) this.css({position:''absolute''});\r\n                                this.css({left:parseInt(v)+''px''});\r\n                                return this;\r\n                            }\r\n                        }\r\n                    },\r\n                    y: function(v){\r\n                        if( this.length == 0 ){\r\n                            var e = v||window.event, posY;            \r\n                            if(e.pageY){\r\n                                posY = e.pageY;\r\n                            }else if(e.clientX){\r\n                                if(document.documentElement){\r\n                                    posY = e.clientY + document.documentElement.scrollTop;\r\n                                }else if(document.body){\r\n                                    posY = e.clientY + document.body.scrollTop;\r\n                                }\r\n                            }else{\r\n                                posY = 0;\r\n                            }\r\n                            return posY;\r\n                        }else{\r\n                            if( v != null ){\r\n                                if( this.css(''position'') !== ''absolute'' ) this.css({position:''absolute''});\r\n                                this.css({top:parseInt(v)+''px''});\r\n                                return this;\r\n                            }\r\n                        }\r\n                    },\r\n                    transparence: function( val ){\r\n                        var opacityProp = ''undefined'';\r\n                        if(document.body.filters){\r\n                            opacityProp = ''filter'';\r\n                        }else if( typeof document.body.style.KhtmlOpacity == ''string'' ){\r\n                            opacityProp = ''KhtmlOpacity'';\r\n                        }else if( typeof document.body.style.MozOpacity == ''string'' ){\r\n                            opacityProp = ''MozOpacity'';\r\n                        }else if( typeof document.body.style.opacity == ''string'' ){\r\n                            opacityProp = ''opacity'';\r\n                        }\r\n                        if( this.length > 0 ){\r\n                            if( val != null ){\r\n                                if( opacityProp == ''filter'' ){\r\n                                    this.css({filter:''alpha(opacity=''+parseInt(val)+'')''}).attr({transparence:parseInt( val )});\r\n                                }else{\r\n                                    if( opacityProp == ''opacity'' ){\r\n                                        this.css({opacity:parseFloat( parseInt( val ) / 100 )});\r\n                                    }else if( opacityProp == ''MozOpacity'' ){\r\n                                        this.css({MozOpacity:parseFloat( parseInt( val ) / 100 )});\r\n                                    }else if( opacityProp == ''KhtmlOpacity'' ){\r\n                                        this.css({KhtmlOpacity:parseFloat( parseInt( val ) / 100 )});\r\n                                    }\r\n                                }\r\n                                return this;\r\n                            }else{\r\n                                if( opacityProp == ''filter'' ){\r\n                                    return this.attr(''transparence'');\r\n                                }else{\r\n                                    return parseInt( this.css(opacityProp) * 100 );\r\n                                }\r\n                            }\r\n                        }else{\r\n                             return opacityProp;   \r\n                        }\r\n                    },\r\n                    CreateDOM: function(){\r\n                        var params = arguments[0];\r\n                        var tag = params.tag||false, css = params.css||false, attr = params.attr||false;\r\n                        var domElement=[];\r\n                        if( tag !== false && typeof tag === ''string'' ){\r\n                            domElement = document.createElement( tag );\r\n                            \r\n                            if( attr !== false && typeof attr === ''object'' ){\r\n                                _(domElement).attr( attr );\r\n                            }\r\n                            if( css !== false && typeof css === ''object'' ){\r\n                                _(domElement).css( css );\r\n                            }\r\n                            return domElement;\r\n                        }else{\r\n                            return {};\r\n                        }\r\n                    },\r\n                    getDOMElement: function(){\r\n                        if(this.isFenxJS == true)\r\n                            return this[0]||false;\r\n                        else\r\n                            return false;\r\n                    },\r\n                    dnd: function(){\r\n                            FenxJS.alertError(''"dnd" method'',''Function is not aviliable!'');\r\n                            return;\r\n                            var dndElem = this;\r\n                            var moveArea = _(document||''body'');\r\n                            this.css({position:''relative''}).addEvent(''mousedown'',function(e){\r\n                                var dndElem_x = parseInt(dndElem.css(''left'')+0), dndElem_y = parseInt(dndElem.css(''top'')+0);\r\n                                var start_x = _().x(e), start_y = _().y(e);\r\n                                moveArea.addEvent(''mousemove'',function(e){\r\n                                    //_(''span#xy_status'').html(''x:''+_().x(e)+''px|y:''+_().y(e)+''px||elem_x:''+dndElem_x);\r\n                                    dndElem.css({\r\n                                        top:(_().y(e)+dndElem_y-start_y)+''px'',\r\n                                        left:(_().x(e)+dndElem_x-start_x)+''px''\r\n                                    });\r\n                                });\r\n                            });\r\n                            \r\n                            this.addEvent(''mouseup'',function(){\r\n                                moveAreap[0].onmousemove = null;\r\n                            });\r\n                            \r\n                    },\r\n                    hex2rgb: function( color, strType){\r\n                        strType = !strType ? false : true;\r\n                        if( typeof color != ''string'' && !color ) return;\r\n                        var startIndex = -1;\r\n                        if(color.indexOf(''#'') != -1) startIndex = 0;\r\n                        if( strType == false ){\r\n                            return{\r\n                                r:parseInt(color[startIndex+1]+color[startIndex+2], 16),\r\n                                g:parseInt(color[startIndex+3]+color[startIndex+4], 16),\r\n                                b:parseInt(color[startIndex+5]+color[startIndex+6], 16)\r\n                            }\r\n                        }else{\r\n                            var strRGB = parseInt(color[startIndex+1]+color[startIndex+2], 16) + '', '' +\r\n                                         parseInt(color[startIndex+3]+color[startIndex+4], 16) + '', '' +\r\n                                         parseInt(color[startIndex+5]+color[startIndex+6], 16);\r\n                                            \r\n                            return strRGB;\r\n                        }       \r\n                    },\r\n                    fadeColor: function(p,sc,fc,s,b){\r\n                        var n = 50,o = [],e,ei,ec=this.length;\r\n                        e=this; \r\n                        ei = e[0].__uniId;\r\n                        o[ei] = {\r\n                            elem:e.isFenxJS?e:_(e),\r\n                            back:b,\r\n                            speed:s/n,\r\n                            index:FenxJS._temp.fadecolor[''index''+ei]||0,\r\n                            fl: Math.floor,\r\n                            fade: function(el,p){\r\n                                var fPer=o[ei].index/n,sPer=1-fPer;                                    \r\n                                for(var i=0;i<p.length;i++){\r\n                                    var rgbColor = ''rgb(''+o[ei].fl(p[i][''sc''].r*sPer+p[i][''fc''].r*fPer)\r\n                                        +'', ''+o[ei].fl(p[i][''sc''].g*sPer+p[i][''fc''].g*fPer)\r\n                                        +'', ''+o[ei].fl(p[i][''sc''].b*sPer+p[i][''fc''].b*fPer)+'')'';\r\n                                    var prop = p[i][''p''];\r\n                                    var toCSS = [];\r\n                                    toCSS[p[i][''p'']] = rgbColor;\r\n                                    el.css(toCSS);\r\n                                }                                    \r\n                                o[ei].index+=o[ei].back?-1:1;\r\n                                if(o[ei].index<=0)\r\n                                    o[ei].index = 0;\r\n                                else if(o[ei].index>=n)\r\n                                    o[ei].index = n;\r\n                                FenxJS._temp.fadecolor[''index''+ei] = o[ei].index;\r\n                                if(o[ei].index>=n||o[ei].index<=0)\r\n                                    clearInterval(FenxJS._temp.fadecolor[''intId''+ei]); \r\n                            },\r\n                            run: function(){\r\n                                var params = [];\r\n                                for( var i=0; i<p.length;i++ ){\r\n                                    params[i] = [];\r\n                                    params[i][''p''] = p[i];\r\n                                    params[i][''sc''] = _().hex2rgb(sc[i]||''#0000FF'');\r\n                                    params[i][''fc''] = _().hex2rgb(fc[i]||''#FF0000'');\r\n                                }\r\n                                FenxJS._temp.fadecolor[''intId''+ei] = setInterval(function(){\r\n                                    o[ei].fade(o[ei].elem,params);\r\n                                },o[ei].fl(o[ei].speed));\r\n                            }\r\n                        };                            \r\n                        clearInterval(FenxJS._temp.fadecolor[''intId''+ei]);\r\n                        o[ei].run();  \r\n                    }\r\n                };\r\n            \r\n                FenxJS.fenxFunc = {\r\n                    ext:    function( extention ){\r\n                                for( var key in extention ) \r\n                                    FenxJS.customExt[ key ] = extention[ key ];\r\n                            }\r\n                };\r\n            \r\n                window._ = function( selector ){\r\n                    return FenxJS.get( selector, _doc );\r\n                }\r\n                window.__ = {\r\n                    ext: FenxJS.fenxFunc.ext,\r\n                    debug: FenxJS.debug,\r\n                    instance: function(){\r\n                        return function( selector ){return FenxJS.get( selector, _doc );}\r\n                    }\r\n                };              \r\n                \r\n                Array.prototype.merge = function( object ){\r\n                    if( typeof object == ''object'' ){\r\n                        for( var v = 0; v < object.length; v++ ) \r\n                            this.push(object[v]);\r\n                    }    \r\n                };\r\n                \r\n                //temp vars init\r\n                this._temp[''debug''] = {\r\n                    qc:0\r\n                };\r\n                this._temp[''globalCount'']=0;\r\n                \r\n            },\r\n            createTemp: function(tempName){\r\n                if(typeof this._temp[tempName.toLowerCase()] != ''object'')\r\n                    this._temp[tempName.toLowerCase()] = {};\r\n            },        \r\n            setUniIds: function(elements){\r\n                var ce, k=0, uniId, outputElem=[];\r\n                while( ce = elements[k++] ){\r\n                    uniId = ce.nodeName.toLowerCase() + '''' + this._temp.globalCount++;\r\n                    if(!ce[''__uniId''])\r\n                        ce[''__uniId''] = uniId;\r\n                    outputElem[k-1] = ce;\r\n                }\r\n                return outputElem;\r\n            },\r\n            allMethods: function(){\r\n                \r\n                var fenxObj = [];  \r\n                \r\n                fenxObj.attach = function( elements ){\r\n                    var key = 0, elem;\r\n                    while( elem = elements[key++] )\r\n                        this[ this.length ] = elem;\r\n                    return this; \r\n                }   \r\n                \r\n                for( var key in FenxJS.defaultExt ){\r\n                    fenxObj[ key ] = FenxJS.defaultExt[ key ];\r\n                    this.createTemp(key);\r\n                }\r\n                    \r\n                \r\n                for( var key in FenxJS.customExt ){\r\n                    fenxObj[ key ] = FenxJS.customExt[ key ];  \r\n                    this.createTemp(key);\r\n                } \r\n                \r\n                return fenxObj;\r\n                \r\n            },\r\n            \r\n            get: function( selector, _from ){\r\n                \r\n                if( _from._oID == undefined ) _from._oID = _objectID++;\r\n\r\n                var output = FenxJS.allMethods();                \r\n                var element = [];\r\n                var uniName = selector + ''|'' + _from._oID;\r\n\r\n                // select elements\r\n                if( typeof selector == ''string'' ){\r\n                    if( this._cache[ uniName ] ){           \r\n                        element = this._cache[ uniName ]; // get from cache                                        \r\n                    }else{  \r\n                        if(_regexp.byclass.test( selector )){ \r\n                            var _match = selector.match( _regexp.byclass );                                        \r\n                            element = this.getByClassAndTag( _match[3] || '''', _match[1] || ''*'', _from );\r\n                            this._cache[ uniName ] = element;                        \r\n                        }else if( _regexp.byid.test( selector ) ){\r\n                            var _match = selector.match( _regexp.byid );     \r\n                            element = this.getByID( _match[3] || '''', _match[1] || ''*'', _from );        \r\n                            this._cache[ uniName ] = element;                      \r\n                        }else if( _regexp.byattr.test( selector ) ){                        \r\n                            var _match = selector.match( _regexp.byattr );                           \r\n                            element = this.getByAttr( _match[2] || '''', _match[1] || ''*'', _from );\r\n                            this._cache[ uniName ] = element;                        \r\n                        }                    \r\n                    }\r\n                    output[''__noCache''] = {\r\n                        s:selector,\r\n                        cacheUni:uniName\r\n                    };\r\n                    \r\n                }else if( typeof selector == ''object'' ){\r\n                    element = new Array(selector);\r\n                }\r\n                                \r\n                output = output.attach(this.setUniIds(element));\r\n                \r\n                return output;\r\n                           \r\n            },\r\n            \r\n            //select\r\n            getByID: function( findID, tag, _from ){                \r\n                if( tag == '''' || tag == ''*'' ){\r\n                    return [_from.getElementById( findID )];\r\n                }else{\r\n                    var elem = _from.getElementById( findID );\r\n                    if(!elem)return[];\r\n                    if( tag.toLowerCase() == elem.nodeName.toLowerCase() ){\r\n                        return [_from.getElementById( findID )];\r\n                    }                   \r\n                }                \r\n            },\r\n            \r\n            getByClassAndTag: function( findClass, tag, _from ){            \r\n                var el_obj = ( tag == ''*'' && _from.all ) ? _from.all : _from.getElementsByTagName( tag ), i = 0, curr_el, el_buf = [];   \r\n    \r\n                while( curr_el = el_obj[ i++ ] ){\r\n                    if( curr_el.className.match( new RegExp(''(\\\\s|^)'' + findClass + ''(\\\\s|$)'') ) ){\r\n                        el_buf[ el_buf.length ] = curr_el;\r\n                    }else if(!findClass){\r\n                        el_buf[ el_buf.length ] = curr_el;\r\n                    }\r\n                }\r\n                \r\n                return el_buf;\r\n            },\r\n            \r\n            getByAttr: function( selector, tag, _from ){\r\n                \r\n                var _elements = ( tag == ''*'' ) ? _from.all : _from.getElementsByTagName( tag );\r\n                var _buf = currElem = [];\r\n                var _r = /^\\[(\\w+)([=\\*]?)=?"?([^:\\\\\\/\\|\\*\\<\\>\\?\\"]+)"?\\]$/;            \r\n                var _m = selector.match(_r);   \r\n                var _attr = (_m[1] == ''class'') ? ''className'' : _m[1];\r\n                var _mode = _m[2];\r\n                var _val = _m[3];\r\n                var _c = 0;\r\n                var _getElem = true;\r\n                \r\n                while( currElem = _elements[_c++] ){\r\n                    _getElem = true;                \r\n                    if( _mode == ''='' ){       \r\n                        if( currElem[_attr] != _val ) \r\n                            _getElem = false;\r\n                    }else if( _mode == ''*'' ){\r\n                        if( currElem[_attr].indexOf( _val ) == -1 ) \r\n                            _getElem = false;\r\n                    }                \r\n                    if( _getElem === true ) \r\n                        _buf[ _buf.length ] = currElem;                \r\n                }    \r\n                \r\n                return _buf;\r\n                            \r\n            },\r\n            addEvent: function( elem, type, func ){ \r\n                if( typeof func != ''function'' ) return;\r\n                if( document.addEventListener ){\r\n                    elem.addEventListener( type, func, false );                               \r\n                }\r\n                else if( document.attachEvent ){                                  \r\n                    elem[''func''+type] = func;\r\n                    func = null;\r\n                    elem[''handler''+type] = function(){\r\n                        elem[''func''+type](window.event);\r\n                    }\r\n                    elem[''attachEvent''](''on''+type, elem[''handler''+type]);                \r\n                }else{\r\n                    elem[''on''+type] = func;              \r\n                } \r\n            },\r\n            removeEvent: function( elem, type, func ){\r\n                if( document.removeEventListener ){\r\n                    if( typeof func == ''function'' ){\r\n                        elem.removeEventListener( type, func, false );\r\n                    }                \r\n                }else if( document.detachEvent ){\r\n                    if( typeof func == ''function'' ){\r\n                        elem.detachEvent( ''on''+type, func );\r\n                    }                \r\n                }else{\r\n                    if( typeof func == ''function'' ){\r\n                        elem[''on''+type] = "";\r\n                    }                \r\n                } \r\n            },\r\n            \r\n            debug: function(data){\r\n                \r\n                var debugElem = {};\r\n                var htmlData = null;\r\n                var dataType = null;\r\n                var dataParams = null;\r\n                \r\n                if(typeof data == ''object''){\r\n                    dataType = ''Array/Object'';\r\n                }else if(typeof data == ''string''){\r\n                    htmlData = data;\r\n                    dataType = ''String'';\r\n                    dataParams = ''Length:''+data.length;                    \r\n                }\r\n                                \r\n                if(!_(''div#fenxDebug'').findNew().getDOMElement()){\r\n                    if(FenxJS._cache[''debugBlock'']==undefined){\r\n                        var debugElem = _().CreateDOM({tag:''div'',css:{\r\n                            margin:''5px auto'',\r\n                            padding:''5px'',\r\n                            ''background-color'':''#000'',\r\n                            color:''#0f0'',\r\n                            ''font-size'':''12px'',\r\n                            ''font-family'':''tahoma'',\r\n                            border:''2px solid #0a0'',\r\n                            position:''absolute'',\r\n                            ''left'':''15px''\r\n                        }});\r\n                        FenxJS._cache[''debugBlock''] = _(debugElem).transparence(80);\r\n                        debugElem = FenxJS._cache[''debugBlock''];\r\n                    }else{\r\n                        debugElem = FenxJS._cache[''debugBlock''];\r\n                    }\r\n                    _(''body'').prepend(debugElem.attr({''id'':''fenxDebug''}));\r\n                }\r\n                    \r\n                var debugInfo='''';\r\n                var debugElem = _(''div#fenxDebug'').findNew().getItem(0);\r\n                debugInfo += "<strong>FenxJS Debug <small>[count:"+ FenxJS._temp.debug.qc++ +"]</small></strong><br />";\r\n                debugInfo += "<strong>Type:</strong> "+dataType+"<br /><strong>Parameters:</strong> "+dataParams;\r\n                debugInfo += "<br /><br />"+htmlData;                \r\n                debugElem.html(debugInfo); \r\n                var debugElem_h = debugElem.getDOMElement().offsetHeight;\r\n                debugElem.css({top:(innerHeight-debugElem_h-20)+''px''});\r\n                                \r\n            },\r\n            \r\n            alertFenxJS: function( typemess, from, message ){\r\n                var _mess = "FenxJS: " + typemess + "\\n";\r\n                _mess += "[" + from + "]\\n";\r\n                _mess += message;\r\n                if( typeof message == ''string'' ){\r\n                    alert( _mess );\r\n                }\r\n            },\r\n            \r\n            alertError: function( from, message ){\r\n                FenxJS.alertFenxJS( ''Error'', from, message );\r\n            }      \r\n                      \r\n        };\r\n          \r\n    })();\r\n    FenxJS.coreInit();\r\n})();', 0, '', '2013-03-14 11:41:37');
INSERT INTO `codes` (`id`, `title`, `language`, `source`, `author_id`, `password`, `added_at`) VALUES
(2, 'URI-хуюри', 'php', '<?php\r\n	\r\n	namespace Sy;\r\n	\r\n	class URI{\r\n		\r\n		static private $_instances 	= array();\r\n		\r\n		private $_uri_vars 			= array();\r\n		\r\n		function __construct( $uri ){\r\n			$this->parse( $uri );\r\n		}\r\n		\r\n		private function parse( $uri ){\r\n			\r\n			$_parts = parse_url( $uri );\r\n			\r\n			if( ! isset( $_parts[''scheme''] ) ){			\r\n				$this->_uri_vars[''scheme''] = ''http'';				\r\n				if( !! $_SERVER[''HTTPS''] && strtolower( $_SERVER[''HTTPS''] ) == ''on'' ){\r\n					$this->_uri_vars[''scheme''] .= ''s'';\r\n				}							\r\n			}else{\r\n				$this->_uri_vars[''scheme''] = $_parts[''scheme''];\r\n			}\r\n			\r\n			if( ! isset( $_parts[''host''] ) ){			\r\n				$this->_uri_vars[''host''] = $_SERVER[''HTTP_HOST''];					\r\n			}else{\r\n				$this->_uri_vars[''host''] = $_parts[''host''];\r\n			}\r\n			\r\n			if( ! empty( $_parts[''path''] ) ){\r\n				$this->_uri_vars[''path''] = array();\r\n\r\n				if( ! isset( $_parts[''host''] ) || in_array( $this->_uri_vars[''host''], array( $_SERVER[''HTTP_HOST''], $_SERVER[''SERVER_ADDR''] ) ) ){\r\n					$base = preg_replace( ''/\\\\+/'', ''/'', rtrim( dirname( $_SERVER[''SCRIPT_NAME''] ), ''/'' ) ) . ''/'';\r\n					$path = str_replace( rtrim( $base, ''/'' ), '''', $_parts[''path''] );\r\n				}else{\r\n					$base 	= ''/'';\r\n					$path 	= $_parts[''path''];\r\n				}\r\n\r\n				$this->_uri_vars[''path''][''base''] 	= $base;\r\n				$this->_uri_vars[''path''][''uri''] 	= $path;\r\n			}\r\n			\r\n			if( ! empty( $_parts[''query''] ) ){\r\n				$this->_uri_vars[''query''] = array();\r\n				$this->_uri_vars[''query''][''string''] = $_parts[''query''];\r\n\r\n				parse_str( $_parts[''query''], $this->_uri_vars[''query''][''vars''] );\r\n			}else{\r\n				$this->_uri_vars[''query''] = array();\r\n			}\r\n			\r\n		}\r\n		\r\n		static public function getInstance( $uri = false ){\r\n			\r\n			$hash = md5( $uri );\r\n			\r\n			if(is_object( self::$_instances[$hash] )){\r\n				return self::$_instances[$hash];\r\n			}\r\n			\r\n			if( $uri === false ){\r\n				$uri = null;				\r\n				$uri = ''http'';\r\n				\r\n				if( !! $_SERVER[''HTTPS''] && strtolower( $_SERVER[''HTTPS''] ) == ''on'' ){\r\n					$uri .= ''s'';\r\n				}\r\n				\r\n				$uri .= ''://'';\r\n				$uri .= $_SERVER[''HTTP_HOST''] . '''' . $_SERVER[''REQUEST_URI''];\r\n			}\r\n					\r\n			self::$_instances[$hash] = new URI( $uri );\r\n			\r\n			return self::$_instances[$hash];\r\n			\r\n		}\r\n		\r\n		public function setVar(){\r\n		\r\n			$args = func_get_args();\r\n			\r\n			if( func_num_args() == 1 && is_array($args[0] ) ){			\r\n				foreach( $args[0] as $key => $value ){\r\n					$this->_uri_vars[''query''][''vars''][$key] = $value; \r\n				}				\r\n			}else{			\r\n				$this->_uri_vars[''query''][''vars''][$args[0]] = $args[1]; 				\r\n			}\r\n			\r\n			$this->_uri_vars[''query''][''string''] = http_build_query( $this->_uri_vars[''query''][''vars''] ); \r\n			\r\n			return $this;\r\n			\r\n		}\r\n		\r\n		public function buildURL(){\r\n			$parts = func_get_args();\r\n			$uri = null;\r\n			\r\n			foreach( $parts as $part ){\r\n				switch(strtolower($part)){\r\n					case ''scheme'':\r\n						$uri .= $this->_uri_vars[''scheme''] . ''://'';\r\n					break;\r\n					case ''host'':\r\n						$uri .= $this->_uri_vars[''host''];\r\n					break;\r\n					case ''path_base'':\r\n						$uri .= $this->_uri_vars[''path''][''base''];\r\n					break;\r\n					case ''path_uri'':\r\n					case ''path'':\r\n						$uri .= $this->_uri_vars[''path''][''base''] . ltrim( $this->_uri_vars[''path''][''uri''], ''/'' );\r\n					break;\r\n					case ''query'':\r\n						if( ! empty( $this->_uri_vars[''query''][''string''] ) ){\r\n							$uri .= ''?'' . $this->_uri_vars[''query''][''string''];\r\n						}						\r\n					break;\r\n				}\r\n			}\r\n			\r\n			return urldecode($uri);\r\n		}\r\n		\r\n		public function link( $host = false ){\r\n		\r\n			if( ! is_object( $this ) ){\r\n				$uri = self::getInstance();\r\n			}else{\r\n				$uri = $this;\r\n			}\r\n			\r\n			if($host){\r\n				return $uri->buildURL(''scheme'',''host'',''path'',''query'');\r\n			}else{\r\n				return $uri->buildURL(''path'',''query'');\r\n			}\r\n			\r\n		}\r\n		\r\n		static public function root( $host = false ){\r\n		\r\n			$uri = self::getInstance( false );\r\n			\r\n			if($host){\r\n				return $uri->buildURL(''scheme'',''host'',''path_root'');\r\n			}else{\r\n				return $uri->buildURL(''path_root'');\r\n			}\r\n			\r\n		}\r\n		\r\n		static public function base($host = false){\r\n		\r\n			$uri = self::getInstance( false );\r\n			\r\n			if($host){\r\n				return $uri->buildURL(''scheme'',''host'',''path_base'');\r\n			}else{\r\n				return $uri->buildURL(''path_base'');\r\n			}\r\n			\r\n		}\r\n		\r\n		static public function current( $host = false ){\r\n			\r\n			$uri = self::getInstance( false );\r\n			\r\n			if( $host ){\r\n				return $uri->buildURL( ''scheme'', ''host'', ''path'', ''query'' );\r\n			}else{\r\n				return $uri->buildURL( ''path'', ''query'' );\r\n			}		\r\n			\r\n		}\r\n		\r\n		static public function back( $host = false ){\r\n		\r\n			if( ! $_SERVER[''HTTP_REFERER''] ){\r\n				return self::base( $host );\r\n			}\r\n			\r\n			$uri = self::getInstance( $_SERVER[''HTTP_REFERER''] );\r\n			\r\n			if($host){\r\n				return $uri->buildURL( ''scheme'', ''host'', ''path'', ''query'' );\r\n			}else{\r\n				return $uri->buildURL( ''path'', ''query'' );\r\n			}\r\n		}\r\n		\r\n		static public function sef_url(){\r\n			$uri = self::getInstance( false );\r\n			return $uri->buildURL( ''path_root'' );\r\n		}\r\n		\r\n	}\r\n', 0, '', '2013-03-14 11:31:58'),
(3, 'Govno code', 'php', '$categ 			= (int) reset(@explode(''-'', $_GET[4]));\r\n		$region			= (int) reset(@explode(''-'', $_GET[3]));\r\n		$city			= (int) reset(@explode(''-'', $_GET[5]));\r\n		$page_limit 	= (int) $_GET[6];\r\n		\r\n		$page			= $page_limit > 0 ? $page_limit : 1;\r\n		$count			= 21;\r\n		\r\n		$all_count 		= Site::getOffersCount2($categ, $region, $city);\r\n		$pages = ceil($all_count/$count);\r\n		\r\n		$limit = ($count * $page) - $count;\r\n		$limit = $limit.'',''.$count;\r\n		\r\n		$array 	= Site::getOffersList2($limit, $categ, $region, $city);\r\n		\r\n		$categs	= Site::getOffersCategories($categ, $region, $city);\r\n		$cities = Site::getCities($city, $region, $categ);\r\n		\r\n		$active_region = $db->selectOneRow("SELECT name FROM `all_regions` WHERE id = $region");\r\n		\r\n		$tpl->set(''active_region'', $active_region[''name'']);\r\n		$tpl->set(''active_categ'', ($categs[''active''] != null ? $categs[''active''] : ''Выберите специализацию''));\r\n		$tpl->set(''active_city'', ($cities[''active''] != null ? $cities[''active''] : ''Все города''));\r\n		$tpl->set(''repeat-categs'', $categs[''list'']);\r\n		$tpl->set(''repeat-regions'', $cities[''list'']);\r\n		\r\n		echo $tpl->get(''offers-filter.tpl'');\r\n		\r\n		if ($categ > 0 and $city == null) {\r\n			$meta = $db->selectOneRow("SELECT meta_title, meta_keys, meta_desc FROM `categories` WHERE id = $categ");\r\n			\r\n			$core->setHeader(''title'', $meta[''meta_title'']);\r\n			$core->setHeader(''keywords'', $meta[''meta_keys'']);\r\n			$core->setHeader(''description'', $meta[''meta_desc'']);\r\n		}\r\n		elseif ($categ > 0 and $city > 0) {\r\n			$meta = $db->selectOneRow("SELECT meta_title, meta_keys, meta_desc,\r\n				(SELECT name FROM `all_regions` WHERE id = $region) AS region,\r\n				(SELECT name FROM `all_cities` WHERE id = $city) AS city\r\n				FROM `categories` \r\n				WHERE id = $categ");\r\n			\r\n			$core->setHeader(''title'', $meta[''meta_title''].'', ''.$meta[''region''].'', ''.$meta[''city'']);\r\n			$core->setHeader(''keywords'', $meta[''meta_keys''].'', ''.$meta[''region''].'', ''.$meta[''city'']);\r\n			$core->setHeader(''description'', $meta[''meta_desc''].'', ''.$meta[''region''].'', ''.$meta[''city'']);\r\n		}\r\n		elseif ($categ == null and $city > 0) {\r\n			$meta = $db->selectOneRow("SELECT name FROM `all_cities` WHERE id = $city");\r\n			\r\n			$core->setHeader(''title'', ''Каталог стоматологических клиник Украины, ''.$meta[''name'']);\r\n			$core->setHeader(''keywords'', ''Каталог стоматологических клиник Украины, ''.$meta[''name'']);\r\n			$core->setHeader(''description'', ''Каталог стоматологических клиник Украины, ''.$meta[''name'']);\r\n		}\r\n		else {\r\n			$meta = $db->selectOneRow("SELECT name FROM `all_regions` WHERE id = $region");\r\n			\r\n			$core->setHeader(''title'', ''Каталог стоматологических клиник Украины, ''.$meta[''name'']);\r\n			$core->setHeader(''keywords'', ''Каталог стоматологических клиник Украины, ''.$meta[''name'']);\r\n			$core->setHeader(''description'', ''Каталог стоматологических клиник Украины, ''.$meta[''name'']);\r\n		}\r\n		\r\n		if ($array) {\r\n			\r\n			for ($_i = 1; $_i<=$pages; $_i++) {\r\n				$nav_categ 	= $categ > 0 ? $_GET[4] : 0;\r\n				$nav_region	= $city > 0 ? $_GET[5] : 0;\r\n				\r\n				$index		= ($categ > 0 or $region > 0) ? ''/offers/region/''.$_GET[3].''/''.$nav_categ.''/''.$nav_region : ''/offers'';\r\n	\r\n				$navigation[] = array(\r\n					''page'' 	=> $_i,\r\n					''link''	=> ($_i > 1 ? ''/offers/region/''.$_GET[3].''/''.$nav_categ.''/''.$nav_region.''/''.$_i : $index),\r\n					''class'' => (($page > 0 ? $page == $_i : $page = 1) ? ''active'' : '' '')\r\n				);	\r\n			}\r\n			\r\n			$tpl->set(''repeat'', $navigation);\r\n			$navigation = $tpl->get(''pagination.tpl'');\r\n			\r\n			for ($i=0, $c = count($array); $i < $c; $i++) {\r\n				\r\n				if ($array[$i][''link''] != null) {\r\n					$array[$i][''url''] 		= ''/offers/full/''.$array[$i][''id''];\r\n					$array[$i][''class'']	= '''';\r\n				}\r\n				else {\r\n					$array[$i][''url''] 		= ''/clinic/''.$array[$i][''id_clinic''];\r\n					$array[$i][''class'']	= ''class="den-clinic-link"'';\r\n				}\r\n				\r\n				$next = Site::getNextOfferId($array[$i][''id''], $array[$i][''id_clinic'']);\r\n				\r\n				$page = count(explode('','', $array[$i][''ids'']))-1;\r\n				\r\n				if ($next > 0 and $categ == null) {\r\n					$tpl->set(''ids'', $array[$i][''ids'']);\r\n					$tpl->set(''page_prev'', $page);\r\n					$array[$i][''nav''] = $tpl->get(''offers-navigation.tpl'');\r\n				}\r\n				else \r\n					$array[$i][''nav''] = '''';\r\n			}\r\n			\r\n			$tpl->set(''pagination'', $navigation);\r\n			$tpl->set(''repeat'', $array);\r\n			echo $tpl->get(''offers-list-2.tpl'');\r\n		}\r\n		else {\r\n			$tpl->set(''text'', ''По Вашим параметрам не найдено ни одного предложения'');\r\n			echo $tpl->get(''warning.tpl'');\r\n		}', 0, '', '2013-01-30 16:01:13'),
(4, 'Logger_pro', 'php', '<?php\r\n\r\n	$log = Logger::getInstance( ''api'' );\r\n\r\n	$log\r\n		->type( ''error'' )\r\n		->add( ''db not connection'' )\r\n		->newLog( ''db_queries'' )\r\n		->type( ''notice'' )\r\n		->add( $sql_query )\r\n		->swichTo( ''api'' )\r\n		->mailReport( '''' )\r\n		->smsReport( '''' )\r\n		->writeAll();', 0, '', '2013-02-05 13:31:27'),
(5, 'LoggerPro', 'php', '<?php\r\n\r\n	namespace Sy\\Debug;\r\n\r\n	class LoggerPro{\r\n\r\n\r\n		static private 	\r\n			$_instances = array(),\r\n			$_config 	= array();\r\n\r\n		private\r\n			$_db		= null;\r\n\r\n		public function setConfigINI( $configFile = null ){\r\n			if( ! file_exists( $configFile ) || ! is_readable( $configFile ) ){\r\n				throw new \\Exception( ''Config file dosnt exists'' );\r\n			}\r\n			self::$_config = parse_ini_file( $configFile, true );\r\n			return true;\r\n		}\r\n\r\n		public function setConnection( LogDB $db ){\r\n			if( empty( $this->_db ) || ! ( $this->_db instanceOf LogDB ) ){\r\n				$this->_db = $db;\r\n			}\r\n		}\r\n\r\n		public function switchTo( $logName = null ){\r\n\r\n\r\n			return self::$_instances[$logName];\r\n\r\n		}\r\n\r\n		public function newLog( $logName = null ){\r\n\r\n			if( \r\n				empty( self::$_instances[$logName] ) \r\n				|| ! ( self::$_instances[$logName] instanceOf \\Sy\\Debug\\WritterLog ) \r\n			){\r\n				self::$_instances[$logName] = new WritterLog;\r\n			}\r\n\r\n			return self::$_instances[$logName];\r\n\r\n		}\r\n\r\n		public function mailReport( $mailText = null ){\r\n\r\n			\r\n\r\n		}\r\n\r\n		public function smsReport( $mailText = null ){\r\n\r\n			\r\n\r\n		}\r\n\r\n	}\r\n\r\n	class WritterLog{\r\n\r\n		private \r\n			$_type 			= null,\r\n			$_file 			= null,\r\n			$_table			= null;\r\n			$_writerType	= null;\r\n\r\n		public function \r\n\r\n	}', 0, '', '2013-02-05 15:11:43'),
(6, 'Real IP', 'php', 'public function getRealIP(){\r\n		    if( $_SERVER[''HTTP_X_FORWARDED_FOR''] != '''' ) { \r\n		        $client_ip = ( !empty($_SERVER[''REMOTE_ADDR'']) ) ? $_SERVER[''REMOTE_ADDR''] :(( !empty($_ENV[''REMOTE_ADDR'']) ) ? $_ENV[''REMOTE_ADDR''] : "unknown" );\r\n\r\n		         $entries = split(''[, ]'', $_SERVER[''HTTP_X_FORWARDED_FOR'']);\r\n		        reset($entries);\r\n		        while (list(, $entry) = each($entries)){\r\n		            $entry = trim($entry);\r\n		            if ( preg_match("/^([0-9]+.[0-9]+.[0-9]+.[0-9]+)/", $entry, $ip_list) ){\r\n		                // http://www.faqs.org/rfcs/rfc1918.html\r\n		                $private_ip = array(\r\n		                    ''/^0./'',\r\n		                    ''/^127.0.0.1/'',\r\n		                    ''/^192.168..*/'',\r\n		                    ''/^172.((1[6-9])|(2[0-9])|(3[0-1]))..*/'',\r\n		                    ''/^10..*/'');\r\n		                $found_ip = preg_replace($private_ip, $client_ip, $ip_list[1]);\r\n		                if ($client_ip != $found_ip){\r\n		                    $client_ip = $found_ip;\r\n		                    break;\r\n		                }\r\n		            }\r\n		        }\r\n		    } else {\r\n		        $client_ip = ( !empty($_SERVER[''REMOTE_ADDR'']) ) ? $_SERVER[''REMOTE_ADDR''] : ( ( !empty($_ENV[''REMOTE_ADDR'']) ) ? $_ENV[''REMOTE_ADDR''] : "unknown" );\r\n		        if ($client_ip == ''unknown'') {\r\n		            if (!empty($_SERVER[''HTTP_CLIENT_IP'']))   //check ip from share internet\r\n		            {\r\n		                $ip=$_SERVER[''HTTP_CLIENT_IP''];}\r\n		                elseif (!empty($_SERVER[''HTTP_X_FORWARDED_FOR'']))   //to check ip is pass from proxy\r\n		                {\r\n		                    $ip=$_SERVER[''HTTP_X_FORWARDED_FOR''];\r\n		                }\r\n		                else { \r\n		                    $ip=$_SERVER[''REMOTE_ADDR''];\r\n		                }\r\n		                $client_ip = $ip;\r\n		            }\r\n		        }\r\n		    return $client_ip;\r\n		}', 0, '', '2013-02-15 17:34:09'),
(7, 'пиздец', 'js', 'var n = 50,o = [],e,ei,ec=this.length;\r\n                        e=this; \r\n                        ei = e[0].__uniId;\r\n                        o[ei] = {\r\n                            elem:e.isFenxJS?e:_(e),\r\n                            back:b,\r\n                            speed:s/n,\r\n                            index:FenxJS._temp.fadecolor[''index''+ei]||0,\r\n                            fl: Math.floor,\r\n                            fade: function(el,p){\r\n                                var fPer=o[ei].index/n,sPer=1-fPer;                                    \r\n                                for(var i=0;i<p.length;i++){\r\n                                    var rgbColor = ''rgb(''+o[ei].fl(p[i][''sc''].r*sPer+p[i][''fc''].r*fPer)\r\n                                        +'', ''+o[ei].fl(p[i][''sc''].g*sPer+p[i][''fc''].g*fPer)\r\n                                        +'', ''+o[ei].fl(p[i][''sc''].b*sPer+p[i][''fc''].b*fPer)+'')'';\r\n                                    var prop = p[i][''p''];\r\n                                    var toCSS = [];\r\n                                    toCSS[p[i][''p'']] = rgbColor;\r\n                                    el.css(toCSS);\r\n                                }                                    \r\n                                o[ei].index+=o[ei].back?-1:1;\r\n                                if(o[ei].index<=0)\r\n                                    o[ei].index = 0;\r\n                                else if(o[ei].index>=n)\r\n                                    o[ei].index = n;\r\n                                FenxJS._temp.fadecolor[''index''+ei] = o[ei].index;\r\n                                if(o[ei].index>=n||o[ei].index<=0)\r\n                                    clearInterval(FenxJS._temp.fadecolor[''intId''+ei]); \r\n                            },\r\n                            run: function(){\r\n                                var params = [];\r\n                                for( var i=0; i<p.length;i++ ){\r\n                                    params[i] = [];\r\n                                    params[i][''p''] = p[i];\r\n                                    params[i][''sc''] = _().hex2rgb(sc[i]||''#0000FF'');\r\n                                    params[i][''fc''] = _().hex2rgb(fc[i]||''#FF0000'');\r\n                                }\r\n                                FenxJS._temp.fadecolor[''intId''+ei] = setInterval(function(){\r\n                                    o[ei].fade(o[ei].elem,params);\r\n                                },o[ei].fl(o[ei].speed));\r\n                            }\r\n                        };                            \r\n                        clearInterval(FenxJS._temp.fadecolor[''intId''+ei]);\r\n                        o[ei].run(); ', 0, '', '2013-02-21 22:28:17'),
(8, 'Govno', 'php', 'class DB {\r\n	private static $DBO;\r\n	\r\n	static public function connect() {\r\n		try {\r\n			self::$DBO = new PDO("mysql:host=localhost;dbname=db_navistom", ''root'', '''');\r\n			return true;\r\n		}\r\n		catch (PDOException $e) {\r\n			echo $e->getMessage();\r\n			return false;\r\n		}\r\n	}\r\n	\r\n	static public function query($query) {\r\n		return self::$DBO->query($query);\r\n	}\r\n	\r\n	static public function getAssocArray($query) {\r\n		$query = self::query($query);\r\n\r\n		return $query->fetchAll();\r\n	}\r\n}', 17, '123qwe', '2013-03-11 11:55:45'),
(9, 'Govno code', 'php', 'class DB {\r\n	private static $DBO;\r\n	\r\n	static public function connect() {\r\n		try {\r\n			self::$DBO = new PDO("mysql:host=localhost;dbname=db_navistom", ''root'', '''', array( PDO::MYSQL_ATTR_INIT_COMMAND => ''SET NAMES utf8'' ));\r\n			self::$DBO->setAttribute( PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION );\r\n			return true;\r\n		}\r\n		catch (PDOException $e) {\r\n			Debug::setError(''SQL'', $e->getMessage(), $e->getCode(), $e->getFile(), $e->getLine());\r\n			return false;\r\n		}\r\n	}\r\n	\r\n	static public function query($query) {\r\n		try {\r\n			$result = self::$DBO->query($query);\r\n		}\r\n		catch (PDOException $e) {\r\n			Debug::setError(''SQL'', $e->getMessage(), $e->getCode(), $e->getFile(), $e->getLine());\r\n			return false;\r\n		}\r\n		\r\n		return $result;\r\n	}\r\n	\r\n	static public function getAssocArray($query) {\r\n		try {\r\n			if ($query = self::query($query))\r\n				$result =  $query->fetchAll();\r\n		}\r\n		catch (PDOException $e) {\r\n			Debug::setError(''SQL'', $e->getMessage(), $e->getCode(), $e->getFile(), $e->getLine());\r\n			return false;\r\n		}\r\n		\r\n		return $result;\r\n	}\r\n}', 0, '', '2013-03-11 12:43:47'),
(10, 'Govno code', 'php', '<?php\r\n/**\r\n * Data Base class\r\n */\r\n\r\nclass DB {\r\n	private static $DBO;\r\n	\r\n	static public function connect() {\r\n		try {\r\n			self::$DBO = new PDO("mysql:host=localhost;dbname=db_navistom", ''root'', '''', array( PDO::MYSQL_ATTR_INIT_COMMAND => ''SET NAMES utf8'' ));\r\n			self::$DBO->setAttribute( PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION );\r\n			\r\n			return true;\r\n		}\r\n		catch (PDOException $e) {\r\n			Debug::setError(''SQL'', $e->getMessage(), $e->getCode(), $e->getFile(), $e->getLine());\r\n			return false;\r\n		}\r\n	}\r\n	\r\n	static public function query($query) {\r\n		try {\r\n			$result = self::$DBO->query($query);\r\n		}\r\n		catch (PDOException $e) {\r\n			Debug::setError(''SQL'', $e->getMessage(), $e->getCode(), $e->getFile(), $e->getLine());\r\n			return false;\r\n		}\r\n		\r\n		return $result;\r\n	}\r\n	\r\n	static public function getAssocArray($query) {\r\n		try {\r\n			if ($query = self::query($query))\r\n				$result =  $query->fetchAll(PDO::FETCH_ASSOC);\r\n		}\r\n		catch (PDOException $e) {\r\n			Debug::setError(''SQL'', $e->getMessage(), $e->getCode(), $e->getFile(), $e->getLine());\r\n			return false;\r\n		}\r\n		\r\n		return $result;\r\n	}\r\n	\r\n	static public function getNumArray($query) {\r\n		try {\r\n			if ($query = self::query($query))\r\n				$result =  $query->fetchAll(PDO::FETCH_NUM);\r\n		}\r\n		catch (PDOException $e) {\r\n			Debug::setError(''SQL'', $e->getMessage(), $e->getCode(), $e->getFile(), $e->getLine());\r\n			return false;\r\n		}\r\n		\r\n		return $result;\r\n	}\r\n	\r\n	static public function lastInsertId() {\r\n		return self::$DBO->lastInsertId();\r\n	}\r\n	\r\n	static public function delete($table, $where = null) {\r\n		try {\r\n			if ($where != null and is_array($where)) {\r\n				foreach ($where as $key => $val)\r\n					$_w[] = $key.'' = ''.self::$DBO->quote($val);\r\n				\r\n				$where = @implode('' AND '', $_w);\r\n			}\r\n			else \r\n				$where = 1;\r\n			\r\n			$result = self::$DBO->exec("DELETE FROM `$table` WHERE $where");\r\n		}\r\n		catch (PDOException $e) {\r\n			Debug::setError(''SQL'', $e->getMessage(), $e->getCode(), $e->getFile(), $e->getLine());\r\n			return false;\r\n		}\r\n		\r\n		return $result;\r\n	}\r\n	\r\n	static public function update($table, $write, $where = null) {\r\n		try {\r\n			if ($where != null and is_array($where)) {\r\n				foreach ($where as $key => $val)\r\n					$_w[] = $key.'' = ''.self::$DBO->quote($val);\r\n				\r\n				$where = @implode('' AND '', $_w);\r\n			}\r\n			else \r\n				$where = 1;\r\n			\r\n			foreach ($write as $key => $val)\r\n				$update[] = $key.'' = :''.$key;\r\n			\r\n			$update = @implode('', '', $update);\r\n			\r\n			$result = self::$DBO->prepare("UPDATE `$table` SET $update WHERE $where");\r\n			$result->execute($write);\r\n		}\r\n		catch (PDOException $e) {\r\n			Debug::setError(''SQL'', $e->getMessage(), $e->getCode(), $e->getFile(), $e->getLine());\r\n			return false;\r\n		}\r\n		\r\n		return $result;\r\n	}\r\n	\r\n}\r\n\r\n?>', 0, '', '2013-03-11 13:56:47'),
(11, 'Govno code', 'php', '<?php\r\n/**\r\n * Data Base class\r\n */\r\n\r\nclass DB {\r\n	private static $DBO;\r\n	\r\n	static public function connect($config) {\r\n		try {\r\n			self::$DBO = new PDO("mysql:host={$config[''host'']};dbname={$config[''name'']}", $config[''user''], $config[''passw''], array( PDO::MYSQL_ATTR_INIT_COMMAND => "SET NAMES {$config[''charset'']}" ));\r\n				\r\n			self::$DBO->setAttribute( PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION );\r\n			\r\n			return true;\r\n		}\r\n		catch (PDOException $e) {\r\n			Debug::setError(''SQL'', $e->getMessage(), $e->getCode(), $e->getFile(), $e->getLine());\r\n			return false;\r\n		}\r\n	}\r\n	\r\n	static public function query($query) {\r\n		try {\r\n			$result = self::$DBO->query($query);\r\n		}\r\n		catch (PDOException $e) {\r\n			Debug::setError(''SQL'', $e->getMessage(), $e->getCode(), $e->getFile(), $e->getLine());\r\n			return false;\r\n		}\r\n		\r\n		return $result;\r\n	}\r\n	\r\n	static public function getAssocArray($query) {\r\n		try {\r\n			if ($query = self::query($query))\r\n				$result =  $query->fetchAll(PDO::FETCH_ASSOC);\r\n		}\r\n		catch (PDOException $e) {\r\n			Debug::setError(''SQL'', $e->getMessage(), $e->getCode(), $e->getFile(), $e->getLine());\r\n			return false;\r\n		}\r\n		\r\n		return $result;\r\n	}\r\n	\r\n	static public function getNumArray($query) {\r\n		try {\r\n			if ($query = self::query($query))\r\n				$result =  $query->fetchAll(PDO::FETCH_NUM);\r\n		}\r\n		catch (PDOException $e) {\r\n			Debug::setError(''SQL'', $e->getMessage(), $e->getCode(), $e->getFile(), $e->getLine());\r\n			return false;\r\n		}\r\n		\r\n		return $result;\r\n	}\r\n	\r\n	static public function lastInsertId() {\r\n		return self::$DBO->lastInsertId();\r\n	}\r\n	\r\n	static public function delete($table, $where = null) {\r\n		try {\r\n			$where = DB::_whereReplace($where);\r\n			\r\n			$result = self::$DBO->exec("DELETE FROM `$table` WHERE $where");\r\n		}\r\n		catch (PDOException $e) {\r\n			Debug::setError(''SQL'', $e->getMessage(), $e->getCode(), $e->getFile(), $e->getLine());\r\n			return false;\r\n		}\r\n		\r\n		return $result;\r\n	}\r\n	\r\n	static public function update($table, $write, $where = null) {\r\n		try {\r\n			$where = DB::_whereReplace($where);\r\n			\r\n			foreach ($write as $key => $val)\r\n				$update[] = $key.'' = :''.$key;\r\n			\r\n			$update = @implode('', '', $update); \r\n			\r\n			$result = self::$DBO->prepare("UPDATE `$table` SET $update WHERE $where");\r\n			$result->execute($write);\r\n		}\r\n		catch (PDOException $e) {\r\n			Debug::setError(''SQL'', $e->getMessage(), $e->getCode(), $e->getFile(), $e->getLine());\r\n			return false;\r\n		}\r\n		\r\n		return $result;\r\n	}\r\n	\r\n	static public function insert($table, $write, $flag_replace = 0) {\r\n		try {\r\n			foreach ($write as $key => $val) {\r\n				$keys[] 	= $key;\r\n				$values[]	= '':''.$key;\r\n			}\r\n			\r\n			$keys 	= @implode('', '', $keys);\r\n			$values	= @implode('', '', $values);\r\n			\r\n			$comand = $flag_replace > 0 ? ''REPLACE INTO'' : ''INSERT INTO'';\r\n			\r\n			$result = self::$DBO->prepare("$comand `$table` ($keys) VALUES($values)");\r\n			$result->execute($write);\r\n		}\r\n		catch (PDOException $e) {\r\n			Debug::setError(''SQL'', $e->getMessage(), $e->getCode(), $e->getFile(), $e->getLine());\r\n			return false;\r\n		}\r\n		\r\n		return true;\r\n	}\r\n	\r\n	static private function _whereReplace($where) {\r\n		if ($where != null and is_array($where)) {\r\n			foreach ($where as $key => $val)\r\n				$_w[] = $key.'' = ''.self::$DBO->quote($val);\r\n			$where = @implode('' AND '', $_w);\r\n		}\r\n		else \r\n			$where = 1;\r\n			\r\n		return $where;\r\n	}\r\n}\r\n\r\n?>', 0, '', '2013-03-11 17:20:17'),
(12, 'Govno code', 'php', 'class Registry {\r\n	private static $data = array();\r\n	\r\n	public static function set($key, $value) {\r\n		self::$data[$key] = $value;\r\n		\r\n		return true;\r\n	}\r\n	\r\n	public static function get($key) {\r\n		return isset(self::$data[$key]) ? self::$data : null;\r\n	}\r\n	\r\n	public static function remove($key) {\r\n		if (isset(self::$data[$key]))\r\n			unset(self::$data);\r\n		\r\n		return true;\r\n	}\r\n}', 0, '', '2013-03-12 16:16:56'),
(13, 'asdasd', 'php', 'private function init(){\r\n			$this->response->setHeader( ''X-Content-By'', \\Sy::poweredBy() );\r\n			$this->response->setHeader( ''X-Author'', SY_AUTHOR );\r\n			\r\n			// ActiveRecord\r\n			$dbConf 	= \\Sy::cfg( ''db'' );\r\n			$baseConf 	= \\Sy::cfg( ''base'' );\r\n\r\n			if( (int) $baseConf[''enableAR''] === 1 ){\r\n				include_once SY_PATH . DS . ''libs'' . DS . ''ActiveRecord'' . DS . ''ActiveRecord.php'';\r\n				\\ActiveRecord\\Config::initialize( function( $cfg ) use ( $dbConf ){				\r\n					$cfg->set_model_directory( APP_PATH . DS . ''model'' );				\r\n					$cfg->set_connections(array(\r\n						$dbConf[''ar_connection''] => $dbConf[''dsn'']\r\n					));\r\n					$cfg->set_default_connection( $dbConf[''ar_connection''] );				\r\n				});\r\n				// Attach DBO\r\n				$this->attachObject( ''db'', \\ActiveRecord\\ConnectionManager::get_connection( $db_conf[''ar_connection''] )->connection );\r\n			}else if( (int) $dbConf[''use_dbo''] === 1 ){\r\n				DBO::addConnections( $dbConf );\r\n				if( LOCALHOST ){\r\n					$connectionName = ''dev'';\r\n				}else{\r\n					$connectionName = ''production'';\r\n				}\r\n				DBO::setConnection( $connectionName );\r\n				$this->attachObject( ''db'', DBO::getInstance() );\r\n			}\r\n\r\n			\r\n		}', 0, '', '2013-03-12 16:22:21'),
(14, 'No title', 'php', '/^((([a-z]|\\d|[!#\\$%&''\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&''\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i', 0, '', '2013-03-13 13:01:39'),
(15, 'No title', 'html', '/^((([a-z]|\\d|[!#\\$%&''\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&''\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i', 0, '', '2013-03-13 13:01:52'),
(16, 'No title', 'php', '<?php\r\n\r\nclass Request {\r\n	public static function post($key, $type = null) {\r\n		if ($type != null)\r\n			return self::filter($_POST[$key], $type);\r\n		\r\n		return $_POST[$key];\r\n	}\r\n	\r\n	public static function get($key, $type = null) {\r\n		if ($type != null)\r\n			return self::filter($_GET[$key], $type);\r\n		\r\n		return $_GET[$key];\r\n	}\r\n	\r\n	public static function all($key, $type = null) {\r\n		\r\n	}\r\n	\r\n	public static function cookie($key, $type = null, $time = 0) {\r\n		\r\n	}\r\n	\r\n	public static function setPost($key, $value, $type = null) {\r\n		\r\n	}\r\n	\r\n	public static function setGet($key, $value, $type = null) {\r\n		\r\n	}\r\n	\r\n	private static function filter($str, $type) {\r\n		switch ($type) {\r\n			case ''int'':\r\n				return Str::get($str)->filterInt();\r\n			break;\r\n			case ''float'':\r\n				return Str::get($str)->filterFloat();\r\n			break;\r\n			case ''string'':\r\n				return Str::get($str)->filterString();\r\n			break;\r\n			case ''url'':\r\n				return Str::get($str)->filterURL();\r\n			break;\r\n			case ''email'':\r\n				return Str::get($str)->filterEmail();\r\n			break;\r\n			case ''translit'':\r\n				return Str::get($str)->translit();\r\n			break;\r\n			case ''translitURL'':\r\n				return Str::get($str)->translitURL();\r\n			break;\r\n		}\r\n		\r\n		return $str;\r\n	}\r\n}', 0, '', '2013-03-13 13:32:01'),
(17, 'No title', 'php', '$module 	= Request::get(''module'');\r\n$method 	= Request::get(''method'');\r\n$options	= Request::get(''options'');\r\n\r\nif ($module != null) {\r\n	$file = dirname(__FILE__).DIRECTORY_SEPARATOR.''modules''.DIRECTORY_SEPARATOR.$module.DIRECTORY_SEPARATOR.$module.''.module.php'';\r\n	\r\n	if (is_file($file)) {\r\n		include_once($file);\r\n		\r\n		if (class_exists($module)) {\r\n			$modClass = new $module();\r\n			\r\n			if ($method != null and method_exists($modClass, $method)) {\r\n				\r\n				$reflection 	= new ReflectionMethod($modClass, $method);\r\n				$methodParams 	= (array) $reflection->getParameters();\r\n				\r\n				foreach ($methodParams as $key => $val) {\r\n					if (isset($options[$val->name]))\r\n						$args[] = $options[$val->name];\r\n					else \r\n						$args[] = null;\r\n				}\r\n				\r\n				call_user_func_array(array($modClass, $method), $args);\r\n			}\r\n			else {\r\n				$modClass->index();\r\n			}\r\n		}\r\n	}\r\n}\r\nelse {\r\n	\r\n}', 0, '', '2013-03-13 18:35:57'),
(18, 'No title', 'php', '$module 	= Request::get(''module'');\r\n$method 	= Request::get(''method'');\r\n$options	= Request::get(''options'');\r\n\r\nif ($module != null) {\r\n	$file = dirname(__FILE__).DIRECTORY_SEPARATOR.''modules''.DIRECTORY_SEPARATOR.$module.DIRECTORY_SEPARATOR.$module.''.module.php'';\r\n	\r\n	if (is_file($file)) {\r\n		include_once($file);\r\n		\r\n		if (class_exists($module)) {\r\n			$modClass = new $module();\r\n			\r\n			if ($method != null and method_exists($modClass, $method)) {\r\n				\r\n				$reflection 	= new ReflectionMethod($modClass, $method);\r\n				$methodParams 	= (array) $reflection->getParameters();\r\n				\r\n				if (count($methodParams)) {\r\n					foreach ($methodParams as $key => $val) {\r\n						if (isset($options[$val->name]))\r\n							$args[] = $options[$val->name];\r\n						else {\r\n							$param = new ReflectionParameter(array($modClass, $method), $val->name);\r\n							\r\n							if ($param->isOptional())\r\n								$args[] = $param->getDefaultValue();\r\n							else \r\n								$args[] = null;\r\n						}\r\n					}\r\n				}\r\n				\r\n				call_user_func_array(array($modClass, $method), $args);\r\n			}\r\n			else {\r\n				$modClass->index();\r\n			}\r\n		}\r\n	}\r\n}\r\nelse {\r\n	\r\n}', 0, '', '2013-03-13 18:50:40'),
(19, 'No title', 'php', '', 0, '', '2013-03-14 00:03:44'),
(20, 'No title', 'php', '<?php\r\n\r\nclass Core {\r\n	public static function Autoload() {\r\n		\r\n		function autoload($className) {\r\n			$fileName = CLASSES.strtolower($className).''.class.php'';\r\n			\r\n			if (is_file($fileName))\r\n				require_once($fileName);\r\n		}\r\n		\r\n		spl_autoload_register(''autoload'');\r\n		\r\n		return true;\r\n	}\r\n	\r\n	public static function Init() {\r\n		$module 	= Request::get(''module'');\r\n		$method 	= Request::get(''method'');\r\n		$options	= Request::get(''options'');\r\n		\r\n		if ($module != null) {\r\n			$file = FULLPATH.DIRECTORY_SEPARATOR.''modules''.DIRECTORY_SEPARATOR.$module.DIRECTORY_SEPARATOR.$module.''.module.php'';\r\n			\r\n			if (is_file($file)) {\r\n				include_once($file);\r\n				\r\n				if (class_exists($module)) {\r\n					$modClass = new $module();\r\n					\r\n					if ($method != null and method_exists($modClass, $method)) {\r\n						\r\n						$reflection 	= new ReflectionMethod($modClass, $method);\r\n						$methodParams 	= (array) $reflection->getParameters();\r\n						\r\n						$args = array();\r\n						\r\n						if (count($methodParams)) {\r\n							foreach ($methodParams as $key => $val) {\r\n								if (isset($options[$val->name]))\r\n									$args[] = $options[$val->name];\r\n								else {\r\n									if ($val->isOptional())\r\n										$args[] = $val->getDefaultValue();\r\n									else \r\n										$args[] = null;\r\n								}\r\n							}\r\n						}\r\n						\r\n						call_user_func_array(array($modClass, $method), $args);\r\n					}\r\n					else {\r\n						$modClass->index();\r\n					}\r\n				}\r\n			}\r\n		}\r\n		else {\r\n			\r\n		}\r\n	}\r\n}', 0, '', '2013-03-14 00:40:31'),
(21, 'Govno', 'php', '<?php\r\nsession_start();\r\n\r\ndefine(''TPL'', ''templates/'');\r\ndefine(''MODULES'', ''modules/'');\r\ndefine(''CLASSES'', ''classes/'');\r\ndefine(''CACHE'', ''cache/'');\r\ndefine(''CONFIG'', ''config/'');\r\ndefine(''LIBS'', ''libraries/'');\r\ndefine(''LANGS'', ''langs/'');\r\n\r\ndefine(''FULLPATH'', $_SERVER[''DOCUMENT_ROOT'']);\r\ndefine(''HOST'', $_SERVER[''HTTP_HOST'']);\r\ndefine(''FULLURL'', ''http://''.$_SERVER[''HTTP_HOST''].$_SERVER[''REQUEST_URI'']);\r\n\r\nrequire_once(CONFIG.''global.config.php'');\r\n\r\nrequire_once(CLASSES.''core.class.php'');\r\n\r\n/**\r\n * Init autoloader classes\r\n */\r\nCore::Autoload();\r\n\r\n/**\r\n * Init request core\r\n */\r\nRequest::Init();\r\n\r\n/**\r\n * Add global cofig to registry\r\n */\r\nRegistry::set(''config'', (object) $_config);\r\n\r\n/**\r\n * Init templating lib Twig\r\n */\r\nrequire_once(LIBS."Twig/Autoloader.php");\r\nTwig_Autoloader::register();\r\n\r\n$loader = new Twig_Loader_Filesystem(TPL.Registry::get(''config'')->template);\r\n$twig = new Twig_Environment($loader, array(\r\n    ''cache''       => Registry::get(''config'')->template_cache,\r\n    ''auto_reload'' => Registry::get(''config'')->auto_reload\r\n));\r\n\r\n/**\r\n * Add templating lib Twig to registry\r\n */\r\nRegistry::set(''twig'', $twig);\r\n\r\n/**\r\n * Modules loader init\r\n */\r\nCore::Init();\r\n\r\n?>', 0, '', '2013-03-14 11:28:52'),
(22, 'Image Class', 'php', '<?php\r\n    \r\n	namespace Sy\\Util;\r\n	\r\n    define( ''IMG_WATERMARK_TILE'', -1 );\r\n    define( ''IMG_WATERMARK_RIGHTBOTTOM'', 1 );\r\n    define( ''IMG_WATERMARK_LEFTBOTTOM'', 2 );\r\n    define( ''IMG_WATERMARK_RIGHTTOP'', 3 );\r\n    define( ''IMG_WATERMARK_LEFTTOP'', 4 );\r\n    define( ''IMG_WATERMARK_MIDDLE'', 5 );\r\n    \r\n    class Image{\r\n        \r\n        private $image,\r\n				$original,\r\n                $watermark;\r\n        \r\n        public function load( $filename ){\r\n            \r\n            if( ! file_exists( $filename ) ){\r\n                throw new \\Exception( ''File dosnt exists<br />[''. $filename .'']'' );\r\n            }\r\n            \r\n            $imageInfo = getimagesize( $filename );\r\n            \r\n            switch( $imageInfo[2] ){\r\n                case IMAGETYPE_JPEG:\r\n                    $this->image = imagecreatefromjpeg( $filename );\r\n                    break;\r\n                case IMAGETYPE_GIF:\r\n                    $this->image = imagecreatefromgif( $filename );\r\n                    break;\r\n                case IMAGETYPE_PNG:\r\n                    $this->image = imagecreatefrompng( $filename );\r\n                    break;\r\n                default:\r\n                    throw new Exception( ''Unknown type<br />[''. $imageInfo[2] .'']'' );\r\n                    break;  \r\n            }\r\n            \r\n			$this->original = $this->image;\r\n			\r\n            return $this;\r\n            \r\n        }\r\n        \r\n		public function resetToOriginal(){\r\n			\r\n			if( is_resource( $this->original ) ){\r\n				$this->image = $this->original;\r\n			}\r\n			\r\n			return $this;\r\n			\r\n		}\r\n		\r\n        public function loadWatermark( $filename ){\r\n            \r\n            if( ! file_exists( $filename ) ){\r\n                throw new Exception( ''Watermark file dosnt exists<br />[''. $filename .'']'' );\r\n            }\r\n            \r\n            $watermarkInfo = getimagesize( $filename );\r\n            \r\n            if( $watermarkInfo[2] == IMAGETYPE_PNG ){               \r\n                $this->watermark = imagecreatefrompng( $filename );\r\n            }else{\r\n                throw new \\Exception( ''Watermark must be just a PNG'' );\r\n            }\r\n            \r\n            return $this;\r\n            \r\n        }\r\n        \r\n        public function output( $imagetype = IMAGETYPE_JPEG ){\r\n            \r\n            switch( $imagetype ){\r\n                case IMAGETYPE_JPEG:\r\n                    header( ''Content-type: image/jpeg'' );\r\n                    imagejpeg( $this->image );\r\n                    break;\r\n                case IMAGETYPE_GIF:\r\n                    header( ''Content-type: image/gif'' );\r\n                    imagegif( $this->image );\r\n                    break;\r\n                case IMAGETYPE_PNG:\r\n                    header( ''Content-type: image/png'' );\r\n                    imagepng( $this->image );\r\n                    break;\r\n                default:\r\n                    header( ''Content-type: image/jpeg'' );\r\n                    imagejpeg( $this->image );\r\n                    break;  \r\n            }\r\n            \r\n            return $this;\r\n            \r\n        }\r\n        \r\n        public function save( $filename, $imagetype = IMAGETYPE_JPEG, $quality = 50, $permission = 0777, $own = -1 ){\r\n			\r\n			$dirname = dirname( $filename );\r\n\r\n            if( ! file_exists( $dirname ) ){\r\n            	@ mkdir( $dirname, 0777, true );\r\n            }\r\n			\r\n            switch( $imagetype ){\r\n                case IMAGETYPE_JPEG:\r\n                    imagejpeg( $this->image, $filename, $quality );\r\n                    break;\r\n                case IMAGETYPE_GIF:\r\n                    imagegif( $this->image, $filename );\r\n                    break;\r\n                case IMAGETYPE_PNG:\r\n                    imagepng( $this->image, $filename );\r\n                    break;\r\n                default:\r\n                    throw new \\Exception( ''Unknown type<br />[''. $imagetype .'']'' );\r\n                    break;  \r\n            }\r\n            \r\n            if( 0 < $permission ){\r\n                @ chmod( $filename, $permission );\r\n            }\r\n			\r\n			if( is_string( $own ) ){\r\n                @ chown( $filename, $own );\r\n            }\r\n            \r\n            return $this;\r\n            \r\n        }\r\n        \r\n        public function saveGif( $filename, $permission = 0777, $own = -1 ){\r\n            return $this->save( $filename, IMAGETYPE_GIF, -1, $permission, $own );\r\n        }\r\n        \r\n        public function savePng( $filename, $permission = 0777, $own = -1 ){\r\n            return $this->save( $filename, IMAGETYPE_PNG, -1, $permission, $own );\r\n        }\r\n        \r\n        public function saveJpeg( $filename, $quality = 50, $permission = 0777, $own = -1 ){\r\n            return $this->save( $filename, IMAGETYPE_JPEG, $quality, $permission, $own );\r\n        }\r\n        \r\n        public function resize( $width = -1, $height = -1 ){\r\n            \r\n            if( 0 >= (int) $width || 0 >= (int) $height ){\r\n                throw new \\Exception( ''Width or height is wrong<br />[Width:''. $width .'',Height:''. $height .'']'' );\r\n            }\r\n            \r\n            $blankImage = imagecreatetruecolor( $width, $height );          \r\n            imagecopyresampled( $blankImage, $this->image, 0, 0, 0, 0, $width, $height, $this->getWidth(), $this->getHeight() );            \r\n            $this->image = $blankImage;\r\n            \r\n            return $this;\r\n            \r\n        }\r\n        \r\n        public function resizeToWidth( $width ){\r\n        \r\n            $ratio  = $width / $this->getWidth();\r\n            $height = $this->getHeight() * $ratio;\r\n            \r\n            return $this->resize( $width, $height );\r\n            \r\n        }\r\n        \r\n        public function resizeToHeight( $height ){\r\n        \r\n            $ratio  = $height / $this->getHeight();\r\n            $width  = $this->getWidth() * $ratio;\r\n            \r\n            return $this->resize( $width, $height );\r\n            \r\n        }\r\n        \r\n        public function scale( $scale = 50 ){\r\n        \r\n            $width  = $this->getWidth() * $scale / 100;\r\n            $height = $this->getHeight() * $scale / 100;\r\n            \r\n            return $this->resize( $width, $height );\r\n            \r\n        }\r\n        \r\n		public function cropHeight( $height = -1 ){			\r\n			return $this->crop( $this->getWidth(), $height );			\r\n		}\r\n		\r\n		public function cropWidth( $width = -1 ){			\r\n			return $this->crop( $width, $this->getHeight() );			\r\n		}\r\n		\r\n		public function crop( $width = -1, $height = -1 ){\r\n			\r\n			if( 0 >= (int) $width || 0 >= (int) $height ){\r\n                throw new \\Exception( ''Width or height is wrong<br />[Width:''. $width .'',Height:''. $height .'']'' );\r\n            }\r\n			\r\n			$blankImage = imagecreatetruecolor( $width, $height );\r\n			imagefill( $blankImage, 0, 0, 0xFFFFFF );\r\n			\r\n			imagecopy( $blankImage, $this->image, 0, 0, 0, 0, $width, $height );\r\n			\r\n			$this->image = $blankImage;\r\n			\r\n			return $this;\r\n			\r\n		}\r\n		\r\n        public function getWidth(){\r\n            return imagesx( $this->image );\r\n        }\r\n        \r\n        public function getHeight(){\r\n            return imagesy( $this->image );\r\n        }\r\n        \r\n        public function addWatermark( $position = IMG_WATERMARK_RIGHTBOTTOM ){\r\n            \r\n            $margin             = 10;\r\n            $imageWidth         = $this->getWidth();\r\n            $imageHeight        = $this->getHeight();\r\n            $watermarkWidth     = imagesx( $this->watermark );\r\n            $watermarkHeight    = imagesy( $this->watermark );\r\n            \r\n            switch( $position ){\r\n            \r\n                case IMG_WATERMARK_LEFTTOP:\r\n                \r\n                    $x = $margin;\r\n                    $y = $margin;\r\n                    \r\n                    imagecopy( $this->image, $this->watermark, $x, $y, 0, 0, $watermarkWidth, $watermarkHeight );   \r\n                    \r\n                    break;\r\n                    \r\n                case IMG_WATERMARK_RIGHTTOP:    \r\n                \r\n                    $x = $imageWidth - $margin - $watermarkWidth;\r\n                    $y = $margin;\r\n                    \r\n                    imagecopy( $this->image, $this->watermark, $x, $y, 0, 0, $watermarkWidth, $watermarkHeight );   \r\n                    \r\n                    break;                   \r\n                    \r\n                case IMG_WATERMARK_LEFTBOTTOM:      \r\n                \r\n                    $x = $margin;\r\n                    $y = $imageHeight - $margin - $watermarkHeight;\r\n                    \r\n                    imagecopy( $this->image, $this->watermark, $x, $y, 0, 0, $watermarkWidth, $watermarkHeight );   \r\n                    \r\n                    break;        \r\n                    \r\n                case IMG_WATERMARK_RIGHTBOTTOM:     \r\n                \r\n                    $x = $imageWidth - $margin - $watermarkWidth;\r\n                    $y = $imageHeight - $margin - $watermarkHeight;\r\n                    \r\n                    imagecopy( $this->image, $this->watermark, $x, $y, 0, 0, $watermarkWidth, $watermarkHeight );   \r\n                    \r\n                    break;                          \r\n                    \r\n                case IMG_WATERMARK_MIDDLE:\r\n                \r\n                    $x = $imageWidth - ( ( $imageWidth / 2 ) + ( $watermarkWidth / 2 ) );\r\n                    $y = $imageHeight - ( ( $imageHeight / 2 ) + ( $watermarkHeight / 2 ) );\r\n                    \r\n                    imagecopy( $this->image, $this->watermark, $x, $y, 0, 0, $watermarkWidth, $watermarkHeight );   \r\n                    \r\n                    break;           \r\n                    \r\n                case IMG_WATERMARK_TILE:\r\n                    \r\n                    $inline     = ceil( $imageWidth / $watermarkWidth );\r\n                    $lines      = ceil( $imageHeight / $watermarkHeight );\r\n                    \r\n                    for( $i = 0; $i < $lines; $i++ ){\r\n                    \r\n                        for(  $j = 0; $j < $inline; $j++  ){\r\n                        \r\n                            $x = $j * $watermarkWidth;\r\n                            $y = $i * $watermarkHeight;\r\n                            \r\n                            imagecopy( $this->image, $this->watermark, $x, $y, 0, 0, $watermarkWidth, $watermarkHeight );\r\n                            \r\n                        }\r\n                        \r\n                    }\r\n                                              \r\n                    break;       \r\n                    \r\n            }\r\n            \r\n            return $this;\r\n            \r\n        }\r\n		\r\n		public function destroy(){\r\n			@ imagedestroy( $this->image );\r\n			@ imagedestroy( $this->original );\r\n			@ imagedestroy( $this->watermark );\r\n		}\r\n        \r\n        static public function getInstance(){\r\n            \r\n            static $instance;\r\n            \r\n            if( empty( $instance ) ){\r\n                $instance = new Image;\r\n            }\r\n            \r\n            return $instance;\r\n            \r\n        }\r\n        \r\n    }', 0, '', '2013-03-13 22:09:33');
INSERT INTO `codes` (`id`, `title`, `language`, `source`, `author_id`, `password`, `added_at`) VALUES
(23, 'Debug / Log', 'php', '<?php\r\n\r\n	namespace Sy\\Debug;\r\n\r\n	class Log{\r\n\r\n\r\n		static private 	\r\n			$_instances = array(),\r\n			$_config 	= array();\r\n\r\n		private\r\n			$_db		= null,\r\n			$_logName	= null;\r\n\r\n		public function setConfigINI( $configFile = null ){\r\n			if( ! file_exists( $configFile ) || ! is_readable( $configFile ) ){\r\n				throw new \\Exception( ''Config file dosnt exists'' );\r\n			}\r\n			self::$_config = parse_ini_file( $configFile, true );\r\n			//self::$_config[''log_dir''] = sprintf( self::$_config[''log_dir''], __DIR__ );\r\n			\r\n			return $this;\r\n		}\r\n\r\n		public function setConnection( LogDB $db ){\r\n			if( empty( $this->_db ) || ! ( $this->_db instanceOf LogDB ) ){\r\n				$this->_db = $db;\r\n			}\r\n			return $this;\r\n		}\r\n\r\n		public function switchTo( $logName = null ){\r\n\r\n			$this->_logName = $logName;\r\n\r\n			if( \r\n				empty( self::$_instances[$logName] ) \r\n				|| ! ( self::$_instances[$logName] instanceOf WriterLog ) \r\n			){\r\n				$this->newLog( $logName );\r\n			}\r\n\r\n			return $this;\r\n\r\n		}\r\n\r\n		public function newLog( $logName = null ){\r\n\r\n			$this->_logName = $logName;\r\n\r\n			if( \r\n				empty( self::$_instances[$logName] ) \r\n				|| ! ( self::$_instances[$logName] instanceOf WriterLog ) \r\n			){\r\n				self::$_instances[$logName] = new WriterLog( $logName, self::$_config );\r\n				self::$_instances[$logName]->setType( ''notice'' );\r\n			}\r\n\r\n			return $this;\r\n\r\n		}\r\n\r\n		public function mailReport( $mailText = null ){\r\n\r\n			$body 	= ''========== LoggerPro ==========<br /><br />'';\r\n			$body 	.= $mailText . ''<br /><br />'';\r\n			$body 	.= ''Server time: ''. date( ''Y-m-d H:i:s'' ) . ''<br />'';\r\n			$body 	.= ''Host: ''. $_SERVER[''HTTP_HOST''] . ''<br />'';\r\n			$body 	.= ''IP: ''. $_SERVER[''REMOTE_ADDR''];\r\n\r\n			$headers	= "MIME-Version: 1.0\\r\\n";\r\n			$headers 	.= "Content-type: text/html; charset=iso-8859-1\\r\\n";\r\n			$headers 	.= "From: LoggerPro Mailer <logger-mailer@127.0.0.1>\\r\\n";\r\n			$headers 	.= "Cc: ". self::$_config[''admin_mail''] ."\\r\\n";\r\n			$headers 	.= "Bcc: ". self::$_config[''admin_mail''] ."\\r\\n";\r\n\r\n			@ mail( \r\n				self::$_config[''admin_mail''], \r\n				self::$_config[''mail_subject''], \r\n				$body, \r\n				$headers\r\n			);\r\n\r\n			return $this;\r\n		}\r\n\r\n		public function smsReport( $mailText = null ){\r\n\r\n			return $this;\r\n\r\n		}\r\n\r\n		public function type( $type ){\r\n			self::$_instances[$this->_logName]->setType( $type );\r\n			return $this;\r\n		}\r\n\r\n		public function format( $format ){\r\n			self::$_instances[$this->_logName]->setFormat( $format );\r\n			return $this;\r\n		}\r\n\r\n		public function add( $message ){\r\n			self::$_instances[$this->_logName]->add( $message );\r\n			return $this;\r\n		}\r\n\r\n		public function writeAll(){\r\n			foreach ( self::$_instances as $instance ) {\r\n				$instance->write();\r\n				unset( $instance );\r\n			}\r\n			return $this;\r\n		}\r\n\r\n		public function separate(){\r\n			return clone $this;\r\n		}\r\n\r\n	}\r\n\r\n	class WriterLog{\r\n\r\n		const \r\n			FORMAT_LINES 	= 1,\r\n			FORMAT_SIMPLE	= 2,\r\n			FORMAT_XML		= 3;\r\n\r\n		private \r\n			$_type 			= null,\r\n			$_file 			= null,\r\n			$_table			= null,\r\n			$_writerType	= null,\r\n			$_format		= 1,\r\n\r\n			$_config		= null,\r\n			$_stack			= array(),\r\n\r\n			$_fh			= null;\r\n\r\n		public function __construct( $name, & $config ){			\r\n			$this->_config 	= & $config;\r\n			$this->_file 	= $config[''log_dir''] . ''/''. $name .''_'' . date( ''d-m-Y'' ) . ''.log'';\r\n\r\n			$dir = dirname( $this->_file );\r\n\r\n			if( ! file_exists( $dir ) ){\r\n				@ mkdir( $dir, 0777, true );\r\n			}\r\n\r\n			$this->_fh = fopen( $this->_file, ''a+'' );\r\n		}\r\n\r\n		public function __destruct(){\r\n			if( is_resource( $this->_fh ) ){\r\n				fclose( $this->_fh );\r\n			}\r\n		}\r\n\r\n		public function setFormat( $format ){\r\n			if( in_array( $format, array( self::FORMAT_LINES, self::FORMAT_SIMPLE, self::FORMAT_XML ) ) ){\r\n				$this->_format = $format;\r\n			}			\r\n		}\r\n\r\n		public function setType( $type ){\r\n			$this->_type = $type;\r\n		}\r\n\r\n		public function add( $message ){\r\n			@ $this->_stack[$this->_type][time()][] = $message;\r\n		}\r\n\r\n		public function write(){\r\n			$content = $this->_buildLogContent();\r\n			if( ! empty( $content ) ){\r\n				@ fwrite( $this->_fh, $content );\r\n			}\r\n			return;\r\n		}\r\n\r\n		private function _buildLogContent(){\r\n			$output = null;\r\n\r\n			if( ! empty( $this->_stack ) ){\r\n				switch ( $this->_format ) {\r\n					case self::FORMAT_LINES:{\r\n\r\n						foreach ( $this->_stack as $type => $values ) {\r\n							$lines = array();\r\n							foreach ( $values as $time => $messages ) {\r\n								foreach ( $messages as $message ) {\r\n									$lines[] = "\\t" . ''-> '' . date( ''Y-m-d H:i:s'', $time ) . '' '' . $message;\r\n								}\r\n							}\r\n							$output .= strtoupper( $type ) . "\\n" . join( "\\n", $lines ) . "\\n\\t". str_repeat( ''-'', 10 ) ."\\n";\r\n						}\r\n\r\n						break;\r\n					}\r\n					case self::FORMAT_SIMPLE:{\r\n						\r\n						foreach ( $this->_stack as $type => $values ) {\r\n							$lines = array();\r\n							foreach ( $values as $time => $messages ) {\r\n								foreach ( $messages as $message ) {\r\n									$lines[] = strtoupper( $type ) . '' -> '' . date( ''Y-m-d H:i:s'', $time ) . '' '' . $message;\r\n								}\r\n							}\r\n							$output .= join( "\\n", $lines ) . "\\n". str_repeat( ''-'', 10 ) ."\\n";\r\n						}\r\n\r\n						break;\r\n					}\r\n					case self::FORMAT_XML:{\r\n						\r\n						foreach ( $this->_stack as $type => $values ) {\r\n							$lines = array();\r\n							foreach ( $values as $time => $messages ) {\r\n								foreach ( $messages as $message ) {\r\n									$lines[] = $message;\r\n								}\r\n							}\r\n							$output .= join( "\\n", $lines ) . "\\n";\r\n						}\r\n\r\n						break;\r\n					}\r\n				}\r\n			}\r\n\r\n			return $output;\r\n		}\r\n\r\n	}\r\n\r\n\r\n	class Profiler{\r\n\r\n		private \r\n			$_stack 	= array(),\r\n			$_timeStart = 0;\r\n\r\n		static private\r\n			$_instance;\r\n\r\n		private function __construct(){\r\n			$this->_timeStart = $this->_getMicroTime();\r\n			$this->collectInformation( ''Profiling start'' );\r\n		}\r\n\r\n		static public function mark( $message ){			\r\n			if( empty( self::$_instance ) ){\r\n				self::$_instance = new self;\r\n			}\r\n			self::$_instance->collectInformation( $message );\r\n		}\r\n\r\n		static public function result(){\r\n			return self::$_instance->getResult();\r\n		}\r\n\r\n		public function getResult(){\r\n			$this->collectInformation( ''Profiling finish'' );\r\n			return join( "\\n", $this->_stack );\r\n		}\r\n\r\n		public function collectInformation( $message ){\r\n			$this->_stack[] = \r\n				$message . '' [Time: '' . round( $this->_getMicroTime() - $this->_timeStart, 4 ) . '' | Memory: ''. round( memory_get_usage() / 1024, 2 ) . ''kB]'';\r\n		}\r\n\r\n		private function _getMicroTime(){\r\n			list( $microSeconds, $seconds ) = explode( '' '', microtime() );\r\n			return ( (float) $seconds + (float) $microSeconds );\r\n		}\r\n\r\n	}', 0, '', '2013-03-14 11:50:04'),
(24, 'router', 'php', '$routes = array(\r\n			''news/(\\d+)''	=> ''news/view/$1'',\r\n			''list/(.*)''		=> ''catalog/filteredList/$1''\r\n		);\r\n		\r\n		$uri = $_GET[''r''];\r\n		\r\n		foreach( $routes as $pattern => $replace ){\r\n			if( preg_match( $pattern, $uri ) ){\r\n				$uri = preg_replace_callback( $pattern, function( $matches ){\r\n					return $matches[0][1];\r\n				}, $replace );\r\n			}\r\n		}', 0, '', '2013-03-14 14:03:29'),
(25, 'No title', 'php', 'select \r\nifnull(nullif(t.`os`,''''),''unknown'' ) AS os\r\nfrom\r\n`subscriptions` as s\r\njoin `partner_keys` as p on p.`key` = s.`key`\r\njoin `transitions` as t on t.`id` = p.`transition_id`\r\nwhere\r\ns.`datetime_subscribe` >= "2013-03-11 00:00:00"\r\nand s.`datetime_subscribe` <= "2013-03-17 23:59:59"\r\ngroup by os\r\n', 0, '', '2013-03-15 15:06:53'),
(26, 'хуй-пизда-провода', 'php', 'SELECT IFNULL( NULLIF( t.`os` ,  '''' ) ,  ''none'' ) AS os, COUNT( DISTINCT s.`msisdn` ) AS sub_count, SUM( s.`credit_sum` ) AS credited_sum, COUNT( s.`credited` ) AS credited_count, DATE( MIN( t.`datetime` ) ) AS date_at\r\nFROM  `transitions` AS t\r\nLEFT JOIN (\r\n\r\nSELECT s . * , p.`transition_id` \r\nFROM  `subscriptions` AS s\r\nJOIN  `partner_keys` AS p ON p.`key` = s.`key` \r\nWHERE s.`datetime_subscribe` >=  "2013-03-11 00:00:00"\r\nAND s.`datetime_subscribe` <=  "2013-03-17 23:59:59"\r\n) AS s ON s.`transition_id` = t.`id` \r\nWHERE t.`datetime` >=  "2013-03-11 00:00:00"\r\nAND t.`datetime` <=  "2013-03-17 23:59:59"\r\nGROUP BY os\r\nLIMIT 0 , 30', 0, '', '2013-03-15 16:59:00'),
(27, 'Схуяли', 'html', '<tr class="partner-images items" image_id="70"> \r\n				<td colspan="3">\r\n					\r\n					<form x-form action="/?m=account&p=images&v=upload&a=upd" method="POST" enctype="multipart/form-data" >\r\n						\r\n						<table>\r\n\r\n							<td>\r\n								<input type="checkbox" ids value="70" /> \r\n							</td>\r\n\r\n							<td>\r\n								<div class="image-item">\r\n									<div class="image-src">\r\n										<img src="1_1000000100.jpg" />\r\n									</div>\r\n									<div class="image-descr">\r\n										<textarea name="description">Дура</textarea>\r\n									</div>\r\n								</div>\r\n							</td>\r\n\r\n							<td valign="top" colspan="2">\r\n								<div  class="image-form">\r\n									<div>\r\n										Статус: <span style="color: #00A800;">Разрешен</span>\r\n									</div>\r\n									<div>\r\n										Перезалить картинку\r\n										<input type="file" class="orange-btn" name="images[]" />\r\n										<input type="hidden" name="id" value="70" />\r\n									</div>\r\n									<div>\r\n										<input type="button" x-del="70" name="delete" class="orange-btn" value="Удалить" />\r\n										<input type="submit" name="save" class="orange-btn" value="Сохранить" />\r\n									</div>\r\n								</div>\r\n							</td>\r\n\r\n						</table>\r\n						\r\n					</form>\r\n					\r\n				</td>\r\n			</tr>', 0, '', '2013-03-20 11:04:49'),
(28, 'Govno form', 'php', 'private function _inputTypeText($name) {\r\n		$input = $this->doc->createElement(''input'');\r\n		$input->setAttribute(''name'', $name);\r\n		$input->setAttribute(''id'', $name);\r\n		$input->setAttribute(''type'', ''text'');\r\n		\r\n		if (count($this->attrs[$name]) > 0) {\r\n			for ($i = 0, $c = count($this->attrs[$name]); $i < $c; $i++) {\r\n				if ($this->attrs[$name][$i][''key''] == ''class'')\r\n					$classes[] = $this->attrs[$name][$i][''value''];\r\n				else {\r\n					$input->setAttribute($this->attrs[$name][$i][''key''], $this->attrs[$name][$i][''value'']);\r\n				}\r\n			}\r\n		}\r\n		\r\n		$valid = $this->_createValidationClass($name);\r\n		\r\n		if ($valid) \r\n			$classes[] = $valid;\r\n		\r\n		if (count($classes) > 0) {\r\n			$classes = @implode('' '', $classes);\r\n			$input->setAttribute(''class'', $classes);\r\n		}\r\n		\r\n		$label = $this->doc->createElement(''label'');\r\n		$label->setAttribute(''for'', $name);\r\n		\r\n		if (@array_search($name, $this->req) !== false) {\r\n			$font = $this->doc->createElement(''font'', ''*'');\r\n			$font->setAttribute(''class'', ''a-req'');\r\n			$label->appendChild($font);\r\n		}\r\n		\r\n		$title = $this->doc->createTextNode($this->inputs[$name][''title'']);\r\n		$label->appendChild($title);\r\n		\r\n		$parent = $this->doc->createElement(''div'');\r\n		$parent->setAttribute(''class'', ''a-row'');\r\n		\r\n		$parent->appendChild($label);\r\n		$parent->appendChild($input);\r\n		\r\n		return $parent;\r\n	}', 0, '', '2013-03-20 12:54:09'),
(29, 'Govno form', 'php', '<?php\r\n\r\nclass Form {\r\n	private $url;\r\n	\r\n	private $doc;\r\n	private $form;\r\n	\r\n	private $inputs 	= array();\r\n	private $selects	= array();\r\n	private $attrs		= array();\r\n	private $values 	= array();\r\n	private $tabs		= array();\r\n	\r\n	private $req		= array();\r\n	private $req_types	= array();\r\n	\r\n	public function __construct($url = null, $name = null, $method = ''POST'', $class = null) {\r\n		\r\n		$this->url = $url != null ? $url : ''http://'' . $_SERVER[''HTTP_HOST''] . $_SERVER[''REQUEST_URI''];\r\n		\r\n		$this->doc = new DOMDocument(''1.0'', ''UTF-8'');\r\n		$this->doc->formatOutput = true;\r\n		$this->doc->preserveWhiteSpace = false;\r\n		\r\n		$this->form = $this->doc->createElement(''form'');\r\n		$this->doc->appendChild($this->form);\r\n		$this->form->setAttribute(''method'', $method);\r\n		$this->form->setAttribute(''action'', $this->url);\r\n		$this->form->setAttribute(''name'', $name);\r\n		$this->form->setAttribute(''class'', $class);\r\n	}\r\n	\r\n	public function create($type, $name, $title, $tab = null) {\r\n		$this->inputs[$name] = array(\r\n			''type''	=> $type,\r\n			''title''	=> $title,\r\n			''tab''	=> $tab\r\n		);\r\n		\r\n		return $this;\r\n	}\r\n	\r\n	public function createSelect($name, $title, $array, $tab = null) {\r\n		$this->selects[$name] = array(\r\n			''title''	=> $title,\r\n			''array''	=> $array\r\n		);\r\n		\r\n		$this->create(''select'', $name, $title, $tab);\r\n		\r\n		return true;\r\n	}\r\n	\r\n	public function attr($name, $key, $value) {\r\n		$this->attrs[$name][] = array(\r\n			''key''	=> $key,\r\n			''value''	=> $value\r\n		);\r\n		\r\n		return $this;\r\n	}\r\n	\r\n	public function setValues($array) {\r\n		$this->values = $array;\r\n		\r\n		return true;\r\n	}\r\n	\r\n	public function required() {\r\n		$this->req = func_get_args();\r\n		\r\n		return true;\r\n	}\r\n	\r\n	public function requiredType($name, $type) {\r\n		$this->req_types[$name] = $type;\r\n		\r\n		return true;\r\n	}\r\n	\r\n	public function createTab($name, $title, $class = null) {\r\n		$this->tabs[$name] = array(\r\n			''title''	=> $title,\r\n			''class'' => $class\r\n		);\r\n	}\r\n	\r\n	public function display() {\r\n		foreach ($this->inputs as $key => $val) {\r\n			switch ($val[''type'']) {\r\n				case ''text'':\r\n					$input = $this->_inputTypeText($key);\r\n					$this->form->appendChild($input);\r\n				break;\r\n				case ''select'':\r\n					$select = $this->_select($key, $val[''title''], $this->selects[$key][''array'']);\r\n					$this->form->appendChild($select);\r\n				break;\r\n			}\r\n		}\r\n		\r\n		return $this->doc->saveXML($this->form);\r\n	}\r\n	\r\n	private function _inputTypeText($name) {\r\n		$input = $this->doc->createElement(''input'');\r\n		$input->setAttribute(''name'', $name);\r\n		$input->setAttribute(''id'', $name);\r\n		$input->setAttribute(''type'', ''text'');\r\n		\r\n		if (count($this->attrs[$name]) > 0) {\r\n			for ($i = 0, $c = count($this->attrs[$name]); $i < $c; $i++) {\r\n				if ($this->attrs[$name][$i][''key''] == ''class'')\r\n					$classes[] = $this->attrs[$name][$i][''value''];\r\n				else {\r\n					$input->setAttribute($this->attrs[$name][$i][''key''], $this->attrs[$name][$i][''value'']);\r\n				}\r\n			}\r\n		}\r\n		\r\n		if ($this->values[$name] != null) \r\n			$input->setAttribute(''value'', $this->values[$name]);\r\n		\r\n		$valid = $this->_createValidationClass($name);\r\n		\r\n		if ($valid) \r\n			$classes[] = $valid;\r\n		\r\n		if (count($classes) > 0) {\r\n			$classes = @implode('' '', $classes);\r\n			$input->setAttribute(''class'', $classes);\r\n		}\r\n		\r\n		$label = $this->doc->createElement(''label'');\r\n		$label->setAttribute(''for'', $name);\r\n		\r\n		if (@array_search($name, $this->req) !== false) {\r\n			$font = $this->doc->createElement(''font'', ''*'');\r\n			$font->setAttribute(''class'', ''a-req'');\r\n			$label->appendChild($font);\r\n		}\r\n		\r\n		$title = $this->doc->createTextNode($this->inputs[$name][''title'']);\r\n		$label->appendChild($title);\r\n		\r\n		$parent = $this->doc->createElement(''div'');\r\n		$parent->setAttribute(''class'', ''a-row'');\r\n		\r\n		$parent->appendChild($label);\r\n		$parent->appendChild($input);\r\n		\r\n		return $parent;\r\n	}\r\n	\r\n	private function _select($name, $title, $array) {\r\n		$select = $this->doc->createElement(''select'');\r\n		$select->setAttribute(''name'', $name);\r\n		\r\n		if (count($this->attrs[$name]) > 0) {\r\n			for ($i = 0, $c = count($this->attrs[$name]); $i < $c; $i++) {\r\n				if ($this->attrs[$name][$i][''key''] == ''class'')\r\n					$classes[] = $this->attrs[$name][$i][''value''];\r\n				else {\r\n					$select->setAttribute($this->attrs[$name][$i][''key''], $this->attrs[$name][$i][''value'']);\r\n				}\r\n			}\r\n		}\r\n		\r\n		$valid = $this->_createValidationClass($name);\r\n		\r\n		if ($valid) \r\n			$classes[] = $valid;\r\n		\r\n		if (count($classes) > 0) {\r\n			$classes = @implode('' '', $classes);\r\n			$select->setAttribute(''class'', $classes);\r\n		}\r\n		\r\n		if ($array[''name''] == null) {\r\n			foreach ($array as $key => $val) {\r\n				$option = $this->doc->createElement(''option'', $val);\r\n				$option->setAttribute(''value'', $key);\r\n				\r\n				if ($this->values[$name] != null) {\r\n					if ($this->values[$name] == $key) \r\n						$option->setAttribute(''selected'', ''selected'');\r\n				}\r\n				\r\n				$select->appendChild($option);\r\n			}\r\n		}\r\n		else {\r\n			$otgroup = $this->doc->createElement(''optgroup'');\r\n			$otgroup->setAttribute(''label'', $array[''name'']);\r\n			\r\n			foreach ($array[''values''] as $key => $val) {\r\n				$option = $this->doc->createElement(''option'', $val);\r\n				$option->setAttribute(''value'', $key);\r\n				\r\n				if ($this->values[$name] != null) {\r\n					if ($this->values[$name] == $key) \r\n						$option->setAttribute(''selected'', ''selected'');\r\n				}\r\n				\r\n				$optgroup->appendChild($option);\r\n			}\r\n		}\r\n		\r\n		$label = $this->doc->createElement(''label'');\r\n		$label->setAttribute(''for'', $name);\r\n		\r\n		if (@array_search($name, $this->req) !== false) {\r\n			$font = $this->doc->createElement(''font'', ''*'');\r\n			$font->setAttribute(''class'', ''a-req'');\r\n			$label->appendChild($font);\r\n		}\r\n		\r\n		$title = $this->doc->createTextNode($title);\r\n		$label->appendChild($title);\r\n		\r\n		$parent = $this->doc->createElement(''div'');\r\n		$parent->setAttribute(''class'', ''a-row'');\r\n		\r\n		$parent->appendChild($label);\r\n		$parent->appendChild($select);\r\n		\r\n		return $parent;\r\n	}\r\n	\r\n	private function _createValidationClass($name) {\r\n		if (@array_search($name, $this->req) !== false and $this->req_types[$name] == null) {\r\n			return ''validation[required]'';\r\n		}\r\n		elseif (@array_search($name, $this->req) === false and $this->req_types[$name] != null) {\r\n			return ''validation['' . $this->req_types[$name] . '']'';\r\n		}\r\n		elseif (@array_search($name, $this->req) !== false and $this->req_types[$name] != null) {\r\n			return ''validation[required, '' . $this->req_types[$name] . '']'';\r\n		}\r\n		\r\n		return false;\r\n	}\r\n}', 0, '', '2013-03-20 15:28:00'),
(30, 'Govno form', 'php', '<?php\r\n\r\nclass Form {\r\n	private $url;\r\n	\r\n	private $doc;\r\n	private $form;\r\n	\r\n	private $inputs 	= array();\r\n	private $selects	= array();\r\n	private $attrs		= array();\r\n	private $values 	= array();\r\n	private $tabs		= array();\r\n	\r\n	private $req		= array();\r\n	private $req_types	= array();\r\n	\r\n	public function __construct($url = null, $name = null, $method = ''POST'', $class = null) {\r\n		\r\n		$this->url = $url != null ? $url : ''http://'' . $_SERVER[''HTTP_HOST''] . $_SERVER[''REQUEST_URI''];\r\n		\r\n		$this->doc = new DOMDocument(''1.0'', ''UTF-8'');\r\n		$this->doc->formatOutput = true;\r\n		$this->doc->preserveWhiteSpace = false;\r\n		\r\n		$this->form = $this->doc->createElement(''form'');\r\n		$this->doc->appendChild($this->form);\r\n		$this->form->setAttribute(''method'', $method);\r\n		$this->form->setAttribute(''action'', $this->url);\r\n		$this->form->setAttribute(''name'', $name);\r\n		$this->form->setAttribute(''class'', $class);\r\n	}\r\n	\r\n	public function create($type, $name, $title, $value = null) {\r\n		$this->inputs[$name] = array(\r\n			''type''	=> $type,\r\n			''title''	=> $title,\r\n			''value'' => $value\r\n		);\r\n		\r\n		return $this;\r\n	}\r\n	\r\n	public function createSelect($name, $title, $array, $tab = null) {\r\n		$this->selects[$name] = array(\r\n			''title''	=> $title,\r\n			''array''	=> $array\r\n		);\r\n		\r\n		$this->create(''select'', $name, $title, $tab);\r\n		\r\n		return true;\r\n	}\r\n	\r\n	public function attr($name, $key, $value) {\r\n		$this->attrs[$name][] = array(\r\n			''key''	=> $key,\r\n			''value''	=> $value\r\n		);\r\n		\r\n		return $this;\r\n	}\r\n	\r\n	public function setValues($array) {\r\n		$this->values = $array;\r\n		\r\n		return true;\r\n	}\r\n	\r\n	public function required() {\r\n		$this->req = func_get_args();\r\n		\r\n		return true;\r\n	}\r\n	\r\n	public function requiredType($name, $type) {\r\n		$this->req_types[$name] = $type;\r\n		\r\n		return true;\r\n	}\r\n	\r\n	public function createTab($name, $title, $class = null) {\r\n		$this->tabs[$name] = array(\r\n			''title''	=> $title,\r\n			''class'' => $class\r\n		);\r\n	}\r\n	\r\n	public function display() {\r\n		foreach ($this->inputs as $key => $val) {\r\n			switch ($val[''type'']) {\r\n				case ''text'':\r\n					$input = $this->_inputTypeText($key);\r\n					$this->form->appendChild($input);\r\n				break;\r\n				case ''select'':\r\n					$select = $this->_select($key, $val[''title''], $this->selects[$key][''array'']);\r\n					$this->form->appendChild($select);\r\n				break;\r\n				case ''checkbox'':\r\n					$input = $this->_inputTypeCheckbox($key);\r\n					$this->form->appendChild($input);\r\n				break;\r\n				case ''radio'':\r\n					$input = $this->_inputTypeRadio($key);\r\n					$this->form->appendChild($input);\r\n				break;\r\n				case ''textarea'':\r\n					$textarea = $this->_textarea($key);\r\n					$this->form->appendChild($textarea);\r\n				break;\r\n				case ''editor'':\r\n					$this->attr($key, ''class'', ''editor'');\r\n					\r\n					$textarea = $this->_textarea($key);\r\n					$this->form->appendChild($textarea);\r\n				break;\r\n				case ''date'':\r\n					$this->attr($key, ''class'', ''datepicker'');\r\n					\r\n					$input = $this->_inputTypeText($key);\r\n					$this->form->appendChild($input);\r\n				break;\r\n				case ''time'':\r\n					$this->attr($key, ''class'', ''timepicker'');\r\n					\r\n					$input = $this->_inputTypeText($key);\r\n					$this->form->appendChild($input);\r\n				break;\r\n				case ''datetime'':\r\n					$this->attr($key, ''class'', ''datetimepicker'');\r\n					\r\n					$input = $this->_inputTypeText($key);\r\n					$this->form->appendChild($input);\r\n				break;\r\n			}\r\n		}\r\n		\r\n		return $this->doc->saveXML($this->form);\r\n	}\r\n	\r\n	private function _inputTypeText($name) {\r\n		$input = $this->doc->createElement(''input'');\r\n		$input->setAttribute(''name'', $name);\r\n		$input->setAttribute(''id'', $name);\r\n		$input->setAttribute(''type'', ''text'');\r\n		\r\n		if (count($this->attrs[$name]) > 0) {\r\n			for ($i = 0, $c = count($this->attrs[$name]); $i < $c; $i++) {\r\n				if ($this->attrs[$name][$i][''key''] == ''class'')\r\n					$classes[] = $this->attrs[$name][$i][''value''];\r\n				else {\r\n					$input->setAttribute($this->attrs[$name][$i][''key''], $this->attrs[$name][$i][''value'']);\r\n				}\r\n			}\r\n		}\r\n		\r\n		if ($this->values[$name] != null) \r\n			$input->setAttribute(''value'', $this->values[$name]);\r\n		\r\n		$valid = $this->_createValidationClass($name);\r\n		\r\n		if ($valid) \r\n			$classes[] = $valid;\r\n		\r\n		if (count($classes) > 0) {\r\n			$classes = @implode('' '', $classes);\r\n			$input->setAttribute(''class'', $classes);\r\n		}\r\n		\r\n		$label = $this->doc->createElement(''label'');\r\n		$label->setAttribute(''for'', $name);\r\n		\r\n		if (@array_search($name, $this->req) !== false) {\r\n			$font = $this->doc->createElement(''font'', ''*'');\r\n			$font->setAttribute(''class'', ''a-req'');\r\n			$label->appendChild($font);\r\n		}\r\n		\r\n		$title = $this->doc->createTextNode($this->inputs[$name][''title'']);\r\n		$label->appendChild($title);\r\n		\r\n		$parent = $this->doc->createElement(''div'');\r\n		$parent->setAttribute(''class'', ''a-row'');\r\n		\r\n		$parent->appendChild($label);\r\n		$parent->appendChild($input);\r\n		\r\n		return $parent;\r\n	}\r\n	\r\n	private function _inputTypePassw($name) {\r\n		$input = $this->doc->createElement(''input'');\r\n		$input->setAttribute(''name'', $name);\r\n		$input->setAttribute(''id'', $name);\r\n		$input->setAttribute(''type'', ''password'');\r\n		\r\n		if (count($this->attrs[$name]) > 0) {\r\n			for ($i = 0, $c = count($this->attrs[$name]); $i < $c; $i++) {\r\n				if ($this->attrs[$name][$i][''key''] == ''class'')\r\n					$classes[] = $this->attrs[$name][$i][''value''];\r\n				else {\r\n					$input->setAttribute($this->attrs[$name][$i][''key''], $this->attrs[$name][$i][''value'']);\r\n				}\r\n			}\r\n		}\r\n		\r\n		if ($this->values[$name] != null) \r\n			$input->setAttribute(''value'', $this->values[$name]);\r\n		\r\n		$valid = $this->_createValidationClass($name);\r\n		\r\n		if ($valid) \r\n			$classes[] = $valid;\r\n		\r\n		if (count($classes) > 0) {\r\n			$classes = @implode('' '', $classes);\r\n			$input->setAttribute(''class'', $classes);\r\n		}\r\n		\r\n		$label = $this->doc->createElement(''label'');\r\n		$label->setAttribute(''for'', $name);\r\n		\r\n		if (@array_search($name, $this->req) !== false) {\r\n			$font = $this->doc->createElement(''font'', ''*'');\r\n			$font->setAttribute(''class'', ''a-req'');\r\n			$label->appendChild($font);\r\n		}\r\n		\r\n		$title = $this->doc->createTextNode($this->inputs[$name][''title'']);\r\n		$label->appendChild($title);\r\n		\r\n		$parent = $this->doc->createElement(''div'');\r\n		$parent->setAttribute(''class'', ''a-row'');\r\n		\r\n		$parent->appendChild($label);\r\n		$parent->appendChild($input);\r\n		\r\n		return $parent;\r\n	}\r\n	\r\n	private function _inputTypeCheckbox($name) {\r\n		$input = $this->doc->createElement(''input'');\r\n		$input->setAttribute(''name'', $name);\r\n		$input->setAttribute(''id'', $name);\r\n		$input->setAttribute(''type'', ''checkbox'');\r\n		$input->setAttribute(''value'', $this->inputs[$name][''value'']);\r\n		\r\n		if (count($this->attrs[$name]) > 0) {\r\n			for ($i = 0, $c = count($this->attrs[$name]); $i < $c; $i++) {\r\n				if ($this->attrs[$name][$i][''key''] == ''class'')\r\n					$classes[] = $this->attrs[$name][$i][''value''];\r\n				else {\r\n					$input->setAttribute($this->attrs[$name][$i][''key''], $this->attrs[$name][$i][''value'']);\r\n				}\r\n			}\r\n		}\r\n		\r\n		if ($this->values[$name] != null) \r\n			$input->setAttribute(''checked'', ''checked'');\r\n		\r\n		$valid = $this->_createValidationClass($name);\r\n		\r\n		if ($valid) \r\n			$classes[] = $valid;\r\n		\r\n		if (count($classes) > 0) {\r\n			$classes = @implode('' '', $classes);\r\n			$input->setAttribute(''class'', $classes);\r\n		}\r\n		\r\n		$label = $this->doc->createElement(''label'');\r\n		$label->setAttribute(''for'', $name);\r\n		\r\n		if (@array_search($name, $this->req) !== false) {\r\n			$font = $this->doc->createElement(''font'', ''*'');\r\n			$font->setAttribute(''class'', ''a-req'');\r\n			$label->appendChild($font);\r\n		}\r\n		\r\n		$title = $this->doc->createTextNode($this->inputs[$name][''title'']);\r\n		$label->appendChild($title);\r\n		\r\n		$parent = $this->doc->createElement(''div'');\r\n		$parent->setAttribute(''class'', ''a-row'');\r\n		\r\n		$parent->appendChild($input);\r\n		$parent->appendChild($label);\r\n		\r\n		return $parent;\r\n	}\r\n	\r\n	private function _inputTypeRadio($name) {\r\n		\r\n		$label = $this->doc->createElement(''label'');\r\n		$label->setAttribute(''for'', $name);\r\n		\r\n		if (@array_search($name, $this->req) !== false) {\r\n			$font = $this->doc->createElement(''font'', ''*'');\r\n			$font->setAttribute(''class'', ''a-req'');\r\n			$label->appendChild($font);\r\n		}\r\n		\r\n		$title = $this->doc->createTextNode($this->inputs[$name][''title'']);\r\n		$label->appendChild($title);\r\n		\r\n		$parent = $this->doc->createElement(''div'');\r\n		$parent->setAttribute(''class'', ''a-row'');\r\n		\r\n		$parent->appendChild($label);\r\n		\r\n		if (is_array($this->inputs[$name][''value''])) {\r\n			$array = $this->inputs[$name][''value''];\r\n			\r\n			$valid = $this->_createValidationClass($name);\r\n		\r\n			if ($valid) \r\n				$classes[] = $valid;\r\n			\r\n			if (count($classes) > 0) {\r\n				$classes = @implode('' '', $classes);\r\n			}\r\n			\r\n			foreach ($array as $key => $val) {\r\n				\r\n				$parent_r = $this->doc->createElement(''div'');\r\n				$parent_r->setAttribute(''class'', ''radio-row'');\r\n				\r\n				$radio = $this->doc->createElement(''input'');\r\n				$radio->setAttribute(''type'', ''radio'');\r\n				$radio->setAttribute(''name'', $name);\r\n				$radio->setAttribute(''value'', $key);\r\n				$radio->setAttribute(''id'', $name.''-''.$key);\r\n				$radio->setAttribute(''class'', $classes);\r\n				\r\n				if ($this->values[$name] != null) {\r\n					if ($this->values[$name] == $key) \r\n						$radio->setAttribute(''checked'', ''checked'');\r\n				}\r\n				\r\n				$label = $this->doc->createElement(''label'', $val);\r\n				$label->setAttribute(''class'', ''radio-title'');\r\n				$label->setAttribute(''for'', $name.''-''.$key);\r\n				\r\n				$parent_r->appendChild($radio);\r\n				$parent_r->appendChild($label);\r\n				\r\n				$parent->appendChild($parent_r);\r\n			}\r\n			\r\n			return $parent;\r\n		}\r\n	}\r\n	\r\n	private function _textarea($name) {\r\n		$textarea = $this->doc->createElement(''textarea'', '''');\r\n		$textarea->setAttribute(''name'', $name);\r\n		$textarea->setAttribute(''id'', $name);\r\n		\r\n		if (count($this->attrs[$name]) > 0) {\r\n			for ($i = 0, $c = count($this->attrs[$name]); $i < $c; $i++) {\r\n				if ($this->attrs[$name][$i][''key''] == ''class'')\r\n					$classes[] = $this->attrs[$name][$i][''value''];\r\n				else {\r\n					$textarea->setAttribute($this->attrs[$name][$i][''key''], $this->attrs[$name][$i][''value'']);\r\n				}\r\n			}\r\n		}\r\n		\r\n		if ($this->values[$name] != null) {\r\n			$value = $this->doc->createTextNode($this->values[$name]);\r\n			$textarea->appendChild($value);\r\n		}\r\n		\r\n		$valid = $this->_createValidationClass($name);\r\n		\r\n		if ($valid) \r\n			$classes[] = $valid;\r\n		\r\n		if (count($classes) > 0) {\r\n			$classes = @implode('' '', $classes);\r\n			$textarea->setAttribute(''class'', $classes);\r\n		}\r\n		\r\n		$label = $this->doc->createElement(''label'');\r\n		$label->setAttribute(''for'', $name);\r\n		\r\n		if (@array_search($name, $this->req) !== false) {\r\n			$font = $this->doc->createElement(''font'', ''*'');\r\n			$font->setAttribute(''class'', ''a-req'');\r\n			$label->appendChild($font);\r\n		}\r\n		\r\n		$title = $this->doc->createTextNode($this->inputs[$name][''title'']);\r\n		$label->appendChild($title);\r\n		\r\n		$parent = $this->doc->createElement(''div'');\r\n		$parent->setAttribute(''class'', ''a-row'');\r\n		\r\n		$parent->appendChild($label);\r\n		$parent->appendChild($textarea);\r\n		\r\n		return $parent;\r\n	}\r\n	\r\n	private function _select($name, $title, $array) {\r\n		$select = $this->doc->createElement(''select'');\r\n		$select->setAttribute(''name'', $name);\r\n		\r\n		if (count($this->attrs[$name]) > 0) {\r\n			for ($i = 0, $c = count($this->attrs[$name]); $i < $c; $i++) {\r\n				if ($this->attrs[$name][$i][''key''] == ''class'')\r\n					$classes[] = $this->attrs[$name][$i][''value''];\r\n				else {\r\n					$select->setAttribute($this->attrs[$name][$i][''key''], $this->attrs[$name][$i][''value'']);\r\n				}\r\n			}\r\n		}\r\n		\r\n		$valid = $this->_createValidationClass($name);\r\n		\r\n		if ($valid) \r\n			$classes[] = $valid;\r\n		\r\n		if (count($classes) > 0) {\r\n			$classes = @implode('' '', $classes);\r\n			$select->setAttribute(''class'', $classes);\r\n		}\r\n		\r\n		if ($array[''name''] == null) {\r\n			foreach ($array as $key => $val) {\r\n				$option = $this->doc->createElement(''option'', $val);\r\n				$option->setAttribute(''value'', $key);\r\n				\r\n				if ($this->values[$name] != null) {\r\n					if ($this->values[$name] == $key) \r\n						$option->setAttribute(''selected'', ''selected'');\r\n				}\r\n				\r\n				$select->appendChild($option);\r\n			}\r\n		}\r\n		else {\r\n			$otgroup = $this->doc->createElement(''optgroup'');\r\n			$otgroup->setAttribute(''label'', $array[''name'']);\r\n			\r\n			foreach ($array[''values''] as $key => $val) {\r\n				$option = $this->doc->createElement(''option'', $val);\r\n				$option->setAttribute(''value'', $key);\r\n				\r\n				if ($this->values[$name] != null) {\r\n					if ($this->values[$name] == $key) \r\n						$option->setAttribute(''selected'', ''selected'');\r\n				}\r\n				\r\n				$optgroup->appendChild($option);\r\n			}\r\n		}\r\n		\r\n		$label = $this->doc->createElement(''label'');\r\n		$label->setAttribute(''for'', $name);\r\n		\r\n		if (@array_search($name, $this->req) !== false) {\r\n			$font = $this->doc->createElement(''font'', ''*'');\r\n			$font->setAttribute(''class'', ''a-req'');\r\n			$label->appendChild($font);\r\n		}\r\n		\r\n		$title = $this->doc->createTextNode($title);\r\n		$label->appendChild($title);\r\n		\r\n		$parent = $this->doc->createElement(''div'');\r\n		$parent->setAttribute(''class'', ''a-row'');\r\n		\r\n		$parent->appendChild($label);\r\n		$parent->appendChild($select);\r\n		\r\n		return $parent;\r\n	}\r\n	\r\n	private function _createValidationClass($name) {\r\n		if (@array_search($name, $this->req) !== false and $this->req_types[$name] == null) {\r\n			return ''validation[required]'';\r\n		}\r\n		elseif (@array_search($name, $this->req) === false and $this->req_types[$name] != null) {\r\n			return ''validation['' . $this->req_types[$name] . '']'';\r\n		}\r\n		elseif (@array_search($name, $this->req) !== false and $this->req_types[$name] != null) {\r\n			return ''validation[required, '' . $this->req_types[$name] . '']'';\r\n		}\r\n		\r\n		return false;\r\n	}\r\n}', 0, '', '2013-03-21 12:19:22'),
(31, 'No title', 'php', '$form = new Form();\r\n		\r\n		$form->createTab(''tab_1'', ''Tab 1'');\r\n		$form->createTab(''tab_2'', ''Tab 2'');\r\n		\r\n		$form->create(''text'', ''text_1'', ''Test input text'', null, ''tab_1'');\r\n		\r\n		$array = array( 0 => ''None'', 1 => ''One'');\r\n		\r\n		$form->create(''checkbox'', ''check_1'', ''Check 1'', 1, ''tab_1'');\r\n		\r\n		$form->createSelect(''select_1'', ''This test select'', $array, ''tab_1'');\r\n		\r\n		$radio = array(\r\n			''type_1'' => ''Type 1'',\r\n			''type_2'' => ''Type 2''\r\n		);\r\n		\r\n		$form->create(''radio'', ''radio_1'', ''Title radio'', $radio, ''tab_2'');\r\n		\r\n		$form->create(''textarea'', ''text_2'', ''Textarea'', ''tab_2'');\r\n		\r\n		$form->create(''editor'', ''editor_1'', ''Editor'', null, ''tab_2'');\r\n		\r\n		$form->required(''text_1'', ''radio_1'', ''editor_1'', null, ''tab_2'');\r\n		\r\n		$form->setValues(array(''text_1'' => ''test val'', ''select_1'' => 1, ''check_1'' => 1, ''radio_1'' => ''type_2''));\r\n		\r\n		echo $form->display();', 0, '', '2013-03-21 15:12:01');
INSERT INTO `codes` (`id`, `title`, `language`, `source`, `author_id`, `password`, `added_at`) VALUES
(32, 'No title', 'php', '<?php\r\n\r\nclass Form {\r\n	private $url;\r\n	\r\n	private $doc;\r\n	private $form		= array();\r\n	\r\n	private $inputs 	= array();\r\n	private $selects	= array();\r\n	private $attrs		= array();\r\n	private $values 	= array();\r\n	private $tabs		= array();\r\n	private $tabs_tmp	= array();\r\n	\r\n	private $req		= array();\r\n	private $req_types	= array();\r\n	\r\n	public function __construct($url = null, $name = null, $method = ''POST'', $class = null) {\r\n		\r\n		$this->url = $url != null ? $url : ''http://'' . $_SERVER[''HTTP_HOST''] . $_SERVER[''REQUEST_URI''];\r\n		\r\n		$this->doc = new DOMDocument(''1.0'', ''UTF-8'');\r\n		$this->doc->formatOutput = true;\r\n		$this->doc->preserveWhiteSpace = false;\r\n		\r\n		$this->form = array(\r\n			''method''	=> $method,\r\n			''action''	=> $this->url,\r\n			''name''		=> $name,\r\n			''class''		=> $class\r\n		);\r\n		\r\n	}\r\n	\r\n	public function create($type, $name, $title, $value = null, $tab = null) {\r\n		$this->inputs[$name] = array(\r\n			''type''	=> $type,\r\n			''title''	=> $title,\r\n			''value'' => $value,\r\n			''tab''	=> $tab\r\n		);\r\n		\r\n		return $this;\r\n	}\r\n	\r\n	public function createSelect($name, $title, $array, $tab = null) {\r\n		$this->selects[$name] = array(\r\n			''title''	=> $title,\r\n			''array''	=> $array\r\n		);\r\n		\r\n		$this->create(''select'', $name, $title, $tab);\r\n		\r\n		return true;\r\n	}\r\n	\r\n	public function attr($name, $key, $value) {\r\n		$this->attrs[$name][] = array(\r\n			''key''	=> $key,\r\n			''value''	=> $value\r\n		);\r\n		\r\n		return $this;\r\n	}\r\n	\r\n	public function setValues($array) {\r\n		$this->values = $array;\r\n		\r\n		return true;\r\n	}\r\n	\r\n	public function required() {\r\n		$this->req = func_get_args();\r\n		\r\n		return true;\r\n	}\r\n	\r\n	public function requiredType($name, $type) {\r\n		$this->req_types[$name] = $type;\r\n		\r\n		return true;\r\n	}\r\n	\r\n	public function createTab($name, $title, $class = null) {\r\n		$this->tabs[$name] = array(\r\n			''title''	=> $title,\r\n			''class'' => $class\r\n		);\r\n	}\r\n	\r\n	public function display() {\r\n		\r\n		foreach ($this->inputs as $key => $val) {\r\n			switch ($val[''type'']) {\r\n				case ''text'':\r\n					$elem = $this->_inputTypeText($key);\r\n				break;\r\n				case ''file'':\r\n					$elem = $this->_inputTypeFile($key);\r\n				break;\r\n				case ''select'':\r\n					$elem = $this->_select($key, $val[''title''], $this->selects[$key][''array'']);\r\n				break;\r\n				case ''checkbox'':\r\n					$elem = $this->_inputTypeCheckbox($key);\r\n				break;\r\n				case ''radio'':\r\n					$elem = $this->_inputTypeRadio($key);\r\n				break;\r\n				case ''textarea'':\r\n					$elem = $this->_textarea($key);\r\n				break;\r\n				case ''editor'':\r\n					$this->attr($key, ''class'', ''editor'');\r\n					$elem = $this->_textarea($key);\r\n				break;\r\n				case ''date'':\r\n					$this->attr($key, ''class'', ''datepicker'');\r\n					$elem = $this->_inputTypeText($key);\r\n				break;\r\n				case ''time'':\r\n					$this->attr($key, ''class'', ''timepicker'');\r\n					$elem = $this->_inputTypeText($key);\r\n				break;\r\n				case ''datetime'':\r\n					$this->attr($key, ''class'', ''datetimepicker'');\r\n					$elem = $this->_inputTypeText($key);\r\n				break;\r\n			}\r\n			\r\n			if ($val[''tab''] != null) {\r\n				$this->tabs_tmp[$val[''tab'']][] = $elem;\r\n			}\r\n		}\r\n		\r\n		$tabs = $this->_tab();\r\n		\r\n		$b = 0;\r\n		foreach ($this->tabs as $key => $val) {\r\n			if ($b == 0)\r\n				$class = ''visible'';\r\n			else \r\n				$class = '''';\r\n				\r\n			$box = $this->_tabsBox($class);\r\n			\r\n			for ($i = 0, $c = count($this->tabs_tmp[$key]); $i < $c; $i++) {\r\n				$box->appendChild($this->tabs_tmp[$key][$i]);\r\n			}\r\n			\r\n			$tabs->appendChild($box);\r\n			$b++;\r\n		}\r\n		\r\n		$form = $this->doc->createElement(''form'');\r\n		$form->setAttribute(''method'', $this->form[''method'']);\r\n		$form->setAttribute(''action'', $this->form[''action'']);\r\n		$form->setAttribute(''name'', $this->form[''name'']);\r\n		$form->setAttribute(''class'', $this->form[''class'']);\r\n		\r\n		$form->appendChild($tabs);\r\n		\r\n		return $this->doc->saveXML($form);\r\n	}\r\n	\r\n	private function _tab() {\r\n		$parent = $this->doc->createElement(''div'');\r\n		$parent->setAttribute(''class'', ''section'');\r\n		\r\n		$ul = $this->doc->createElement(''ul'');\r\n		$ul->setAttribute(''class'', ''tabs a-clear'');\r\n		\r\n		$i = 0;\r\n		foreach ($this->tabs as $key => $val) {\r\n			$li = $this->doc->createElement(''li'', $val[''title'']);\r\n			if ($i == 0)\r\n				$li->setAttribute(''class'', ''current'');\r\n				\r\n			$ul->appendChild($li);\r\n			$i++;\r\n		}\r\n		\r\n		$parent->appendChild($ul);\r\n		\r\n		return $parent;\r\n	}\r\n	\r\n	private function _tabsBox($class = null) {\r\n		$parent = $this->doc->createElement(''div'');\r\n		if ($class != null)\r\n			$parent->setAttribute(''class'', ''box ''.$class);\r\n		else \r\n			$parent->setAttribute(''class'', ''box'');\r\n		\r\n		return $parent;\r\n	}\r\n	\r\n	private function _inputTypeText($name) {\r\n		$input = $this->doc->createElement(''input'');\r\n		$input->setAttribute(''name'', $name);\r\n		$input->setAttribute(''id'', $name);\r\n		$input->setAttribute(''type'', ''text'');\r\n		\r\n		if (count($this->attrs[$name]) > 0) {\r\n			for ($i = 0, $c = count($this->attrs[$name]); $i < $c; $i++) {\r\n				if ($this->attrs[$name][$i][''key''] == ''class'')\r\n					$classes[] = $this->attrs[$name][$i][''value''];\r\n				else {\r\n					$input->setAttribute($this->attrs[$name][$i][''key''], $this->attrs[$name][$i][''value'']);\r\n				}\r\n			}\r\n		}\r\n		\r\n		if ($this->values[$name] != null) \r\n			$input->setAttribute(''value'', $this->values[$name]);\r\n		\r\n		$valid = $this->_createValidationClass($name);\r\n		\r\n		if ($valid) \r\n			$classes[] = $valid;\r\n		\r\n		if (count($classes) > 0) {\r\n			$classes = @implode('' '', $classes);\r\n			$input->setAttribute(''class'', $classes);\r\n		}\r\n		\r\n		$label = $this->doc->createElement(''label'');\r\n		$label->setAttribute(''for'', $name);\r\n		\r\n		if (@array_search($name, $this->req) !== false) {\r\n			$font = $this->doc->createElement(''font'', ''*'');\r\n			$font->setAttribute(''class'', ''a-req'');\r\n			$label->appendChild($font);\r\n		}\r\n		\r\n		$title = $this->doc->createTextNode($this->inputs[$name][''title'']);\r\n		$label->appendChild($title);\r\n		\r\n		$parent = $this->doc->createElement(''div'');\r\n		$parent->setAttribute(''class'', ''a-row'');\r\n		\r\n		$parent->appendChild($label);\r\n		$parent->appendChild($input);\r\n		\r\n		return $parent;\r\n	}\r\n	\r\n	private function _inputTypeFile($name) {\r\n		$input = $this->doc->createElement(''input'');\r\n		$input->setAttribute(''name'', $name);\r\n		$input->setAttribute(''id'', $name);\r\n		$input->setAttribute(''type'', ''file'');\r\n		\r\n		if (count($this->attrs[$name]) > 0) {\r\n			for ($i = 0, $c = count($this->attrs[$name]); $i < $c; $i++) {\r\n				if ($this->attrs[$name][$i][''key''] == ''class'')\r\n					$classes[] = $this->attrs[$name][$i][''value''];\r\n				else {\r\n					$input->setAttribute($this->attrs[$name][$i][''key''], $this->attrs[$name][$i][''value'']);\r\n				}\r\n			}\r\n		}\r\n		\r\n		if ($this->values[$name] != null) \r\n			$input->setAttribute(''value'', $this->values[$name]);\r\n		\r\n		$valid = $this->_createValidationClass($name);\r\n		\r\n		if ($valid) \r\n			$classes[] = $valid;\r\n		\r\n		if (count($classes) > 0) {\r\n			$classes = @implode('' '', $classes);\r\n			$input->setAttribute(''class'', $classes);\r\n		}\r\n		\r\n		$label = $this->doc->createElement(''label'');\r\n		$label->setAttribute(''for'', $name);\r\n		\r\n		if (@array_search($name, $this->req) !== false) {\r\n			$font = $this->doc->createElement(''font'', ''*'');\r\n			$font->setAttribute(''class'', ''a-req'');\r\n			$label->appendChild($font);\r\n		}\r\n		\r\n		$title = $this->doc->createTextNode($this->inputs[$name][''title'']);\r\n		$label->appendChild($title);\r\n		\r\n		$parent = $this->doc->createElement(''div'');\r\n		$parent->setAttribute(''class'', ''a-row'');\r\n		\r\n		$parent->appendChild($label);\r\n		$parent->appendChild($input);\r\n		\r\n		return $parent;\r\n	}\r\n	\r\n	private function _inputTypePassw($name) {\r\n		$input = $this->doc->createElement(''input'');\r\n		$input->setAttribute(''name'', $name);\r\n		$input->setAttribute(''id'', $name);\r\n		$input->setAttribute(''type'', ''password'');\r\n		\r\n		if (count($this->attrs[$name]) > 0) {\r\n			for ($i = 0, $c = count($this->attrs[$name]); $i < $c; $i++) {\r\n				if ($this->attrs[$name][$i][''key''] == ''class'')\r\n					$classes[] = $this->attrs[$name][$i][''value''];\r\n				else {\r\n					$input->setAttribute($this->attrs[$name][$i][''key''], $this->attrs[$name][$i][''value'']);\r\n				}\r\n			}\r\n		}\r\n		\r\n		if ($this->values[$name] != null) \r\n			$input->setAttribute(''value'', $this->values[$name]);\r\n		\r\n		$valid = $this->_createValidationClass($name);\r\n		\r\n		if ($valid) \r\n			$classes[] = $valid;\r\n		\r\n		if (count($classes) > 0) {\r\n			$classes = @implode('' '', $classes);\r\n			$input->setAttribute(''class'', $classes);\r\n		}\r\n		\r\n		$label = $this->doc->createElement(''label'');\r\n		$label->setAttribute(''for'', $name);\r\n		\r\n		if (@array_search($name, $this->req) !== false) {\r\n			$font = $this->doc->createElement(''font'', ''*'');\r\n			$font->setAttribute(''class'', ''a-req'');\r\n			$label->appendChild($font);\r\n		}\r\n		\r\n		$title = $this->doc->createTextNode($this->inputs[$name][''title'']);\r\n		$label->appendChild($title);\r\n		\r\n		$parent = $this->doc->createElement(''div'');\r\n		$parent->setAttribute(''class'', ''a-row'');\r\n		\r\n		$parent->appendChild($label);\r\n		$parent->appendChild($input);\r\n		\r\n		return $parent;\r\n	}\r\n	\r\n	private function _inputTypeCheckbox($name) {\r\n		$input = $this->doc->createElement(''input'');\r\n		$input->setAttribute(''name'', $name);\r\n		$input->setAttribute(''id'', $name);\r\n		$input->setAttribute(''type'', ''checkbox'');\r\n		$input->setAttribute(''value'', $this->inputs[$name][''value'']);\r\n		\r\n		if (count($this->attrs[$name]) > 0) {\r\n			for ($i = 0, $c = count($this->attrs[$name]); $i < $c; $i++) {\r\n				if ($this->attrs[$name][$i][''key''] == ''class'')\r\n					$classes[] = $this->attrs[$name][$i][''value''];\r\n				else {\r\n					$input->setAttribute($this->attrs[$name][$i][''key''], $this->attrs[$name][$i][''value'']);\r\n				}\r\n			}\r\n		}\r\n		\r\n		if ($this->values[$name] != null) \r\n			$input->setAttribute(''checked'', ''checked'');\r\n		\r\n		$valid = $this->_createValidationClass($name);\r\n		\r\n		if ($valid) \r\n			$classes[] = $valid;\r\n		\r\n		if (count($classes) > 0) {\r\n			$classes = @implode('' '', $classes);\r\n			$input->setAttribute(''class'', $classes);\r\n		}\r\n		\r\n		$label = $this->doc->createElement(''label'');\r\n		$label->setAttribute(''for'', $name);\r\n		\r\n		if (@array_search($name, $this->req) !== false) {\r\n			$font = $this->doc->createElement(''font'', ''*'');\r\n			$font->setAttribute(''class'', ''a-req'');\r\n			$label->appendChild($font);\r\n		}\r\n		\r\n		$title = $this->doc->createTextNode($this->inputs[$name][''title'']);\r\n		$label->appendChild($title);\r\n		\r\n		$parent = $this->doc->createElement(''div'');\r\n		$parent->setAttribute(''class'', ''a-row'');\r\n		\r\n		$parent->appendChild($input);\r\n		$parent->appendChild($label);\r\n		\r\n		return $parent;\r\n	}\r\n	\r\n	private function _inputTypeRadio($name) {\r\n		\r\n		$label = $this->doc->createElement(''label'');\r\n		$label->setAttribute(''for'', $name);\r\n		\r\n		if (@array_search($name, $this->req) !== false) {\r\n			$font = $this->doc->createElement(''font'', ''*'');\r\n			$font->setAttribute(''class'', ''a-req'');\r\n			$label->appendChild($font);\r\n		}\r\n		\r\n		$title = $this->doc->createTextNode($this->inputs[$name][''title'']);\r\n		$label->appendChild($title);\r\n		\r\n		$parent = $this->doc->createElement(''div'');\r\n		$parent->setAttribute(''class'', ''a-row'');\r\n		\r\n		$parent->appendChild($label);\r\n		\r\n		if (is_array($this->inputs[$name][''value''])) {\r\n			$array = $this->inputs[$name][''value''];\r\n			\r\n			$valid = $this->_createValidationClass($name);\r\n		\r\n			if ($valid) \r\n				$classes[] = $valid;\r\n			\r\n			if (count($classes) > 0) {\r\n				$classes = @implode('' '', $classes);\r\n			}\r\n			\r\n			foreach ($array as $key => $val) {\r\n				\r\n				$parent_r = $this->doc->createElement(''div'');\r\n				$parent_r->setAttribute(''class'', ''radio-row'');\r\n				\r\n				$radio = $this->doc->createElement(''input'');\r\n				$radio->setAttribute(''type'', ''radio'');\r\n				$radio->setAttribute(''name'', $name);\r\n				$radio->setAttribute(''value'', $key);\r\n				$radio->setAttribute(''id'', $name.''-''.$key);\r\n				$radio->setAttribute(''class'', $classes);\r\n				\r\n				if ($this->values[$name] != null) {\r\n					if ($this->values[$name] == $key) \r\n						$radio->setAttribute(''checked'', ''checked'');\r\n				}\r\n				\r\n				$label = $this->doc->createElement(''label'', $val);\r\n				$label->setAttribute(''class'', ''radio-title'');\r\n				$label->setAttribute(''for'', $name.''-''.$key);\r\n				\r\n				$parent_r->appendChild($radio);\r\n				$parent_r->appendChild($label);\r\n				\r\n				$parent->appendChild($parent_r);\r\n			}\r\n			\r\n			return $parent;\r\n		}\r\n	}\r\n	\r\n	private function _textarea($name) {\r\n		$textarea = $this->doc->createElement(''textarea'', '''');\r\n		$textarea->setAttribute(''name'', $name);\r\n		$textarea->setAttribute(''id'', $name);\r\n		\r\n		if (count($this->attrs[$name]) > 0) {\r\n			for ($i = 0, $c = count($this->attrs[$name]); $i < $c; $i++) {\r\n				if ($this->attrs[$name][$i][''key''] == ''class'')\r\n					$classes[] = $this->attrs[$name][$i][''value''];\r\n				else {\r\n					$textarea->setAttribute($this->attrs[$name][$i][''key''], $this->attrs[$name][$i][''value'']);\r\n				}\r\n			}\r\n		}\r\n		\r\n		if ($this->values[$name] != null) {\r\n			$value = $this->doc->createTextNode($this->values[$name]);\r\n			$textarea->appendChild($value);\r\n		}\r\n		\r\n		$valid = $this->_createValidationClass($name);\r\n		\r\n		if ($valid) \r\n			$classes[] = $valid;\r\n		\r\n		if (count($classes) > 0) {\r\n			$classes = @implode('' '', $classes);\r\n			$textarea->setAttribute(''class'', $classes);\r\n		}\r\n		\r\n		$label = $this->doc->createElement(''label'');\r\n		$label->setAttribute(''for'', $name);\r\n		\r\n		if (@array_search($name, $this->req) !== false) {\r\n			$font = $this->doc->createElement(''font'', ''*'');\r\n			$font->setAttribute(''class'', ''a-req'');\r\n			$label->appendChild($font);\r\n		}\r\n		\r\n		$title = $this->doc->createTextNode($this->inputs[$name][''title'']);\r\n		$label->appendChild($title);\r\n		\r\n		$parent = $this->doc->createElement(''div'');\r\n		$parent->setAttribute(''class'', ''a-row'');\r\n		\r\n		$parent->appendChild($label);\r\n		$parent->appendChild($textarea);\r\n		\r\n		return $parent;\r\n	}\r\n	\r\n	private function _select($name, $title, $array) {\r\n		$select = $this->doc->createElement(''select'');\r\n		$select->setAttribute(''name'', $name);\r\n		\r\n		if (count($this->attrs[$name]) > 0) {\r\n			for ($i = 0, $c = count($this->attrs[$name]); $i < $c; $i++) {\r\n				if ($this->attrs[$name][$i][''key''] == ''class'')\r\n					$classes[] = $this->attrs[$name][$i][''value''];\r\n				else {\r\n					$select->setAttribute($this->attrs[$name][$i][''key''], $this->attrs[$name][$i][''value'']);\r\n				}\r\n			}\r\n		}\r\n		\r\n		$valid = $this->_createValidationClass($name);\r\n		\r\n		if ($valid) \r\n			$classes[] = $valid;\r\n		\r\n		if (count($classes) > 0) {\r\n			$classes = @implode('' '', $classes);\r\n			$select->setAttribute(''class'', $classes);\r\n		}\r\n		\r\n		if ($array[''name''] == null) {\r\n			foreach ($array as $key => $val) {\r\n				$option = $this->doc->createElement(''option'', $val);\r\n				$option->setAttribute(''value'', $key);\r\n				\r\n				if ($this->values[$name] != null) {\r\n					if ($this->values[$name] == $key) \r\n						$option->setAttribute(''selected'', ''selected'');\r\n				}\r\n				\r\n				$select->appendChild($option);\r\n			}\r\n		}\r\n		else {\r\n			$otgroup = $this->doc->createElement(''optgroup'');\r\n			$otgroup->setAttribute(''label'', $array[''name'']);\r\n			\r\n			foreach ($array[''values''] as $key => $val) {\r\n				$option = $this->doc->createElement(''option'', $val);\r\n				$option->setAttribute(''value'', $key);\r\n				\r\n				if ($this->values[$name] != null) {\r\n					if ($this->values[$name] == $key) \r\n						$option->setAttribute(''selected'', ''selected'');\r\n				}\r\n				\r\n				$optgroup->appendChild($option);\r\n			}\r\n		}\r\n		\r\n		$label = $this->doc->createElement(''label'');\r\n		$label->setAttribute(''for'', $name);\r\n		\r\n		if (@array_search($name, $this->req) !== false) {\r\n			$font = $this->doc->createElement(''font'', ''*'');\r\n			$font->setAttribute(''class'', ''a-req'');\r\n			$label->appendChild($font);\r\n		}\r\n		\r\n		$title = $this->doc->createTextNode($title);\r\n		$label->appendChild($title);\r\n		\r\n		$parent = $this->doc->createElement(''div'');\r\n		$parent->setAttribute(''class'', ''a-row'');\r\n		\r\n		$parent->appendChild($label);\r\n		$parent->appendChild($select);\r\n		\r\n		return $parent;\r\n	}\r\n	\r\n	private function _createValidationClass($name) {\r\n		if (@array_search($name, $this->req) !== false and $this->req_types[$name] == null) {\r\n			return ''validation[required]'';\r\n		}\r\n		elseif (@array_search($name, $this->req) === false and $this->req_types[$name] != null) {\r\n			return ''validation['' . $this->req_types[$name] . '']'';\r\n		}\r\n		elseif (@array_search($name, $this->req) !== false and $this->req_types[$name] != null) {\r\n			return ''validation[required, '' . $this->req_types[$name] . '']'';\r\n		}\r\n		\r\n		return false;\r\n	}\r\n}', 0, '', '2013-03-22 12:39:15'),
(33, 'routes cache', 'php', '<?php\r\nreturn array (\r\n  ''routes'' => \r\n  array (\r\n    0 => \r\n    array (\r\n      ''match'' => ''user'',\r\n      ''controller'' => ''user'',\r\n      ''action'' => ''account'',\r\n      ''children'' => \r\n      array (\r\n        0 => \r\n        array (\r\n          ''match'' => ''logout-{mode}-{back_url}'',\r\n          ''controller'' => ''user'',\r\n          ''action'' => ''logout'',\r\n          ''keys'' => \r\n          array (\r\n            0 => ''mode'',\r\n            1 => ''back_url'',\r\n          ),\r\n          ''regexp'' => ''logout-(.+)-(.+)'',\r\n        ),\r\n        1 => \r\n        array (\r\n          ''match'' => ''{user_id|num}'',\r\n          ''controller'' => ''user'',\r\n          ''action'' => ''account'',\r\n          ''keys'' => \r\n          array (\r\n            0 => ''user_id'',\r\n          ),\r\n          ''regexp'' => ''(\\\\d+)'',\r\n          ''children'' => \r\n          array (\r\n            0 => \r\n            array (\r\n              ''match'' => ''pl'',\r\n              ''controller'' => ''user'',\r\n              ''action'' => ''playlist'',\r\n            ),\r\n            1 => \r\n            array (\r\n              ''match'' => ''post-{post_id}'',\r\n              ''controller'' => ''user'',\r\n              ''action'' => ''mypost'',\r\n              ''keys'' => \r\n              array (\r\n                0 => ''post_id'',\r\n              ),\r\n              ''regexp'' => ''post-(.+)'',\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    ),\r\n    1 => \r\n    array (\r\n      ''match'' => ''audio'',\r\n      ''controller'' => ''vkaudio'',\r\n      ''action'' => ''my'',\r\n      ''children'' => \r\n      array (\r\n        0 => \r\n        array (\r\n          ''match'' => ''{audio_id}'',\r\n          ''controller'' => ''vkaudio'',\r\n          ''action'' => ''audio'',\r\n          ''keys'' => \r\n          array (\r\n            0 => ''audio_id'',\r\n          ),\r\n          ''regexp'' => ''(.+)'',\r\n        ),\r\n      ),\r\n    ),\r\n  ),\r\n  ''system'' => false,\r\n);', 0, '', '2013-03-22 15:00:28'),
(34, 'Tree Router', 'php', '<?php\r\n	\r\n	namespace Sy\\System;\r\n\r\n	class Router{\r\n		\r\n		private $routes		= array(),\r\n				$cache_dir	= __DIR__;\r\n		\r\n		public function __construct( $routes_xml = ''routes.xml'', $cache_dir = __DIR__, $debug = false ){\r\n			if( file_exists( $routes_xml ) ){\r\n				$this->cache_dir	= $cache_dir;\r\n				$cache_file			= $cache_dir . DIRECTORY_SEPARATOR . $routes_xml . ''.php'';\r\n				if( file_exists( $cache_file ) && $debug === false ){\r\n					$this->routes = include $cache_file;\r\n				} else {\r\n					$xml			= simplexml_load_file( $routes_xml );\r\n					$this->routes	= $this->_buildRoutes( $xml );\r\n					$this->_cache( $cache_file );\r\n				}\r\n			} else {\r\n				throw new \\Exception( ''File not found: ''. $routes_xml );\r\n			}\r\n		}\r\n		\r\n		public function get( $url ) {			\r\n			if( empty( $url ) ){\r\n				return $this->indexPage();\r\n			}			\r\n			$url = explode( ''/'', trim( $url, ''/'' ) );\r\n			$url = array_filter( $url, ''strlen'' );			\r\n			$result = $this->_find( $url, $this->routes[''routes''] );			\r\n			if( empty( $result ) ){\r\n				return $this->page404();\r\n			}			\r\n			return $result;			\r\n		}\r\n		\r\n		public function indexPage(){\r\n			$page	= ''index'';\r\n			$route	= array_filter( $this->routes[''system''], function( $route ) use ( $page ) {\r\n				return ( $route[''match''] == $page );\r\n			}); \r\n			$route = current( $route );\r\n			return array(\r\n				''controller''	=> $route[''controller''],\r\n				''action''		=> $route[''action''],\r\n				''values''		=> array()\r\n			);\r\n		}\r\n		\r\n		public function page404(){\r\n			$page = ''page404'';\r\n			$route	= array_filter( $this->routes[''system''], function( $route ) use ( $page ) {\r\n				return ( $route[''match''] == $page );\r\n			}); \r\n			$route = current( $route );\r\n			return array(\r\n				''controller''	=> $route[''controller''],\r\n				''action''		=> $route[''action''],\r\n				''values''		=> array()\r\n			);\r\n		}\r\n\r\n		private function _find( $url, $routes ){			\r\n			$result = array();			\r\n			while( $segment = array_shift( $url ) ){				\r\n				foreach( $routes as $route ) {					\r\n					if( ! isset( $route[''regexp''] ) ){						\r\n						if( $route[''match''] == $segment ) {							\r\n							$result[''controller'']	= $route[''controller''];\r\n							$result[''action'']		= $route[''action''];														\r\n							if( ! isset( $result[''values''] ) ){\r\n								$result[''values''] = array();\r\n							}							\r\n							if( isset( $route[''children''] ) && ! empty( $route[''children''] ) ){\r\n								$routes = & $route[''children''];\r\n							}\r\n						}\r\n					}else{						\r\n						if( preg_match( $route[''regexp''], $segment, $matches ) ){							\r\n							$result[''controller'']	= $route[''controller''];\r\n							$result[''action'']		= $route[''action''];							\r\n							if( ! isset( $result[''values''] ) ){\r\n								$result[''values''] = array();\r\n							}							\r\n							foreach( $matches as $i => $finded ){\r\n								if( isset( $route[''keys''][$i-1] ) ){\r\n									$result[''values''][$route[''keys''][$i-1]] = $finded;\r\n								}\r\n							}							\r\n							if( isset( $route[''children''] ) && ! empty( $route[''children''] ) ){\r\n								$routes = & $route[''children''];\r\n							}\r\n						}\r\n					}					\r\n				}\r\n			}\r\n			\r\n			return $result;\r\n			\r\n		}\r\n		\r\n		private function _cache( $cache_file ){			\r\n			$dir_name = dirname( $cache_file );					\r\n			if( ! is_dir( $dir_name ) ){\r\n				mkdir( $dir_name, 0777, true );\r\n			}						\r\n			$php = ''<?php'' . "\\n" . ''return ''. var_export( $this->routes, true ) . '';'';			\r\n			return @ file_put_contents( $cache_file, $php );			\r\n		}\r\n		\r\n		private function _buildRoutes( $xml ){\r\n			$system			= $xml->xpath( ''/root/system'' );\r\n			$routes			= $xml->xpath( ''/root/routes'' );			\r\n			return array(\r\n				''routes''	=> $this->_buildArray( @ $routes[0] ),\r\n				''system''	=> $this->_buildArray( @ $system[0] )\r\n			);			\r\n		}\r\n		\r\n		private function _buildArray( $nodes ){					\r\n			if( empty( $nodes ) ){\r\n				return false;\r\n			}						\r\n			$params			= array();\r\n			$type2rexexp	= array(\r\n				''num''	=> ''(\\d+)'',\r\n				''str''	=> ''(\\w+)''\r\n			);\r\n			foreach( $nodes->children() as $node ){				\r\n				$attributes = array();					\r\n				foreach( $node->attributes() as $name => $value ){\r\n					$attributes[strtolower( $name )] = (string) $value;\r\n				}					\r\n				if( strpos( $attributes[''match''], ''{'' ) !== false ){					\r\n					$attributes[''keys'']		= array();							\r\n					$attributes[''regexp'']	= preg_replace_callback( ''/\\{([-_\\w]+)\\|?(num|str)?\\}/Uuis'', function( $match ) use ( & $attributes, $type2rexexp ) {\r\n						$keys = & $attributes[''keys''];			\r\n						$keys[] = $match[1];					\r\n						return isset( $match[2] ) ? $type2rexexp[$match[2]] : ''(.+)'';						\r\n					}, $attributes[''match''] );					\r\n					$attributes[''regexp'']	= ''/^''. $attributes[''regexp''] .''$/ui'';	\r\n				}					\r\n				if( $node->count() > 0 ){\r\n					$attributes[''children''] = $this->_buildArray( $node );\r\n				}					\r\n				$params[] = $attributes;\r\n			}			\r\n			return $params;			\r\n		}\r\n		\r\n		\r\n		\r\n	}\r\n	\r\n	error_reporting( E_ALL );\r\n	ini_set( ''display_errors'', ''On'' );\r\n	\r\n	try{\r\n		$router = new Router( ''routes.xml'', ''../cache'', true );\r\n		$result = $router->get( $_GET[''q''] );\r\n		die(var_dump($result));\r\n	}catch( \\Exception $e ){\r\n		die( $e->getMessage() );\r\n	}', 0, '', '2013-03-22 16:33:39'),
(35, 'router cache example', 'php', '<?php\r\nreturn array (\r\n  ''routes'' => \r\n  array (\r\n    0 => \r\n    array (\r\n      ''match'' => ''user'',\r\n      ''controller'' => ''user'',\r\n      ''action'' => ''account'',\r\n      ''children'' => \r\n      array (\r\n        0 => \r\n        array (\r\n          ''match'' => ''logout-{mode}-{back_url}'',\r\n          ''controller'' => ''user'',\r\n          ''action'' => ''logout'',\r\n          ''keys'' => \r\n          array (\r\n            0 => ''mode'',\r\n            1 => ''back_url'',\r\n          ),\r\n          ''regexp'' => ''/^logout-(.+)-(.+)$/ui'',\r\n        ),\r\n        1 => \r\n        array (\r\n          ''match'' => ''{user_id|num}-{group_id|num}'',\r\n          ''controller'' => ''user'',\r\n          ''action'' => ''account'',\r\n          ''keys'' => \r\n          array (\r\n            0 => ''user_id'',\r\n            1 => ''group_id'',\r\n          ),\r\n          ''regexp'' => ''/^(\\\\d+)-(\\\\d+)$/ui'',\r\n          ''children'' => \r\n          array (\r\n            0 => \r\n            array (\r\n              ''match'' => ''pl'',\r\n              ''controller'' => ''user'',\r\n              ''action'' => ''playlist'',\r\n            ),\r\n            1 => \r\n            array (\r\n              ''match'' => ''post-{post_id}'',\r\n              ''controller'' => ''user'',\r\n              ''action'' => ''mypost'',\r\n              ''keys'' => \r\n              array (\r\n                0 => ''post_id'',\r\n              ),\r\n              ''regexp'' => ''/^post-(.+)$/ui'',\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    ),\r\n    1 => \r\n    array (\r\n      ''match'' => ''audio'',\r\n      ''controller'' => ''vkaudio'',\r\n      ''action'' => ''my'',\r\n      ''children'' => \r\n      array (\r\n        0 => \r\n        array (\r\n          ''match'' => ''{audio_id}'',\r\n          ''controller'' => ''vkaudio'',\r\n          ''action'' => ''audio'',\r\n          ''keys'' => \r\n          array (\r\n            0 => ''audio_id'',\r\n          ),\r\n          ''regexp'' => ''/^(.+)$/ui'',\r\n        ),\r\n      ),\r\n    ),\r\n  ),\r\n  ''system'' => \r\n  array (\r\n    0 => \r\n    array (\r\n      ''match'' => ''index'',\r\n      ''controller'' => ''index'',\r\n      ''action'' => ''index'',\r\n    ),\r\n    1 => \r\n    array (\r\n      ''match'' => ''page404'',\r\n      ''controller'' => ''error'',\r\n      ''action'' => ''page404'',\r\n    ),\r\n  ),\r\n);', 0, '', '2013-03-25 11:26:28'),
(36, 'Govno code', 'php', '$data = array(\r\n			array(\r\n				''name'' => ''Ivan'', \r\n				''status'' => ''Admin''\r\n			),\r\n			array(\r\n				''name'' => ''Ivan 3'', \r\n				''status'' => ''Admin 3''\r\n			),\r\n			array(\r\n				''name'' => ''Ivan 2'', \r\n				''status'' => ''Admin 2''\r\n			)\r\n		);\r\n		\r\n		$table = new Table($data, ''a-table'');\r\n		\r\n		$table->setCol(''name'', ''User name'');\r\n		$table->setCol(''status'', ''User status'');\r\n		\r\n		$display = $table->display();', 0, '', '2013-04-05 17:39:58'),
(37, 'Module', 'php', '<?php\r\n\r\nclass users {\r\n	\r\n	public function index($sort = null) {\r\n		\r\n		switch ($sort) {\r\n			case ''administrators'':\r\n				$where = "type = 1";\r\n				$title = "Список администраторов портала";\r\n			break;\r\n			case ''unconfirmed'':\r\n				$where = "flag = 0";\r\n				$title = "Неподтвержденные пользователи";\r\n			break;\r\n			default:\r\n				$where = "1";\r\n				$title = "Список всех пользователей портала";\r\n			break;\r\n		}\r\n		\r\n		$query = "SELECT user_id, email, type, flag, flag_moder, name, date_add, date_edit, country_id\r\n			FROM `users`\r\n			INNER JOIN `users_info` USING(user_id)\r\n			WHERE $where ";\r\n		\r\n		$users = DB::getAssocArray($query);\r\n		\r\n		echo Registry::get(''twig'')->render(''users.tpl'', array(\r\n			''title'' => ''Все пользователи'',\r\n			''table''	=> array(\r\n				''title''		=> $title,\r\n				''data''		=> $users\r\n			)\r\n		));\r\n	}\r\n	\r\n	public function profile($id) {\r\n		$user = User::getFullUserInfo($id);\r\n		\r\n		echo Registry::get(''twig'')->render(''user-profile.tpl'', array(\r\n			''title'' => ''Профиль пользователя'',\r\n			''user''	=> $user\r\n		));\r\n	}\r\n	\r\n	public function message($id) {\r\n		$user = User::getFullUserInfo($id);\r\n		\r\n		echo Registry::get(''twig'')->render(''user-send-message.tpl'', array(\r\n			''title'' => ''Написать пользователю'',\r\n			''user''	=> $user\r\n		));\r\n	}\r\n	\r\n	public function add() {\r\n		$form = new Form();\r\n		\r\n		$form->createTab(''user-default'', ''Основная информация'');\r\n		$form->createTab(''user-subscribe'', ''Настройка подписки'');\r\n		$form->createTab(''user-access'', ''Управление доступом'');\r\n		\r\n		$form->create(''text'', ''name'', ''Ник или ФИО'', null, ''user-default'');\r\n		$form->create(''text'', ''email'', ''E-mail'', null, ''user-default'');\r\n		$form->create(''text'', ''phone'', ''Телефон'', null, ''user-default'');\r\n		$form->create(''pgenerate'', ''passw'', ''Пароль'', null, ''user-default'');\r\n		\r\n		$countries = array(\r\n			1 => ''Украина'',\r\n			2 => ''Россия''\r\n		);\r\n		\r\n		$form->create(''select'', ''country_id'', ''Страна'', $countries, ''user-default'');\r\n		\r\n		$form->create(''file'', ''avatar'', ''Фото или аватар'', null, ''user-default'');\r\n		$form->create(''switch'', ''flag_moder'', ''Добавить без модерации'', 1, ''user-default'');\r\n		\r\n		$form->create(''switch'', ''flag_subscribe'', ''Включить рассылку'', 1, ''user-subscribe'');\r\n		\r\n		$form->create(''switch'', ''flag_default'', ''Использовать настройки по умолчанию'', 1, ''user-access'');\r\n		\r\n		$query = DB::DBObject()->prepare("SELECT section_id, name_sys FROM `sections` WHERE flag = 1 ORDER BY sort_id");\r\n		$query->execute();\r\n		\r\n		while ($array = $query->fetch(PDO::FETCH_OBJ)) {\r\n			$form->create(''title'', ''title-''.$array->section_id, $array->name_sys, null, ''user-access'');\r\n			\r\n			$form->create(''switch'', ''flag_add[''.$array->section_id.'']'', ''Разрешить пользователю добавлять материал'', 1, ''user-access'');\r\n			$form->create(''spinner'', ''count[''.$array->section_id.'']'', ''Количество разрешенных материалов'', null, ''user-access'');\r\n			$form->create(''daterange'', ''date[''.$array->section_id.'']'', ''Период действия разрешения'', null, ''user-access'');\r\n			$form->create(''hidden'', ''section[''.$array->section_id.'']'', null, 1, ''user-access'');\r\n		}\r\n		\r\n		$values = Admin::getDefaultPermissionToForm();\r\n		$form->setValues($values);\r\n		\r\n		$form->setValues(array(\r\n			''flag_moder'' 	=> 1,\r\n			''flag_default'' 	=> 1,\r\n			''country_id'' 	=> Site::getGeoCuuntry()\r\n		));\r\n		\r\n		$form->required(''name'', ''email'', ''phone'', ''passw'', ''country_id'');\r\n		\r\n		if ($send = $form->isSend()) {\r\n			if ($form->checkForm()) {\r\n				\r\n				$user_id = User::addNewUser(\r\n					Request::post(''email'', ''string''),\r\n					Request::post(''passw'', ''hash''),\r\n					Request::post(''flag_moder'', ''int'') \r\n				);\r\n\r\n				if ($_FILES[''avatar''][''name''] != null) {\r\n					$avatar_name = mb_strtolower(Request::post(''name'', ''translitURL''), ''UTF-8'') . ''_'' . $user_id;\r\n					$avatar = User::addUserAvatar(''avatar'', $avatar_name);\r\n				}\r\n				\r\n				User::setUserInfo($user_id, array(\r\n					''country_id''	=> Request::post(''country_id'', ''int''),\r\n					''name''			=> Request::post(''name'', ''string''),\r\n					''phone''			=> Request::post(''phone'', ''string''),\r\n					''avatar''		=> $avatar,\r\n					''ip_address''	=> Site::getRealIP()\r\n				));\r\n				\r\n				$sections 			= array_keys(Request::post(''section''));\r\n				\r\n				$flag_add			= Request::post(''flag_add'');\r\n				$count				= Request::post(''count'');\r\n				$flag_date_limit 	= Request::post(''flag_date_limit'');\r\n				$date_start			= Request::post(''start_date'');\r\n				$date_end			= Request::post(''end_date'');\r\n				 \r\n				for ($i = 0, $c = count($sections); $i < $c; $i++) {\r\n					$id = $sections[$i];\r\n					\r\n					$write = array(\r\n						''user_id''		=> $user_id,\r\n						''section_id'' 	=> Str::get($id)->filterInt(),\r\n						''flag_add''		=> Str::get($flag_add[$id])->filterInt(),\r\n						''count''			=> Str::get($count[$id])->filterInt(),\r\n						''date_start''	=> Str::get($date_start[$id])->filterString(),\r\n						''date_end''		=> Str::get($date_end[$id])->filterString()\r\n					);\r\n					\r\n					DB::insert(''users_permissions'', $write);\r\n					unset($write);\r\n				}\r\n			}\r\n			\r\n			$form->destroy(\r\n				''/admin/users'', \r\n				''/admin/user/edit-''.$user_id\r\n			);\r\n		}\r\n		\r\n		echo Admin::displayFormTPL(\r\n			$form->display(),\r\n			''Добавить нового пользователя'',\r\n			''Добавить нового пользователя''\r\n		);\r\n	}\r\n	\r\n	public function edit($id) {\r\n		\r\n	}\r\n	\r\n	public function delete($id) {\r\n		\r\n	}\r\n	\r\n	public function groups() {\r\n		\r\n		\r\n		echo Registry::get(''twig'')->render(''users-groups.tpl'', array(\r\n			''title'' => ''Группы пользователей'',\r\n			''user''	=> $user\r\n		));\r\n	}\r\n	\r\n	public function groupAdd() {\r\n		\r\n		$form = new Form();\r\n		\r\n		$form->createTab(''group-default'', ''Доступ к разделам сайта'');\r\n		$form->createTab(''group-admin'', ''Доступ к панели управления'');\r\n		\r\n		$form->create(''text'', ''name'', ''Название группы'', null, ''group-default'');\r\n		\r\n		$query = DB::DBObject()->prepare("SELECT section_id, name_sys FROM `sections` WHERE flag = 1 ORDER BY sort_id");\r\n		$query->execute();\r\n		\r\n		while ($array = $query->fetch(PDO::FETCH_OBJ)) {\r\n			$form->create(''title'', ''title-''.$array->section_id, $array->name_sys, null, ''group-default'');\r\n			$form->create(''switch'', ''flag_add[''.$array->section_id.'']'', ''Разрешить пользователям добавлять материал'', 1, ''group-default'');\r\n			$form->attr(''flag_add[''.$array->section_id.'']'', ''class'', ''user_access_check'');\r\n			\r\n			$form->hide(array(\r\n				''count[''.$array->section_id.'']'',\r\n				''time_limit[''.$array->section_id.'']'',\r\n				''life_time[''.$array->section_id.'']''\r\n			));\r\n			\r\n			$form->create(''spinner'', ''count[''.$array->section_id.'']'', ''Количество разрешенных материалов'', null, ''group-default'');\r\n			$form->create(''spinner'', ''time_limit[''.$array->section_id.'']'', ''Период дней после регистрации'', null, ''group-default'');\r\n			$form->create(''spinner'', ''life_time[''.$array->section_id.'']'', ''Период отображения после размещения (дней)'', null, ''group-default'');\r\n		}\r\n		\r\n		$query = DB::DBObject()->prepare("SELECT id, name FROM `admin_groups`");\r\n		$query->execute();\r\n		$array = $query->fetchAll(PDO::FETCH_KEY_PAIR);\r\n		\r\n		$form->create(''switch'', ''flag_admin'', ''Разрешить пользователям доступ в панель управления'', 1, ''group-admin'');\r\n		$form->create(''select'', ''admin_group'', ''Права доступа'', $array, ''group-admin'');\r\n		\r\n		$form->required(''name'');\r\n		\r\n		if ($send = $form->isSend()) {\r\n			if ($form->checkForm()) {\r\n				\r\n				\r\n				\r\n				$write = array(\r\n					''name''	=> Request::post(''name'', ''string'')\r\n				);\r\n				\r\n				$form->destroy(\r\n					''/admin/users'', \r\n					''/admin/user/edit-''.$user_id\r\n				);\r\n			}\r\n		}\r\n		\r\n		echo Admin::displayFormTPL(\r\n			$form->display(),\r\n			''Добавить новоую группу пользователей'',\r\n			''Добавить новоую группу пользователей''\r\n		);\r\n	}\r\n	\r\n	public function getSectionSettings($section_id) {\r\n		\r\n	}\r\n	\r\n	public function settings() {\r\n		$form = new Form();\r\n		\r\n		//$form->createTab(''settings-global'', ''Глобальные'');\r\n		$form->createTab(''settings-access'', ''Настройки доступа по умолчанию'');\r\n		\r\n		//$form->create(''radiobuttons'', ''moderation_type'', ''Тип модерации'', array( 0 => ''Постмодерация'', 1 => ''Премодерация''), ''settings-global'');\r\n		\r\n		$query = DB::DBObject()->prepare("SELECT section_id, name_sys FROM `sections` WHERE flag = 1 ORDER BY sort_id");\r\n		$query->execute();\r\n		\r\n		while ($array = $query->fetch(PDO::FETCH_OBJ)) {\r\n			$form->create(''title'', ''title-''.$array->section_id, $array->name_sys, null, ''settings-access'');\r\n			\r\n			$form->create(''switch'', ''flag_add[''.$array->section_id.'']'', ''Разрешить пользователям добавлять материал'', 1, ''settings-access'');\r\n			$form->create(''spinner'', ''count[''.$array->section_id.'']'', ''Количество разрешенных материалов'', null, ''settings-access'');\r\n			$form->create(''switch'', ''flag_date_limit[''.$array->section_id.'']'', ''Ограничить период размещения'', 1, ''settings-access'');\r\n			$form->create(''spinner'', ''time_limit[''.$array->section_id.'']'', ''Период дней после регистрации'', null, ''settings-access'');\r\n			$form->create(''spinner'', ''life_time[''.$array->section_id.'']'', ''Период отображения после размещения (дней)'', null, ''settings-access'');\r\n			$form->create(''hidden'', ''section[''.$array->section_id.'']'', null, 1, ''settings-access'');\r\n		}\r\n		\r\n		$values = Admin::getDefaultPermissionToForm();\r\n		$form->setValues($values);\r\n		\r\n		if ($send = $form->isSend()) {\r\n			$sections 			= array_keys(Request::post(''section''));\r\n			\r\n			$flag_add			= Request::post(''flag_add'');\r\n			$count				= Request::post(''count'');\r\n			$flag_date_limit 	= Request::post(''flag_date_limit'');\r\n			$time_limit			= Request::post(''time_limit'');\r\n			$life_time			= Request::post(''life_time'');\r\n			 \r\n			for ($i = 0, $c = count($sections); $i < $c; $i++) {\r\n				$id = $sections[$i];\r\n				\r\n				$write = array(\r\n					''section_id'' 		=> Str::get($id)->filterInt(),\r\n					''flag_add''			=> Str::get($flag_add[$id])->filterInt(),\r\n					''count''				=> Str::get($count[$id])->filterInt(),\r\n					''flag_date_limit''	=> Str::get($flag_date_limit[$id])->filterInt(),\r\n					''time_limit''		=> Str::get($time_limit[$id])->filterInt(),\r\n					''life_time''			=> Str::get($life_time[$id])->filterInt()\r\n				);\r\n				\r\n				DB::insert(''users_permissions_default'', $write, 1);\r\n				unset($write);\r\n			}\r\n			\r\n			$form->destroy(\r\n				''/admin/users'', \r\n				''/admin/users/settings''\r\n			);\r\n		}\r\n		\r\n		echo Admin::displayFormTPL(\r\n			$form->display(),\r\n			''Настройки пользователей'',\r\n			''Настройки пользователей''\r\n		);\r\n	}\r\n}', 0, '', '2013-04-11 10:42:21'),
(38, 'Unserialize', 'php', 'public function unserializeAccess($id, $name, $access, $admin_group) {\r\n		return array(\r\n			''id''			=> $id,\r\n			''name''			=> $name,\r\n			''access''		=> unserialize($access),\r\n			''admin_group''	=> $admin_group\r\n		);\r\n	}\r\n	\r\n	public function groups() {\r\n		\r\n		$query = DB::DBObject()->prepare("SELECT id, name, access, admin_group FROM `users_groups`");\r\n		$query->execute();\r\n		$array = $query->fetchAll(PDO::FETCH_FUNC, array($this, ''unserializeAccess''));\r\n		\r\n		var_dump($array);\r\n		\r\n		echo Registry::get(''twig'')->render(''users-groups.tpl'', array(\r\n			''title'' => ''Группы пользователей'',\r\n			''user''	=> $user\r\n		));\r\n	}', 0, '', '2013-04-11 11:42:49'),
(39, 'Govno code', 'php', 'public function groupEditFunc($section_id, $flag_view, $flag_add, $flag_limit, $mod_type, $count, $time_limit, $time_life, $flag_date_limit, $date_start, $date_end) {\r\n		$this->user_permissions_tmp = array_merge($this->user_permissions_tmp, array(\r\n			''flag_view[''.$section_id.'']''		=> $flag_view,\r\n			''flag_add[''.$section_id.'']''			=> $flag_add,\r\n			''flag_limit[''.$section_id.'']''		=> $flag_limit,\r\n			''mod_type[''.$section_id.'']''			=> $mod_type,\r\n			''count[''.$section_id.'']''			=> $count,\r\n			''time_limit[''.$section_id.'']''		=> $time_limit,\r\n			''time_life[''.$section_id.'']''		=> $time_life,\r\n			''flag_date_limit[''.$section_id.'']''	=> $flag_date_limit,\r\n			''date_start[''.$section_id.'']''		=> $date_start,\r\n			''date_end[''.$section_id.'']''			=> $date_end\r\n		));\r\n		\r\n		return true;\r\n	}\r\n	\r\n	public function groupEdit($group_id) {\r\n		\r\n		$data_group = DB::getAssocArray("SELECT group_id, name, description FROM `users_groups` WHERE group_id = $group_id", 1);\r\n		\r\n		$data_permissions = DB::DBObject()->query("SELECT section_id, flag_view, flag_add, flag_limit, \r\n			mod_type, count, time_limit, time_life, flag_date_limit, date_start, date_end\r\n			FROM `users_permissions` \r\n			WHERE group_id = $group_id"\r\n		);\r\n		\r\n		$data_permissions = $data_permissions->fetchAll(PDO::FETCH_FUNC, array($this, ''groupEditFunc''));\r\n		\r\n		$form = new Form();\r\n		\r\n		$form->createTab(''group-default'', ''Основные настройки'');\r\n		$form->createTab(''group-access'', ''Доступ к разделам сайта'');\r\n		$form->createTab(''group-admin'', ''Доступ к панели управления'');\r\n		\r\n		$form->create(''text'', ''name'', ''Название группы'', null, ''group-default'');\r\n		$form->create(''textarea'', ''description'', ''Описание'', null, ''group-default'');\r\n		\r\n		$query = DB::DBObject()->prepare("SELECT section_id, name_sys FROM `sections` WHERE flag = 1 ORDER BY sort_id");\r\n		$query->execute();\r\n		\r\n		while ($array = $query->fetch(PDO::FETCH_OBJ)) {\r\n			$form->create(''title'', ''title-''.$array->section_id, $array->name_sys, null, ''group-access'');\r\n			\r\n			$form->create(''switch'', ''flag_view[''.$array->section_id.'']'', ''Разрешить просмотр раздела'', 1, ''group-access'');\r\n			\r\n			$form->create(''switch'', ''flag_add[''.$array->section_id.'']'', ''Разрешить пользователям добавлять материал'', 1, ''group-access'');\r\n			\r\n			$form->create(''switch'', ''mod_type[''.$array->section_id.'']'', ''Постмодерация'', 1, ''group-access'');\r\n			\r\n			$form->create(''switch'', ''flag_limit[''.$array->section_id.'']'', ''Ограничить добавление'', 1, ''group-access'');\r\n			$form->attr(''flag_limit[''.$array->section_id.'']'', ''class'', ''user_access_check'');\r\n			\r\n			$form->hide(array(\r\n				''count[''.$array->section_id.'']'',\r\n				''time_limit[''.$array->section_id.'']'',\r\n				''time_life[''.$array->section_id.'']'',\r\n				''date_range[''.$array->section_id.'']''\r\n			));\r\n			\r\n			$form->create(''spinner'', ''count[''.$array->section_id.'']'', ''Количество разрешенных материалов'', null, ''group-access'');\r\n			$form->create(''spinner'', ''time_limit[''.$array->section_id.'']'', ''Период добавления после регистрации (дней)'', null, ''group-access'');\r\n			$form->create(''spinner'', ''time_life[''.$array->section_id.'']'', ''Период отображения после размещения (дней)'', null, ''group-access'');\r\n			$form->create(''daterange'', ''date_range[''.$array->section_id.'']'', ''Ограничить период размещения'', null, ''group-access'');\r\n			\r\n			$sections[] = $array->section_id;\r\n		}\r\n		\r\n		$form->required(''name'');\r\n		\r\n		$form->setValues($data_group);\r\n		$form->setValues($this->user_permissions_tmp);\r\n		\r\n		echo Admin::displayFormTPL(\r\n			$form->display(),\r\n			''Изменить группу "''.$data_group[''name''].''"'',\r\n			''Изменить группу ''.$data_group[''name'']\r\n		);\r\n	}', 0, '', '2013-04-16 12:29:50');
INSERT INTO `codes` (`id`, `title`, `language`, `source`, `author_id`, `password`, `added_at`) VALUES
(40, 'Govno nah!', 'php', '<?php\r\n\r\nclass users {\r\n	\r\n	private $user_permissions_tmp = array();\r\n	\r\n	public function index($sort = null) {\r\n		\r\n		switch ($sort) {\r\n			case ''administrators'':\r\n				$where = "type = 1";\r\n				$title = "Список администраторов портала";\r\n			break;\r\n			case ''unconfirmed'':\r\n				$where = "flag = 0";\r\n				$title = "Неподтвержденные пользователи";\r\n			break;\r\n			default:\r\n				$where = "1";\r\n				$title = "Список всех пользователей портала";\r\n			break;\r\n		}\r\n		\r\n		$query = "SELECT user_id, email, group_id, flag, flag_moder, \r\n			users_info.name, users_info.date_add, users_info.date_edit, users_info.country_id, \r\n			users_groups.name AS group_name\r\n			FROM `users`\r\n			INNER JOIN `users_info` USING(user_id)\r\n			INNER JOIN `users_groups` USING(group_id)\r\n			WHERE $where ";\r\n		\r\n		$users = DB::getAssocArray($query);\r\n		\r\n		\r\n		echo Registry::get(''twig'')->render(''users.tpl'', array(\r\n			''title'' => ''Все пользователи'',\r\n			''table''	=> array(\r\n				''title''		=> $title,\r\n				''data''		=> $users\r\n			)\r\n		));\r\n	}\r\n	\r\n	public function profile($id) {\r\n		$user = User::getFullUserInfo($id);\r\n		\r\n		echo Registry::get(''twig'')->render(''user-profile.tpl'', array(\r\n			''title'' => ''Профиль пользователя'',\r\n			''user''	=> $user\r\n		));\r\n	}\r\n	\r\n	public function message($id) {\r\n		$user = User::getFullUserInfo($id);\r\n		\r\n		echo Registry::get(''twig'')->render(''user-send-message.tpl'', array(\r\n			''title'' => ''Написать пользователю'',\r\n			''user''	=> $user\r\n		));\r\n	}\r\n	\r\n	public function add() {\r\n		$form = new Form();\r\n		\r\n		$form->createTab(''user-default'', ''Основная информация'');\r\n		$form->createTab(''user-subscribe'', ''Настройка подписки'');\r\n		$form->createTab(''user-access'', ''Управление доступом'');\r\n		\r\n		$form->create(''text'', ''name'', ''Ник или ФИО'', null, ''user-default'');\r\n		$form->create(''text'', ''email'', ''E-mail'', null, ''user-default'');\r\n		$form->create(''text'', ''phone'', ''Телефон'', null, ''user-default'');\r\n		$form->create(''pgenerate'', ''passw'', ''Пароль'', null, ''user-default'');\r\n		\r\n		$countries = array(\r\n			1 => ''Украина'',\r\n			2 => ''Россия''\r\n		);\r\n		\r\n		$form->create(''select'', ''country_id'', ''Страна'', $countries, ''user-default'');\r\n		\r\n		$form->create(''file'', ''avatar'', ''Фото или аватар'', null, ''user-default'');\r\n		$form->create(''switch'', ''flag_moder'', ''Добавить без модерации'', 1, ''user-default'');\r\n		\r\n		$groups = DB::DBObject()->query("SELECT group_id, name FROM `users_groups` ORDER BY sort_id");\r\n		$groups = $groups->fetchAll(PDO::FETCH_KEY_PAIR);\r\n		\r\n		$form->create(''select'', ''group_id'', ''Группа пользователя'', $groups, ''user-default'');\r\n		\r\n		$form->create(''switch'', ''flag_subscribe'', ''Включить рассылку'', 1, ''user-subscribe'');\r\n		\r\n		$form->create(''switch'', ''flag_permissions'', ''Использовать настройки группы'', 1, ''user-access'');\r\n		\r\n		$query = DB::DBObject()->prepare("SELECT section_id, name_sys FROM `sections` WHERE flag = 1 ORDER BY sort_id");\r\n		$query->execute();\r\n		\r\n		while ($array = $query->fetch(PDO::FETCH_OBJ)) {\r\n			$form->create(''title'', ''title-''.$array->section_id, $array->name_sys, null, ''user-access'');\r\n			\r\n			$form->create(''switch'', ''flag_view[''.$array->section_id.'']'', ''Разрешить просмотр раздела'', 1, ''user-access'');\r\n			$form->setValues(array(''flag_view[''.$array->section_id.'']'' => 1));\r\n			\r\n			$form->create(''switch'', ''flag_add[''.$array->section_id.'']'', ''Разрешить пользователю добавлять материал'', 1, ''user-access'');\r\n			\r\n			$form->create(''switch'', ''mod_type[''.$array->section_id.'']'', ''Постмодерация'', 1, ''user-access'');\r\n			\r\n			$form->create(''switch'', ''flag_limit[''.$array->section_id.'']'', ''Ограничить добавление'', 1, ''user-access'');\r\n			$form->attr(''flag_limit[''.$array->section_id.'']'', ''class'', ''user_access_check'');\r\n			\r\n			$form->hide(array(\r\n				''count[''.$array->section_id.'']'',\r\n				''time_limit[''.$array->section_id.'']'',\r\n				''time_life[''.$array->section_id.'']'',\r\n				''date_range[''.$array->section_id.'']''\r\n			));\r\n			\r\n			$form->create(''spinner'', ''count[''.$array->section_id.'']'', ''Количество разрешенных материалов'', null, ''user-access'');\r\n			$form->create(''spinner'', ''time_limit[''.$array->section_id.'']'', ''Период добавления после регистрации (дней)'', null, ''user-access'');\r\n			$form->create(''spinner'', ''time_life[''.$array->section_id.'']'', ''Период отображения после размещения (дней)'', null, ''user-access'');\r\n			$form->create(''daterange'', ''date_range[''.$array->section_id.'']'', ''Ограничить период размещения'', null, ''user-access'');\r\n			\r\n			$sections[] = $array->section_id;\r\n		}\r\n		\r\n		$form->setValues(array(\r\n			''flag_moder'' 		=> 1,\r\n			''flag_default'' 		=> 1,\r\n			''group_id''			=> 2,\r\n			''flag_permissions''	=> 1,\r\n			''country_id'' 		=> Site::getGeoCuuntry()\r\n		));\r\n		\r\n		$form->required(''name'', ''email'', ''phone'', ''passw'', ''country_id'');\r\n		\r\n		if ($send = $form->isSend()) {\r\n			if ($form->checkForm()) {\r\n				\r\n				$user_id = User::addNewUser(\r\n					Request::post(''email'', ''string''),\r\n					Request::post(''passw'', ''hash''),\r\n					Request::post(''group_id'', ''int''),\r\n					1,\r\n					Request::post(''flag_moder'', ''int'') \r\n				);\r\n\r\n				if ($_FILES[''avatar''][''name''] != null) {\r\n					$avatar_name = mb_strtolower(Request::post(''name'', ''translitURL''), ''UTF-8'') . ''_'' . $user_id;\r\n					$avatar = User::addUserAvatar(''avatar'', $avatar_name);\r\n				}\r\n				\r\n				User::setUserInfo($user_id, array(\r\n					''country_id''	=> Request::post(''country_id'', ''int''),\r\n					''name''			=> Request::post(''name'', ''string''),\r\n					''phone''			=> Request::post(''phone'', ''string''),\r\n					''avatar''		=> $avatar,\r\n					''ip_address''	=> Site::getRealIP()\r\n				));\r\n				\r\n				if (Request::post(''flag_permissions'', ''int'') == 0) {\r\n					$flag_limit	= Request::post(''flag_limit'');\r\n					$mod_type	= Request::post(''mod_type'');\r\n					$count		= Request::post(''count'');\r\n					$time_limit	= Request::post(''time_limit'');\r\n					$time_life 	= Request::post(''time_life'');\r\n					$flag_add	= Request::post(''flag_add'');\r\n					$flag_view	= Request::post(''flag_view'');\r\n					\r\n					$date_start = Request::post(''start_date_range'');\r\n					$date_end	= Request::post(''end_date_range'');\r\n					\r\n					for ($i = 0, $c = count($sections); $i < $c; $i++) {\r\n						$key = $sections[$i];\r\n						\r\n						$write = array(\r\n							''user_id''			=> $user_id,\r\n							''section_id''		=> (int) $key,\r\n							''flag_view''			=> (int) $flag_view[$key],\r\n							''flag_add''			=> (int) $flag_add[$key],\r\n							''flag_limit''		=> (int) $flag_limit[$key],\r\n							''mod_type''			=> (int) $mod_type[$key],\r\n							''count''				=> (int) $count[$key],\r\n							''time_limit''		=> (int) $time_limit[$key],\r\n							''time_life''			=> (int) $time_life[$key],\r\n							''flag_date_limit''	=> $date_start[$key] != null ? 1 : 0,\r\n							''date_start''		=> $date_start[$key],\r\n							''date_end''			=> $date_end[$key]\r\n						);\r\n						\r\n						DB::insert(''users_permissions'', $write);\r\n					}\r\n				}\r\n			}\r\n			\r\n			$form->destroy(\r\n				''/admin/users'', \r\n				''/admin/user/edit-''.$user_id\r\n			);\r\n		}\r\n		\r\n		echo Admin::displayFormTPL(\r\n			$form->display(),\r\n			''Добавить нового пользователя'',\r\n			''Добавить нового пользователя''\r\n		);\r\n	}\r\n	\r\n	public function edit($user_id) {\r\n		\r\n		$user = User::getFullUserInfo($user_id);\r\n		\r\n		$data_permissions = DB::DBObject()->query("SELECT section_id, flag_view, flag_add, flag_limit, \r\n			mod_type, count, time_limit, time_life, flag_date_limit, date_start, date_end\r\n			FROM `users_permissions` \r\n			WHERE user_id = $user_id"\r\n		);\r\n		\r\n		$data_permissions = $data_permissions->fetchAll(PDO::FETCH_FUNC, array($this, ''groupEditFunc''));\r\n		\r\n		$form = new Form();\r\n		\r\n		$form->createTab(''user-default'', ''Основная информация'');\r\n		$form->createTab(''user-subscribe'', ''Настройка подписки'');\r\n		$form->createTab(''user-access'', ''Управление доступом'');\r\n		\r\n		$form->create(''text'', ''name'', ''Ник или ФИО'', null, ''user-default'');\r\n		$form->create(''text'', ''email'', ''E-mail'', null, ''user-default'');\r\n		$form->create(''text'', ''phone'', ''Телефон'', null, ''user-default'');\r\n		\r\n		$countries = array(\r\n			1 => ''Украина'',\r\n			2 => ''Россия''\r\n		);\r\n		\r\n		$form->create(''select'', ''country_id'', ''Страна'', $countries, ''user-default'');\r\n		\r\n		$form->create(''file'', ''avatar'', ''Фото или аватар'', null, ''user-default'');\r\n		\r\n		$groups = DB::DBObject()->query("SELECT group_id, name FROM `users_groups` ORDER BY sort_id");\r\n		$groups = $groups->fetchAll(PDO::FETCH_KEY_PAIR);\r\n		\r\n		$form->create(''select'', ''group_id'', ''Группа пользователя'', $groups, ''user-default'');\r\n		\r\n		$form->create(''switch'', ''flag_subscribe'', ''Включить рассылку'', 1, ''user-subscribe'');\r\n		\r\n		$form->create(''switch'', ''flag_permissions'', ''Использовать настройки группы'', 1, ''user-access'');\r\n		\r\n		$query = DB::DBObject()->prepare("SELECT section_id, name_sys FROM `sections` WHERE flag = 1 ORDER BY sort_id");\r\n		$query->execute();\r\n		\r\n		while ($array = $query->fetch(PDO::FETCH_OBJ)) {\r\n			$form->create(''title'', ''title-''.$array->section_id, $array->name_sys, null, ''user-access'');\r\n			\r\n			$form->create(''switch'', ''flag_view[''.$array->section_id.'']'', ''Разрешить просмотр раздела'', 1, ''user-access'');\r\n			$form->setValues(array(''flag_view[''.$array->section_id.'']'' => 1));\r\n			\r\n			$form->create(''switch'', ''flag_add[''.$array->section_id.'']'', ''Разрешить пользователю добавлять материал'', 1, ''user-access'');\r\n			\r\n			$form->create(''switch'', ''mod_type[''.$array->section_id.'']'', ''Постмодерация'', 1, ''user-access'');\r\n			\r\n			$form->create(''switch'', ''flag_limit[''.$array->section_id.'']'', ''Ограничить добавление'', 1, ''user-access'');\r\n			$form->attr(''flag_limit[''.$array->section_id.'']'', ''class'', ''user_access_check'');\r\n			\r\n			$form->hide(array(\r\n				''count[''.$array->section_id.'']'',\r\n				''time_limit[''.$array->section_id.'']'',\r\n				''time_life[''.$array->section_id.'']'',\r\n				''date_range[''.$array->section_id.'']''\r\n			));\r\n			\r\n			$form->create(''spinner'', ''count[''.$array->section_id.'']'', ''Количество разрешенных материалов'', null, ''user-access'');\r\n			$form->create(''spinner'', ''time_limit[''.$array->section_id.'']'', ''Период добавления после регистрации (дней)'', null, ''user-access'');\r\n			$form->create(''spinner'', ''time_life[''.$array->section_id.'']'', ''Период отображения после размещения (дней)'', null, ''user-access'');\r\n			$form->create(''daterange'', ''date_range[''.$array->section_id.'']'', ''Ограничить период размещения'', null, ''user-access'');\r\n			\r\n			$sections[] = $array->section_id;\r\n		}\r\n		\r\n		$user_avatar = $user[''avatar''];\r\n		$user[''avatar''] =& $user[''avatar_full'']; \r\n		\r\n		$form->setValues($user);\r\n		$form->setValues($this->user_permissions_tmp);\r\n		\r\n		if (count($this->user_permissions_tmp) < 1) {\r\n			$form->setValues(array(\r\n				''flag_permissions''	=> 1\r\n			));\r\n		}\r\n		\r\n		$form->required(''name'', ''email'', ''phone'', ''passw'', ''country_id'');\r\n		\r\n		if ($send = $form->isSend()) {\r\n			if ($form->checkForm()) {\r\n				\r\n				User::editUser(\r\n					$user_id, \r\n					Request::post(''email'', ''string''), \r\n					Request::post(''group_id'', ''int''),\r\n					1,\r\n					1\r\n				);\r\n				\r\n				if ($_FILES[''avatar''][''name''] != null) {\r\n					if (User::deleteUserAvatar($user_avatar)) {\r\n						$avatar_name = mb_strtolower(Request::post(''name'', ''translitURL''), ''UTF-8'') . ''_'' . $user_id;\r\n						$avatar = User::addUserAvatar(''avatar'', $avatar_name);\r\n					}\r\n					else {\r\n						$avatar = $user_avatar;\r\n						die("Error, nihuya ne delete!");\r\n					}\r\n				}\r\n				\r\n				$write = array(\r\n					''country_id''	=> Request::post(''country_id'', ''int''),\r\n					''name''			=> Request::post(''name'', ''string''),\r\n					''phone''			=> Request::post(''phone'', ''string''),\r\n					''avatar''		=> $avatar\r\n				);\r\n				\r\n				DB::update(''users_info'', $write, array(''user_id'' => $user_id));\r\n				\r\n				if (Request::post(''flag_permissions'', ''int'') == 0) {\r\n					$flag_limit	= Request::post(''flag_limit'');\r\n					$mod_type	= Request::post(''mod_type'');\r\n					$count		= Request::post(''count'');\r\n					$time_limit	= Request::post(''time_limit'');\r\n					$time_life 	= Request::post(''time_life'');\r\n					$flag_add	= Request::post(''flag_add'');\r\n					$flag_view	= Request::post(''flag_view'');\r\n					\r\n					$date_start = Request::post(''start_date_range'');\r\n					$date_end	= Request::post(''end_date_range'');\r\n					\r\n					for ($i = 0, $c = count($sections); $i < $c; $i++) {\r\n						$key = $sections[$i];\r\n						\r\n						$write = array(\r\n							''user_id''			=> $user_id,\r\n							''section_id''		=> (int) $key,\r\n							''flag_view''			=> (int) $flag_view[$key],\r\n							''flag_add''			=> (int) $flag_add[$key],\r\n							''flag_limit''		=> (int) $flag_limit[$key],\r\n							''mod_type''			=> (int) $mod_type[$key],\r\n							''count''				=> (int) $count[$key],\r\n							''time_limit''		=> (int) $time_limit[$key],\r\n							''time_life''			=> (int) $time_life[$key],\r\n							''flag_date_limit''	=> $date_start[$key] != null ? 1 : 0,\r\n							''date_start''		=> $date_start[$key],\r\n							''date_end''			=> $date_end[$key]\r\n						);\r\n						\r\n						DB::insert(''users_permissions'', $write);\r\n					}\r\n				}\r\n			}\r\n			\r\n			$form->destroy(\r\n				''/admin/users'', \r\n				''/admin/user/edit-''.$user_id\r\n			);\r\n		}\r\n		\r\n		echo Admin::displayFormTPL(\r\n			$form->display(),\r\n			''Редактировать профиль пользователя'',\r\n			''Редактировать профиль пользователя''\r\n		);\r\n	}\r\n	\r\n	public function delete($user_id) {\r\n		\r\n	}\r\n	\r\n	public function sorted() {\r\n		parse_str($_GET[''data''], $sort);\r\n		\r\n		$query = "UPDATE `users_groups` SET sort_id = CASE ";\r\n		\r\n		for ($i = 0, $c = count($sort[''group'']); $i < $c; $i++) \r\n			$query .= " WHEN group_id = " . (int)$sort[''group''][$i] . " THEN $i ";\r\n		\r\n		$query .= "ELSE sort_id END";\r\n		\r\n		DB::query($query);\r\n		\r\n		return true;\r\n	}\r\n	\r\n	public function groups() {\r\n		\r\n		$array = DB::getAssocArray("SELECT group_id, name, date_add, date_edit FROM `users_groups`");\r\n		\r\n		echo Registry::get(''twig'')->render(''users-groups.tpl'', array(\r\n			''title'' 	=> ''Группы пользователей'',\r\n			''groups''	=> $array\r\n		));\r\n	}\r\n	\r\n	public function groupAdd() {\r\n		\r\n		$form = new Form();\r\n		\r\n		$form->createTab(''group-default'', ''Основные настройки'');\r\n		$form->createTab(''group-access'', ''Доступ к разделам сайта'');\r\n		$form->createTab(''group-admin'', ''Доступ к панели управления'');\r\n		\r\n		$form->create(''text'', ''name'', ''Название группы'', null, ''group-default'');\r\n		$form->create(''textarea'', ''description'', ''Описание'', null, ''group-default'');\r\n		\r\n		$query = DB::DBObject()->prepare("SELECT section_id, name_sys FROM `sections` WHERE flag = 1 ORDER BY sort_id");\r\n		$query->execute();\r\n		\r\n		while ($array = $query->fetch(PDO::FETCH_OBJ)) {\r\n			$form->create(''title'', ''title-''.$array->section_id, $array->name_sys, null, ''group-access'');\r\n			\r\n			$form->create(''switch'', ''flag_view[''.$array->section_id.'']'', ''Разрешить просмотр раздела'', 1, ''group-access'');\r\n			$form->setValues(array(''flag_view[''.$array->section_id.'']'' => 1));\r\n			\r\n			$form->create(''switch'', ''flag_add[''.$array->section_id.'']'', ''Разрешить пользователям добавлять материал'', 1, ''group-access'');\r\n			\r\n			$form->create(''switch'', ''mod_type[''.$array->section_id.'']'', ''Постмодерация'', 1, ''group-access'');\r\n			\r\n			$form->create(''switch'', ''flag_limit[''.$array->section_id.'']'', ''Ограничить добавление'', 1, ''group-access'');\r\n			$form->attr(''flag_limit[''.$array->section_id.'']'', ''class'', ''user_access_check'');\r\n			\r\n			$form->hide(array(\r\n				''count[''.$array->section_id.'']'',\r\n				''time_limit[''.$array->section_id.'']'',\r\n				''time_life[''.$array->section_id.'']'',\r\n				''date_range[''.$array->section_id.'']''\r\n			));\r\n			\r\n			$form->create(''spinner'', ''count[''.$array->section_id.'']'', ''Количество разрешенных материалов'', null, ''group-access'');\r\n			$form->create(''spinner'', ''time_limit[''.$array->section_id.'']'', ''Период добавления после регистрации (дней)'', null, ''group-access'');\r\n			$form->create(''spinner'', ''time_life[''.$array->section_id.'']'', ''Период отображения после размещения (дней)'', null, ''group-access'');\r\n			$form->create(''daterange'', ''date_range[''.$array->section_id.'']'', ''Ограничить период размещения'', null, ''group-access'');\r\n			\r\n			$sections[] = $array->section_id;\r\n		}\r\n		\r\n		$form->required(''name'');\r\n		\r\n		if ($send = $form->isSend()) {\r\n			if ($form->checkForm()) {\r\n				\r\n				$flag_limit	= Request::post(''flag_limit'');\r\n				$mod_type	= Request::post(''mod_type'');\r\n				$count		= Request::post(''count'');\r\n				$time_limit	= Request::post(''time_limit'');\r\n				$time_life 	= Request::post(''time_life'');\r\n				$flag_add	= Request::post(''flag_add'');\r\n				$flag_view	= Request::post(''flag_view'');\r\n				\r\n				$date_start = Request::post(''start_date_range'');\r\n				$date_end	= Request::post(''end_date_range'');\r\n				\r\n				$write = array(\r\n					''name''			=> Request::post(''name'', ''string''),\r\n					''description''	=> Request::post(''description'', ''string''),\r\n					''date_add''		=> DB::now()\r\n				);\r\n				\r\n				if (DB::insert(''users_groups'', $write)) {\r\n					$group_id = DB::lastInsertId();\r\n					\r\n					for ($i = 0, $c = count($sections); $i < $c; $i++) {\r\n						$key = $sections[$i];\r\n						\r\n						$write = array(\r\n							''group_id''			=> $group_id,\r\n							''section_id''		=> (int) $key,\r\n							''flag_view''			=> (int) $flag_view[$key],\r\n							''flag_add''			=> (int) $flag_add[$key],\r\n							''flag_limit''		=> (int) $flag_limit[$key],\r\n							''mod_type''			=> (int) $mod_type[$key],\r\n							''count''				=> (int) $count[$key],\r\n							''time_limit''		=> (int) $time_limit[$key],\r\n							''time_life''			=> (int) $time_life[$key],\r\n							''flag_date_limit''	=> $date_start[$key] != null ? 1 : 0,\r\n							''date_start''		=> $date_start[$key],\r\n							''date_end''			=> $date_end[$key]\r\n						);\r\n						\r\n						DB::insert(''users_permissions'', $write);\r\n					}\r\n				}\r\n				\r\n				$form->destroy(\r\n					''/admin/users/groups'', \r\n					''/ admin/user/group/edit-''.DB::lastInsertId()\r\n				);\r\n			}\r\n		}\r\n		\r\n		echo Admin::displayFormTPL(\r\n			$form->display(),\r\n			''Добавить новоую группу пользователей'',\r\n			''Добавить новоую группу пользователей''\r\n		);\r\n	}\r\n	\r\n	public function groupEditFunc($section_id, $flag_view, $flag_add, $flag_limit, $mod_type, $count, $time_limit, $time_life, $flag_date_limit, $date_start, $date_end) {\r\n		$this->user_permissions_tmp = array_merge($this->user_permissions_tmp, array(\r\n			''flag_view[''.$section_id.'']''		=> $flag_view,\r\n			''flag_add[''.$section_id.'']''			=> $flag_add,\r\n			''flag_limit[''.$section_id.'']''		=> $flag_limit,\r\n			''mod_type[''.$section_id.'']''			=> $mod_type,\r\n			''count[''.$section_id.'']''			=> $count,\r\n			''time_limit[''.$section_id.'']''		=> $time_limit,\r\n			''time_life[''.$section_id.'']''		=> $time_life,\r\n			''flag_date_limit[''.$section_id.'']''	=> $flag_date_limit,\r\n			''date_start[''.$section_id.'']''		=> $date_start,\r\n			''date_end[''.$section_id.'']''			=> $date_end\r\n		));\r\n		\r\n		return true;\r\n	}\r\n	\r\n	public function groupEdit($group_id) {\r\n		\r\n		$data_group = DB::getAssocArray("SELECT group_id, name, description FROM `users_groups` WHERE group_id = $group_id", 1);\r\n		\r\n		$data_permissions = DB::DBObject()->query("SELECT section_id, flag_view, flag_add, flag_limit, \r\n			mod_type, count, time_limit, time_life, flag_date_limit, date_start, date_end\r\n			FROM `users_permissions` \r\n			WHERE group_id = $group_id"\r\n		);\r\n		\r\n		$data_permissions = $data_permissions->fetchAll(PDO::FETCH_FUNC, array($this, ''groupEditFunc''));\r\n		\r\n		$form = new Form();\r\n		\r\n		$form->createTab(''group-default'', ''Основные настройки'');\r\n		$form->createTab(''group-access'', ''Доступ к разделам сайта'');\r\n		$form->createTab(''group-admin'', ''Доступ к панели управления'');\r\n		\r\n		$form->create(''text'', ''name'', ''Название группы'', null, ''group-default'');\r\n		$form->create(''textarea'', ''description'', ''Описание'', null, ''group-default'');\r\n		\r\n		$query = DB::DBObject()->prepare("SELECT section_id, name_sys FROM `sections` WHERE flag = 1 ORDER BY sort_id");\r\n		$query->execute();\r\n		\r\n		while ($array = $query->fetch(PDO::FETCH_OBJ)) {\r\n			$form->create(''title'', ''title-''.$array->section_id, $array->name_sys, null, ''group-access'');\r\n			\r\n			$form->create(''switch'', ''flag_view[''.$array->section_id.'']'', ''Разрешить просмотр раздела'', 1, ''group-access'');\r\n			\r\n			$form->create(''switch'', ''flag_add[''.$array->section_id.'']'', ''Разрешить пользователям добавлять материал'', 1, ''group-access'');\r\n			\r\n			$form->create(''switch'', ''mod_type[''.$array->section_id.'']'', ''Постмодерация'', 1, ''group-access'');\r\n			\r\n			$form->create(''switch'', ''flag_limit[''.$array->section_id.'']'', ''Ограничить добавление'', 1, ''group-access'');\r\n			$form->attr(''flag_limit[''.$array->section_id.'']'', ''class'', ''user_access_check'');\r\n			\r\n			$form->hide(array(\r\n				''count[''.$array->section_id.'']'',\r\n				''time_limit[''.$array->section_id.'']'',\r\n				''time_life[''.$array->section_id.'']'',\r\n				''date_range[''.$array->section_id.'']''\r\n			));\r\n			\r\n			$form->create(''spinner'', ''count[''.$array->section_id.'']'', ''Количество разрешенных материалов'', null, ''group-access'');\r\n			$form->create(''spinner'', ''time_limit[''.$array->section_id.'']'', ''Период добавления после регистрации (дней)'', null, ''group-access'');\r\n			$form->create(''spinner'', ''time_life[''.$array->section_id.'']'', ''Период отображения после размещения (дней)'', null, ''group-access'');\r\n			$form->create(''daterange'', ''date_range[''.$array->section_id.'']'', ''Ограничить период размещения'', null, ''group-access'');\r\n			\r\n			$sections[] = $array->section_id;\r\n		}\r\n		\r\n		$form->required(''name'');\r\n		\r\n		$form->setValues($data_group);\r\n		$form->setValues($this->user_permissions_tmp);\r\n		\r\n		if ($send = $form->isSend()) {\r\n			if ($form->checkForm()) {\r\n				\r\n				$flag_limit	= Request::post(''flag_limit'');\r\n				$mod_type	= Request::post(''mod_type'');\r\n				$count		= Request::post(''count'');\r\n				$time_limit	= Request::post(''time_limit'');\r\n				$time_life 	= Request::post(''time_life'');\r\n				$flag_add	= Request::post(''flag_add'');\r\n				$flag_view	= Request::post(''flag_view'');\r\n				\r\n				$date_start = Request::post(''start_date_range'');\r\n				$date_end	= Request::post(''end_date_range'');\r\n				\r\n				$write = array(\r\n					''name''			=> Request::post(''name'', ''string''),\r\n					''description''	=> Request::post(''description'', ''string''),\r\n					''date_add''		=> DB::now()\r\n				);\r\n				\r\n				if (DB::update(''users_groups'', $write, array(''group_id'' => $group_id))) {\r\n					\r\n					for ($i = 0, $c = count($sections); $i < $c; $i++) {\r\n						$key = $sections[$i];\r\n						\r\n						$write = array(\r\n							''flag_view''			=> (int) $flag_view[$key],\r\n							''flag_add''			=> (int) $flag_add[$key],\r\n							''flag_limit''		=> (int) $flag_limit[$key],\r\n							''mod_type''			=> (int) $mod_type[$key],\r\n							''count''				=> (int) $count[$key],\r\n							''time_limit''		=> (int) $time_limit[$key],\r\n							''time_life''			=> (int) $time_life[$key],\r\n							''flag_date_limit''	=> $date_start[$key] != null ? 1 : 0,\r\n							''date_start''		=> $date_start[$key],\r\n							''date_end''			=> $date_end[$key]\r\n						);\r\n						\r\n						if (count($this->user_permissions_tmp) > 0) {\r\n							DB::update(''users_permissions'', $write, array(''group_id'' => $group_id, ''section_id'' => $key));\r\n						}\r\n						else {\r\n							DB::insert(''users_permissions'', array_merge(array(''group_id'' => $group_id, ''section_id'' => $key), $write));\r\n						}\r\n					}\r\n				}\r\n				\r\n				$form->destroy(\r\n					''/admin/users/groups'', \r\n					''/admin/users/group/edit-''.$group_id\r\n				);\r\n			}\r\n		}\r\n		\r\n		echo Admin::displayFormTPL(\r\n			$form->display(),\r\n			''Изменить группу "''.$data_group[''name''].''"'',\r\n			''Изменить группу ''.$data_group[''name'']\r\n		);\r\n	}\r\n	\r\n	public function settings() {\r\n		$form = new Form();\r\n		\r\n		//$form->createTab(''settings-global'', ''Глобальные'');\r\n		$form->createTab(''settings-access'', ''Настройки доступа по умолчанию'');\r\n		\r\n		//$form->create(''radiobuttons'', ''moderation_type'', ''Тип модерации'', array( 0 => ''Постмодерация'', 1 => ''Премодерация''), ''settings-global'');\r\n		\r\n		$query = DB::DBObject()->prepare("SELECT section_id, name_sys FROM `sections` WHERE flag = 1 ORDER BY sort_id");\r\n		$query->execute();\r\n		\r\n		while ($array = $query->fetch(PDO::FETCH_OBJ)) {\r\n			$form->create(''title'', ''title-''.$array->section_id, $array->name_sys, null, ''settings-access'');\r\n			\r\n			$form->create(''switch'', ''flag_add[''.$array->section_id.'']'', ''Разрешить пользователям добавлять материал'', 1, ''settings-access'');\r\n			$form->create(''spinner'', ''count[''.$array->section_id.'']'', ''Количество разрешенных материалов'', null, ''settings-access'');\r\n			$form->create(''switch'', ''flag_date_limit[''.$array->section_id.'']'', ''Ограничить период размещения'', 1, ''settings-access'');\r\n			$form->create(''spinner'', ''time_limit[''.$array->section_id.'']'', ''Период дней после регистрации'', null, ''settings-access'');\r\n			$form->create(''spinner'', ''life_time[''.$array->section_id.'']'', ''Период отображения после размещения (дней)'', null, ''settings-access'');\r\n			$form->create(''hidden'', ''section[''.$array->section_id.'']'', null, 1, ''settings-access'');\r\n		}\r\n		\r\n		$values = Admin::getDefaultPermissionToForm();\r\n		$form->setValues($values);\r\n		\r\n		if ($send = $form->isSend()) {\r\n			$sections 			= array_keys(Request::post(''section''));\r\n			\r\n			$flag_add			= Request::post(''flag_add'');\r\n			$count				= Request::post(''count'');\r\n			$flag_date_limit 	= Request::post(''flag_date_limit'');\r\n			$time_limit			= Request::post(''time_limit'');\r\n			$life_time			= Request::post(''life_time'');\r\n			 \r\n			for ($i = 0, $c = count($sections); $i < $c; $i++) {\r\n				$id = $sections[$i];\r\n				\r\n				$write = array(\r\n					''section_id'' 		=> Str::get($id)->filterInt(),\r\n					''flag_add''			=> Str::get($flag_add[$id])->filterInt(),\r\n					''count''				=> Str::get($count[$id])->filterInt(),\r\n					''flag_date_limit''	=> Str::get($flag_date_limit[$id])->filterInt(),\r\n					''time_limit''		=> Str::get($time_limit[$id])->filterInt(),\r\n					''life_time''			=> Str::get($life_time[$id])->filterInt()\r\n				);\r\n				\r\n				DB::insert(''users_permissions_default'', $write, 1);\r\n				unset($write);\r\n			}\r\n			\r\n			$form->destroy(\r\n				''/admin/users'', \r\n				''/admin/users/settings''\r\n			);\r\n		}\r\n		\r\n		echo Admin::displayFormTPL(\r\n			$form->display(),\r\n			''Настройки пользователей'',\r\n			''Настройки пользователей''\r\n		);\r\n	}\r\n}', 0, '', '2013-04-22 12:17:18'),
(41, 'Shorter Мой', 'php', '<?php\r\n\r\n	// Ivan Gontarenko\r\n\r\n	class Cry{\r\n\r\n		private $_list = array(),\r\n				$_size = 0;\r\n\r\n		public function __construct(){\r\n			$this->_list = array_merge( array(-1), range( ''a'', ''z'' ), range( ''0'', ''9'' ) );\r\n			unset( $this->_list[0] );\r\n			$this->_size = count( $this->_list );\r\n		}\r\n\r\n		public function encode( $int_value = 0 ){\r\n\r\n			if( ! is_numeric( $int_value ) || 0 >= $int_value ){\r\n				return null;\r\n			}\r\n\r\n			$l = 1;\r\n			$r = '''';\r\n\r\n			$tmp_value = $int_value;\r\n			do{\r\n				$tmp_value /= $this->_size;\r\n				$l++;\r\n			}while( $tmp_value > $this->_size );\r\n\r\n			for( $j = $l; $j > 0; $j-- ){\r\n				$p = ( $j == 1 ) ? 1 : 0;\r\n				$s = pow( $this->_size, $j - 1 );\r\n				while( $int_value > $s && ( ( $j - 2 ) <> 1 ? true : ( ( $int_value - $s ) > $this->_size ) ) ){					\r\n					$int_value -= $s; $p++;										\r\n				}\r\n				$r .= $this->_list[$p];				\r\n			}\r\n\r\n			return $r;\r\n\r\n		}\r\n\r\n		public function decode( $str_value = '''' ){\r\n\r\n			$str_value = (string) $str_value;\r\n\r\n			if( ! is_string( $str_value ) ){\r\n				return null;\r\n			}\r\n\r\n			$l = strlen( $str_value );\r\n			$r = 0;\r\n\r\n			for( $i = $l-1; $i >= 0; $i-- ){\r\n				$c = $str_value{$i};\r\n				$k 	= array_search( $c, $this->_list );\r\n				if( $l - 1 == $i ){\r\n					$r += $k;\r\n				}else{\r\n					$r += pow( $this->_size, ( $l - 1 ) - $i ) * $k;\r\n				}\r\n			}\r\n\r\n			return $r;\r\n\r\n		}\r\n\r\n	}', 0, '', '2013-04-22 13:59:40'),
(42, 'govno bliady!', 'php', 'if ($send = $form->isSend()) {\r\n			if ($form->checkForm()) {\r\n				\r\n				$images = Request::post(''images'');\r\n				$categs = Request::post(''categs'');\r\n				$tags 	= Request::post(''tags'');\r\n				\r\n				$write = array(\r\n					''user_id''			=> 1,\r\n					''name''				=> Request::post(''name'', ''string''),\r\n					''author''			=> Request::post(''author'', ''string''),\r\n					''source_name''		=> Request::post(''source_name'', ''string''),\r\n					''source_link''		=> Request::post(''source_link'', ''string''),\r\n					''content_min''		=> Request::post(''content_min'', ''string''),\r\n					''content''			=> Request::post(''content''),\r\n					''video_link''		=> Request::post(''video_link'', ''string''),\r\n					''date_public''		=> Request::post(''date_public'', ''string''),\r\n					''date_add''			=> DB::now(),\r\n					''flag''				=> Request::post(''flag'', ''int''),\r\n					''image''				=> $images[0],\r\n					''meta_title''		=> Request::post(''meta_title'', ''string''),\r\n					''meta_description''	=> Request::post(''meta_description'', ''string''),\r\n					''meta_keys''			=> Request::post(''meta_keys'', ''string'')\r\n				);\r\n				\r\n				if (DB::insert(''articles'', $write)) {\r\n					$article_id = DB::lastInsertId();\r\n					\r\n					$images = implode('', '', $images);\r\n					DB::query("UPDATE `articles_images` SET article_id = $article_id WHERE id IN($images)");\r\n					\r\n					for ($i = 0, $c = count($categs); $i < $c; $i++) {\r\n						$write = array(\r\n							''article_id''	=> $article_id,\r\n							''categ_id''		=> $categs[$i] \r\n						);\r\n						DB::insert(''articles_categs'', $write);\r\n					}\r\n				}\r\n				\r\n			}\r\n			\r\n			$form->destroy(\r\n				''/admin/article/add'', \r\n				''/admin/article/edit-''.$article_id\r\n			);\r\n		}', 0, '', '2013-04-26 15:39:31'),
(43, 'Govno JS', 'js', '$(''.uploader li'').not(''.image-added'').fineUploader({\r\n      request: {\r\n        endpoint: ''/admin/index.ajax.php?route=upload/images''\r\n      },\r\n      failedUploadTextDisplay: {\r\n        maxChars: 40,\r\n        responseProperty: ''error'',\r\n        enableTooltip: true\r\n      },\r\n	  text: {\r\n        uploadButton: ''<i class="a-icon-plus a-icon-gray"></i>''\r\n      },\r\n	  template: ''<div class="qq-uploader">'' +\r\n				  ''<pre class="qq-upload-drop-area span12"><span></span></pre>'' +\r\n				  ''<div class="qq-upload-button btn btn-success"><i class="a-icon-plus a-icon-gray"></i></div>'' +\r\n				  ''<span class="qq-drop-processing"><span></span><span class="qq-drop-processing-spinner"></span></span>'' +\r\n				  ''<ul class="qq-upload-list" style="margin-top: 10px; text-align: center; display:none"></ul>'' +\r\n				''</div>''\r\n    }).on(''upload'', function(event, id, fileName){\r\n		$(this).parent().find(''li'').each(function(index, element) {\r\n                if($(this).find(''img'').index() == -1) {\r\n					$(this).find(''i'').attr(''class'', ''load'');\r\n					\r\n					return false;\r\n				}\r\n            });\r\n	}).on(''progress'', function(event, id, fileName, loaded, total){\r\n		//_progress = Math.ceil((loaded * 100) / total);\r\n		//$(this).find(''i'').removeClass(''a-icon-plus a-icon-gray'').text(_progress + ''%'');\r\n	}).on(''complete'', function(event, id, fileName, responseJSON) {\r\n		if (responseJSON.success) {\r\n			$(this).parent().find(''li'').each(function() {\r\n                if($(this).find(''img'').index() == -1) {\r\n					$(this).find(''.qq-uploader'').hide();\r\n					\r\n					_html = ''<input id="iamge_'' + responseJSON.image_id + ''" type="hidden" name="images[]" value="'' + responseJSON.image_id + ''" />'' +\r\n							''<img src="'' + responseJSON.uploadName + ''" alt="'' + responseJSON.id_image + ''">'' +\r\n							''<div class="options">'' +\r\n								''<a class="add-description" title="Добавить описание" href="'' + responseJSON.image_id + ''"><i class="a-icon-pencil a-icon-white"></i></a>'' +\r\n								''<a class="delete-image" title="Удалить" href="'' + responseJSON.image_id + ''"><i class="a-icon-trash a-icon-white"></i></a>'' +\r\n							''</div>'';\r\n							\r\n					$(this).addClass(''image-added'').append(_html);\r\n					\r\n					return false;\r\n				}\r\n            });\r\n		}\r\n    });\r\n	\r\n	$(''.uploader li.image-added'').each(function() {\r\n		_id = $(this).find(''img'').attr(''alt'');\r\n		\r\n        _html = \r\n			''<div class="options">'' +\r\n				''<a class="add-description" title="Добавить описание" href="'' + _id + ''"><i class="a-icon-pencil a-icon-white"></i></a>'' +\r\n				''<a class="delete-image" title="Удалить" href="'' + _id + ''"><i class="a-icon-trash a-icon-white"></i></a>'' +\r\n			''</div>'';\r\n			\r\n		$(this).append(_html);\r\n    });\r\n	\r\n	$(''.options .delete-image'').live(''click'', function(){\r\n		_parent = $(this).parent().parent();\r\n		\r\n		_parent.removeClass(''image-added'').find(''img, input[type=hidden], .options'').remove();\r\n		_parent.find(''.qq-uploader'').show();\r\n		_parent.find(''i'').attr(''class'', ''a-icon-plus a-icon-gray'');\r\n		\r\n		$.ajax({\r\n			type: "GET",\r\n			url: ''/admin/index.ajax.php'',\r\n			data: {\r\n				''route'': ''upload/''\r\n			},\r\n			dataType:"html",\r\n			cache: false,\r\n			success: function(data) {\r\n				\r\n			}\r\n		});\r\n		\r\n		return false;\r\n	});', 0, '', '2013-04-27 13:06:14'),
(44, 'Код, такой код))', 'php', '// Так, потому что так, я не знаю почему, но так надо.\r\n			if( false ){\r\n				$paysite_url = $api->getTDSDomain();\r\n			}else{\r\n				$paysite_url = \\Sy\\URI::base( true );\r\n			}', 0, '', '2013-03-28 17:41:53'),
(45, 'Кука', 'js', 'if( ! jQuery.cookie( ''my_kyka_bliat'' ) ){\r\n		jQuery.cookie( ''my_kyka_bliat'', ''xyu'' );\r\n		okoshko_poiavis();\r\n	}\r\n', 0, '', '2013-03-30 20:25:45'),
(46, 'TreeRouter cache file', 'php', '<?php\r\nreturn array (\r\n  ''routes'' => \r\n  array (\r\n    0 => \r\n    array (\r\n      ''match'' => ''audio'',\r\n      ''controller'' => ''vk'',\r\n      ''action'' => ''getTrack'',\r\n      ''children'' => \r\n      array (\r\n        0 => \r\n        array (\r\n          ''match'' => ''{id|num}'',\r\n          ''controller'' => ''vk'',\r\n          ''action'' => ''getTrack'',\r\n          ''keys'' => \r\n          array (\r\n            0 => ''id'',\r\n          ),\r\n          ''regexp'' => ''/^(\\\\d+)$/ui'',\r\n        ),\r\n      ),\r\n    ),\r\n    1 => \r\n    array (\r\n      ''match'' => ''user'',\r\n      ''controller'' => ''index'',\r\n      ''action'' => ''page_404'',\r\n      ''children'' => \r\n      array (\r\n        0 => \r\n        array (\r\n          ''match'' => ''{id|num}'',\r\n          ''controller'' => ''vk'',\r\n          ''action'' => ''profile'',\r\n          ''keys'' => \r\n          array (\r\n            0 => ''id'',\r\n          ),\r\n          ''regexp'' => ''/^(\\\\d+)$/ui'',\r\n          ''children'' => \r\n          array (\r\n            0 => \r\n            array (\r\n              ''match'' => ''logout'',\r\n              ''controller'' => ''vk'',\r\n              ''action'' => ''logout'',\r\n            ),\r\n            1 => \r\n            array (\r\n              ''match'' => ''login'',\r\n              ''controller'' => ''vk'',\r\n              ''action'' => ''login'',\r\n            ),\r\n            2 => \r\n            array (\r\n              ''match'' => ''playlist'',\r\n              ''controller'' => ''vk'',\r\n              ''action'' => ''userPlaylist'',\r\n              ''children'' => \r\n              array (\r\n                0 => \r\n                array (\r\n                  ''match'' => ''add'',\r\n                  ''controller'' => ''vk'',\r\n                  ''action'' => ''userAddPlaylist'',\r\n                ),\r\n                1 => \r\n                array (\r\n                  ''match'' => ''{id|num}'',\r\n                  ''controller'' => ''vk'',\r\n                  ''action'' => ''userGetPlaylist'',\r\n                  ''keys'' => \r\n                  array (\r\n                    0 => ''id'',\r\n                  ),\r\n                  ''regexp'' => ''/^(\\\\d+)$/ui'',\r\n                  ''children'' => \r\n                  array (\r\n                    0 => \r\n                    array (\r\n                      ''match'' => ''remove'',\r\n                      ''controller'' => ''vk'',\r\n                      ''action'' => ''userRemovePlaylist'',\r\n                    ),\r\n                  ),\r\n                ),\r\n              ),\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    ),\r\n  ),\r\n  ''system'' => \r\n  array (\r\n    0 => \r\n    array (\r\n      ''match'' => ''index'',\r\n      ''controller'' => ''index'',\r\n      ''action'' => ''index'',\r\n    ),\r\n    1 => \r\n    array (\r\n      ''match'' => ''404'',\r\n      ''controller'' => ''index'',\r\n      ''action'' => ''page_404'',\r\n    ),\r\n  ),\r\n);', 0, '', '2013-03-30 21:06:30'),
(47, 'TreeRouter xml config', 'html', '<?xml version="1.0" ?>\r\n<root>\r\n\r\n	<routes>\r\n		\r\n		<route match="audio" controller="vk" action="getTrack">\r\n			<route match="{id|num}" controller="vk" action="getTrack" />\r\n		</route>\r\n		\r\n		<route match="user" controller="index" action="page_404">\r\n			<route match="{id|num}" controller="vk" action="profile">\r\n			\r\n				<route match="logout" controller="vk" action="logout" />\r\n				<route match="login" controller="vk" action="login" />\r\n				<route match="playlist" controller="vk" action="userPlaylist">\r\n				\r\n					<route match="add" controller="vk" action="userAddPlaylist" />\r\n					<route match="{id|num}" controller="vk" action="userGetPlaylist">\r\n						<route match="remove" controller="vk" action="userRemovePlaylist" />\r\n					</route>\r\n					\r\n				</route>\r\n				\r\n			</route>\r\n		</route>\r\n		\r\n	</routes>\r\n	\r\n	<system>\r\n		<route match="index" controller="index" action="index" />\r\n		<route match="404" controller="index" action="page_404" />\r\n	</system>\r\n	\r\n</root>', 0, '', '2013-03-30 21:08:03'),
(48, 'Крутой алерт', 'js', 'window.oldAlert = window.alert;\r\nwindow.alert = function( message ){\r\n	message = "=== Крутой алерт ===\\n" + message;\r\n	message = message + "\\n============";\r\n	oldAlert( message );\r\n};', 0, '', '2013-03-30 22:07:45'),
(49, 'history.pushState', 'js', '	$(''a'').click(function(){\r\n		if ( this.href != location.href ) {\r\n			if (  typeof window.history.pushState != ''undefined'' ) {\r\n				history.pushState( null, ''title'', this.href );\r\n			}\r\n		}\r\n		return false;\r\n	});', 0, '', '2013-04-01 16:58:51'),
(50, 'xArray', 'php', '<?php\r\n	\r\n	namespace Sy\\Base;\r\n\r\n	interface xArrayInterface extends \\Traversable{\r\n		\r\n	}\r\n	\r\n	class xArray implements \\Countable, \\ArrayAccess, \\Iterator, xArrayInterface {\r\n\r\n		protected\r\n			$_position 		= 0,\r\n			$_container 	= array();\r\n\r\n		public function __get( $name ){\r\n			return $this->offsetGet( $name );\r\n		}\r\n\r\n		public function __set( $name, $value ){\r\n			$this->offsetSet( $name, $value );\r\n		}\r\n\r\n		public function __construct(){\r\n			$argv	= func_get_args();\r\n			if( ! empty( $argv ) ){\r\n				foreach( $argv as $array ){\r\n					$this->attachArray( $array );\r\n				}\r\n			}\r\n		}\r\n		\r\n		public function attachArray( array $array = array() ){\r\n			if( empty( $array ) ){\r\n				return;\r\n			}\r\n			\r\n			foreach( $array as $key => $value ){\r\n				$this->offsetSet( $key, $value );\r\n			}\r\n		}\r\n		\r\n		// Countable\r\n		\r\n		public function count(){\r\n			return sizeOf( $this->_container );\r\n		}\r\n		\r\n		// Iterator methods\r\n\r\n		public function rewind(){\r\n			$this->_position = 0;\r\n			reset( $this->_container );\r\n		}\r\n\r\n		public function current(){\r\n			return current( $this->_container );\r\n		}\r\n\r\n		public function key(){\r\n			return key( $this->_container );\r\n		}\r\n\r\n		public function next(){\r\n			++$this->_position;\r\n			next( $this->_container );\r\n		}\r\n\r\n		public function prev(){\r\n			--$this->_position;\r\n			prev( $this->_container );\r\n		}\r\n\r\n		public function valid(){			\r\n			return ( $this->key() !== null );\r\n		}\r\n\r\n		// ArrayAccess methods\r\n\r\n		public function offsetExists( $offset ){\r\n			return isset( $this->_container[$offset] );\r\n		}\r\n\r\n		public function offsetGet( $offset ){\r\n			return \r\n				$this->offsetExists( $offset )\r\n				? $this->_container[$offset]\r\n				: new xArray( array() );\r\n		}\r\n\r\n		public function offsetSet( $offset, $value ){\r\n			$this->_container[$offset] = $value;\r\n		}\r\n\r\n		public function offsetUnset( $offset ){\r\n			unset( $this->_container[$offset] );\r\n		}\r\n\r\n		// User methods\r\n\r\n	}', 0, '', '2013-04-01 20:12:50'),
(51, 'Хуй', 'js', '$(this).parent().find(''li'').each(function() {\r\n                if($(this).find(''img'').index() == -1) {\r\n					$(this).find(''.qq-uploader'').hide();\r\n					\r\n					_html = ''<input id="iamge_'' + responseJSON.image_id + ''" type="hidden" name="images[]" value="'' + responseJSON.image_id + ''" />'' +\r\n							''<img src="'' + responseJSON.uploadName + ''" alt="'' + responseJSON.id_image + ''">'' +\r\n							''<div class="options">'' +\r\n								''<a class="add-description" title="Добавить описание" href="'' + responseJSON.image_id + ''"><i class="a-icon-pencil a-icon-white"></i></a>'' +\r\n								''<a class="delete-image" title="Удалить" href="'' + responseJSON.image_id + ''"><i class="a-icon-trash a-icon-white"></i></a>'' +\r\n							''</div>'';\r\n							\r\n					$(this).addClass(''image-added'').append(_html);\r\n					\r\n					return false;\r\n				}\r\n            });', 0, '', '2013-04-27 13:37:00'),
(52, 'model', 'php', 'class ModelArticles {\r\n	public function getCategoriesList() {\r\n		$categs = "SELECT categ_id, name FROM `categories_articles` ORDER BY sort_id";\r\n		\r\n		return  DB::getAssocArray($categs);\r\n	}\r\n	\r\n	public function getTagsList() {\r\n		$tags = "SELECT tag_id, name FROM `tags` ORDER BY sort_id";\r\n		\r\n		return  DB::getAssocArray($tags);\r\n	}\r\n	\r\n	public function getVips() {\r\n		$date = DB::now();\r\n		\r\n		$vips = "SELECT articles.article_id, name, url_full\r\n			FROM `articles_vip` AS av \r\n			INNER JOIN `articles` USING(article_id)\r\n			INNER JOIN `articles_images` USING(image_id)\r\n			WHERE date_start <= ''$date'' AND date_end > ''$date'' - INTERVAL 1 DAY";\r\n\r\n		return DB::getAssocArray($vips);\r\n	}\r\n	\r\n	public function getArticlesList($categ_id = 0, $page = 0, $tag_id = 0) {\r\n		\r\n		if ($categ_id > 0) {\r\n			$meta 	= DB::getAssocArray("SELECT meta_title, meta_description, meta_keys FROM `categories_articles` WHERE categ_id = $categ_id", 1);\r\n			$where 	= "AND a.article_id IN(SELECT article_id FROM `articles_categs` WHERE categ_id = $categ_id)";\r\n		}\r\n		\r\n		if ($tag_id > 0) {\r\n			$meta 	= DB::getAssocArray("SELECT meta_title, meta_description, meta_keys FROM `tags` WHERE tags_id = $tag_id", 1);\r\n			$where 	= "AND a.article_id IN(SELECT article_id FROM `articles_tags` WHERE tag_id = $tag_id)";\r\n		}\r\n		\r\n		$articles = "SELECT a.article_id, name, content_min, date_public, views, url_full,\r\n			(SELECT GROUP_CONCAT(categ_id) FROM `articles_categs` WHERE article_id = a.article_id ) AS categs,\r\n			(SELECT GROUP_CONCAT(tag_id) FROM `articles_tags` WHERE article_id = a.article_id ) AS tags\r\n			FROM `articles` AS a\r\n			INNER JOIN `articles_images` USING(image_id)\r\n			WHERE flag = 1 AND flag_delete = 0 $where\r\n			ORDER BY a.sort_id ASC, date_public DESC\r\n			LIMIT 20";\r\n		$articles = DB::DBObject()->prepare($articles);\r\n		$articles->execute();\r\n		\r\n		while ($article = $articles->fetch(PDO::FETCH_ASSOC)) {\r\n			$articles_list[] = array_merge($article, array(\r\n				''categs''	=> DB::getAssocKey("SELECT categ_id, name FROM `categories_articles` WHERE categ_id IN({$article[''categs'']})"),\r\n				''tags''		=> DB::getAssocKey("SELECT tag_id, name FROM `tags` WHERE tag_id IN({$article[''tags'']})")\r\n			));\r\n		}\r\n		\r\n		return array(\r\n			''meta''	=> $meta,\r\n			''list''	=> $articles_list\r\n		);\r\n	}\r\n}', 0, '', '2013-04-30 17:17:09'),
(53, 'view', 'php', 'class Articles {\r\n	public function full($article_id) {\r\n		echo Registry::get(''twig'')->render(''article-full.tpl'');\r\n	}\r\n	\r\n	public function index($categ_id = 0, $page = 0, $tag_id = 0) {\r\n		\r\n		$categs = ModelArticles::getCategoriesList();\r\n		\r\n		$tags = ModelArticles::getTagsList();\r\n		\r\n		$vips = ModelArticles::getVips();\r\n		\r\n		$articles = ModelArticles::getArticlesList($categ_id, $page, $tag_id);\r\n		\r\n		echo Registry::get(''twig'')->render(''articles.tpl'', array(\r\n			''categories''	=> $categs,\r\n			''tags''			=> $tags,\r\n			''articles''		=> $articles[''list''],\r\n			''vips''			=> $vips,\r\n			''meta''			=> $articles[''meta'']\r\n		));\r\n	}\r\n	\r\n	public function add() {\r\n		echo ''Method `add`'';\r\n	}\r\n}\r\n', 0, '', '2013-04-30 17:17:41');
INSERT INTO `codes` (`id`, `title`, `language`, `source`, `author_id`, `password`, `added_at`) VALUES
(54, 'Main', 'js', 'var Main = {\r\n	options: {\r\n		addressValue: 	null,\r\n		addressNoLoad: 	false\r\n	},\r\n	init: function() {\r\n		$(''.datepicker'').datepicker();\r\n	\r\n		$(''.a-toggle-down'').aDropDownMenu();\r\n		\r\n		$(".select-2").select2({\r\n			closeOnSelect: false,\r\n			blurOnChange: true\r\n		});\r\n		\r\n		$(".validation").validationEngine({\r\n			promptPosition: "topLeft"\r\n		});\r\n		\r\n		$("input[type=radio], input[type=checkbox], input[type=file]").not(".uploadify").uniform();\r\n		\r\n		$(''[maxlength]'').inputlimiter({\r\n			limit: $(this).attr(''maxlength''),\r\n			remText: ''%n <i class="a-icon-pencil"></i>'',\r\n			limitText: ''''\r\n		});\r\n		\r\n		$(''.editor'').redactor({\r\n			lang: ''ru'',\r\n			buttons: [''bold'', ''italic'', ''deleted'', ''|'', \r\n				''alignleft'', ''aligncenter'', ''alignright'', ''|'', \r\n				''unorderedlist'', ''orderedlist'', ''|'',\r\n				''link'', ''image'', ''video'']\r\n		});\r\n		\r\n		$(".ad-gallery").adGallery({\r\n			width: 700,\r\n			height: 560,\r\n			effect: ''fade''\r\n		});\r\n	},\r\n	site: function() {\r\n		\r\n		/* products new JS */\r\n		$(".select-as-link").on(''change'', function(){\r\n			_val = $(this).val();\r\n			\r\n			if(_val != 0) window.location = _val;\r\n		});\r\n	\r\n			// add new product JS\r\n	\r\n			$("#categ_id").live(''change'', function(){\r\n				_val = $(this).val();\r\n				\r\n				if(_val > 0) {\r\n					$.ajax({\r\n						type: "GET",\r\n						url: ''/index.ajax.php'',\r\n						data: {\r\n							''route'': ''product/get_sub_categs-'' + _val\r\n						},\r\n						dataType:"json",\r\n						cache: false,\r\n						success: function(data) {\r\n							_html = '''';\r\n							$.each(data, function(index, value) {\r\n								_html += ''<option value="'' + index + ''">'' + value + ''</option>'';\r\n							});\r\n							\r\n							$("#sub_categ_id").html(_html).select2(''val'', ''All'');;\r\n						}\r\n					});\r\n				}\r\n			});\r\n			\r\n			$("#producer_id").live(''change'', function(){\r\n				_val = $(this).val();\r\n				\r\n				if(_val > 0) {\r\n					$.ajax({\r\n						type: "GET",\r\n						url: ''/index.ajax.php'',\r\n						data: {\r\n							''route'': ''product/get_products-'' + _val\r\n						},\r\n						dataType:"json",\r\n						cache: false,\r\n						success: function(data) {\r\n							_html = '''';\r\n							$.each(data, function(index, value) {\r\n								_html += ''<option value="'' + index + ''">'' + value + ''</option>'';\r\n							});\r\n							\r\n							$("#product_id").html(_html).select2(''val'', ''All'');;\r\n						}\r\n					});\r\n				}\r\n			});\r\n		/* end products new */\r\n	},\r\n	address: function() {\r\n		$.address.crawlable(0).init(function(event) {\r\n			$(''a.ajax-link'').address();\r\n			Main.options.addressValue = window.location.pathname;\r\n				\r\n		}).unbind(''change'').change(function(event) {\r\n			\r\n			if(!Main.options.addressNoLoad) {\r\n				//$.address.state(''/admin'');\r\n			\r\n				if(event.path != ''/'') {\r\n					$.ajax({\r\n						type: "GET",\r\n						url: ''/index.ajax.php'',\r\n						data: {\r\n							''route'': event.path\r\n						},\r\n						dataType:"html",\r\n						cache: false,\r\n						success: function(data) {\r\n							$(''body'').prepend(data).css(''overflow'', ''hidden'');\r\n							Main.init();\r\n							Main.site();\r\n						}\r\n					});\r\n				}\r\n			}\r\n		});\r\n		\r\n		$(''.a-modal-closer, .a-modal-close'').unbind(''click'').live(''click'', function(){\r\n			$(''.a-modal-bg'').fadeOut(200, function(){\r\n				$(''.a-modal-bg'').remove();\r\n			});\r\n			\r\n			$(''.a-modal-parent'').fadeOut(100, function(){\r\n				$(''.a-modal-parent'').remove();\r\n				$(''body'').css(''overflow'', ''auto'');\r\n			});\r\n			\r\n			Main.options.addressNoLoad = true;\r\n			\r\n			if ( window.history && window.history.pushState ) { \r\n				window.history.pushState('''', '''', window.location.pathname) \r\n			} else { \r\n				window.location.href = window.location.href.replace(/#.*$/, ''#''); \r\n			}\r\n			\r\n			$.address.value('''');\r\n			\r\n			Main.options.addressNoLoad = false;\r\n			\r\n			return false;\r\n		});\r\n	}\r\n}\r\n\r\n$(Main.address());\r\n\r\n$(document).ready(function(){\r\n	Main.init();\r\n	Main.site();\r\n});', 0, '', '2013-05-14 11:22:54'),
(55, 'router', 'php', '<?php\r\n/**\r\n * @package		Joomla.Site\r\n * @subpackage	Application\r\n * @copyright	Copyright (C) 2005 - 2012 Open Source Matters, Inc. All rights reserved.\r\n * @license		GNU General Public License version 2 or later; see LICENSE.txt\r\n */\r\n\r\n// No direct access\r\ndefined(''JPATH_BASE'') or die;\r\n\r\n/**\r\n * Class to create and parse routes for the site application\r\n *\r\n * @package		Joomla.Site\r\n * @subpackage	Application\r\n * @since		1.5\r\n */\r\nclass JRouterSite extends JRouter\r\n{\r\n	/**\r\n	 * Parse the URI\r\n	 *\r\n	 * @param	object	The URI\r\n	 *\r\n	 * @return	array\r\n	 */\r\n	public function parse(&$uri)\r\n	{\r\n		$vars = array();\r\n\r\n		// Get the application\r\n		$app = JApplication::getInstance(''site'');\r\n\r\n		if ($app->getCfg(''force_ssl'') == 2 && strtolower($uri->getScheme()) != ''https'') {\r\n			//forward to https\r\n			$uri->setScheme(''https'');\r\n			$app->redirect((string)$uri);\r\n		}\r\n\r\n		// Get the path\r\n		$path = $uri->getPath();\r\n\r\n		// Remove the base URI path.\r\n		$path = substr_replace($path, '''', 0, strlen(JURI::base(true)));\r\n\r\n		// Check to see if a request to a specific entry point has been made.\r\n		if (preg_match("#.*?\\.php#u", $path, $matches)) {\r\n\r\n			// Get the current entry point path relative to the site path.\r\n			$scriptPath = realpath($_SERVER[''SCRIPT_FILENAME''] ? $_SERVER[''SCRIPT_FILENAME''] : str_replace(''\\\\\\\\'', ''\\\\'', $_SERVER[''PATH_TRANSLATED'']));\r\n			$relativeScriptPath = str_replace(''\\\\'', ''/'', str_replace(JPATH_SITE, '''', $scriptPath));\r\n\r\n			// If a php file has been found in the request path, check to see if it is a valid file.\r\n			// Also verify that it represents the same file from the server variable for entry script.\r\n			if (file_exists(JPATH_SITE.$matches[0]) && ($matches[0] == $relativeScriptPath)) {\r\n\r\n				// Remove the entry point segments from the request path for proper routing.\r\n				$path = str_replace($matches[0], '''', $path);\r\n			}\r\n		}\r\n\r\n		//Remove the suffix\r\n		if ($this->_mode == JROUTER_MODE_SEF) {\r\n			if ($app->getCfg(''sef_suffix'') && !(substr($path, -9) == ''index.php'' || substr($path, -1) == ''/'')) {\r\n				if ($suffix = pathinfo($path, PATHINFO_EXTENSION)) {\r\n					$path = str_replace(''.''.$suffix, '''', $path);\r\n					$vars[''format''] = $suffix;\r\n				}\r\n			}\r\n		}\r\n\r\n		//Set the route\r\n		$uri->setPath(trim($path , ''/''));\r\n\r\n		$vars += parent::parse($uri);\r\n\r\n		return $vars;\r\n	}\r\n\r\n	public function build($url)\r\n	{\r\n		$uri = parent::build($url);\r\n\r\n		// Get the path data\r\n		$route = $uri->getPath();\r\n\r\n		//Add the suffix to the uri\r\n		if ($this->_mode == JROUTER_MODE_SEF && $route) {\r\n			$app = JApplication::getInstance(''site'');\r\n\r\n			if ($app->getCfg(''sef_suffix'') && !(substr($route, -9) == ''index.php'' || substr($route, -1) == ''/'')) {\r\n				if ($format = $uri->getVar(''format'', ''html'')) {\r\n					$route .= ''.''.$format;\r\n					$uri->delVar(''format'');\r\n				}\r\n			}\r\n\r\n			if ($app->getCfg(''sef_rewrite'')) {\r\n				//Transform the route\r\n				if ($route == ''index.php'')\r\n				{\r\n					$route = '''';\r\n				}\r\n				else\r\n				{\r\n					$route = str_replace(''index.php/'', '''', $route);\r\n				}\r\n			}\r\n		}\r\n\r\n		//Add basepath to the uri\r\n		$uri->setPath(JURI::base(true).''/''.$route);\r\n\r\n		return $uri;\r\n	}\r\n\r\n	protected function _parseRawRoute(&$uri)\r\n	{\r\n		$vars	= array();\r\n		$app	= JApplication::getInstance(''site'');\r\n		$menu	= $app->getMenu(true);\r\n\r\n		//Handle an empty URL (special case)\r\n		if (!$uri->getVar(''Itemid'') && !$uri->getVar(''option'')) {\r\n			$item = $menu->getDefault(JFactory::getLanguage()->getTag());\r\n			if (!is_object($item)) {\r\n				// No default item set\r\n				return $vars;\r\n			}\r\n\r\n			//Set the information in the request\r\n			$vars = $item->query;\r\n\r\n			//Get the itemid\r\n			$vars[''Itemid''] = $item->id;\r\n\r\n			// Set the active menu item\r\n			$menu->setActive($vars[''Itemid'']);\r\n\r\n			return $vars;\r\n		}\r\n\r\n		//Get the variables from the uri\r\n		$this->setVars($uri->getQuery(true));\r\n\r\n		//Get the itemid, if it hasn''t been set force it to null\r\n		$this->setVar(''Itemid'', JRequest::getInt(''Itemid'', null));\r\n\r\n		// Only an Itemid  OR if filter language plugin set? Get the full information from the itemid\r\n		if (count($this->getVars()) == 1 || ( $app->getLanguageFilter() && count( $this->getVars()) == 2 )) {\r\n\r\n			$item = $menu->getItem($this->getVar(''Itemid''));\r\n			if ($item !== NULL && is_array($item->query)) {\r\n				$vars = $vars + $item->query;\r\n			}\r\n		}\r\n\r\n		// Set the active menu item\r\n		$menu->setActive($this->getVar(''Itemid''));\r\n\r\n		return $vars;\r\n	}\r\n\r\n	protected function _parseSefRoute(&$uri)\r\n	{\r\n		$vars	= array();\r\n		$app	= JApplication::getInstance(''site'');\r\n		$menu	= $app->getMenu(true);\r\n		$route	= $uri->getPath();\r\n\r\n		// Get the variables from the uri\r\n		$vars = $uri->getQuery(true);\r\n\r\n		// Handle an empty URL (special case)\r\n		if (empty($route)) {\r\n			// If route is empty AND option is set in the query, assume it''s non-sef url, and parse apropriately\r\n			if (isset($vars[''option'']) || isset($vars[''Itemid''])) {\r\n				return $this->_parseRawRoute($uri);\r\n			}\r\n\r\n			$item = $menu->getDefault(JFactory::getLanguage()->getTag());\r\n			// if user not allowed to see default menu item then avoid notices\r\n			if(is_object($item)) {\r\n				//Set the information in the request\r\n				$vars = $item->query;\r\n\r\n				//Get the itemid\r\n				$vars[''Itemid''] = $item->id;\r\n\r\n				// Set the active menu item\r\n				$menu->setActive($vars[''Itemid'']);\r\n			}\r\n			return $vars;\r\n		}\r\n\r\n		/*\r\n		 * Parse the application route\r\n		 */\r\n		$segments	= explode(''/'', $route);\r\n		if (count($segments) > 1 && $segments[0] == ''component'')\r\n		{\r\n			$vars[''option''] = ''com_''.$segments[1];\r\n			$vars[''Itemid''] = null;\r\n			$route = implode(''/'', array_slice($segments, 2));\r\n		}\r\n		else\r\n		{\r\n			//Need to reverse the array (highest sublevels first)\r\n			$items = array_reverse($menu->getMenu());\r\n\r\n			$found 				= false;\r\n			$route_lowercase 	= JString::strtolower($route);\r\n			$lang_tag 			= JFactory::getLanguage()->getTag();\r\n\r\n			foreach ($items as $item) {\r\n				//sqlsrv  change\r\n				if(isset($item->language)){\r\n					$item->language = trim($item->language);\r\n				}\r\n				$length = strlen($item->route); //get the length of the route\r\n				if ($length > 0 && JString::strpos($route_lowercase.''/'', $item->route.''/'') === 0 && $item->type != ''menulink'' && (!$app->getLanguageFilter() || $item->language == ''*'' || $item->language == $lang_tag)) {\r\n					// We have exact item for this language\r\n					if ($item->language == $lang_tag) {\r\n						$found = $item;\r\n						break;\r\n					}\r\n					// Or let''s remember an item for all languages\r\n					elseif (!$found) {\r\n						$found = $item;\r\n					}\r\n				}\r\n			}\r\n\r\n			if (!$found) {\r\n				$found = $menu->getDefault($lang_tag);\r\n			}\r\n			else {\r\n				$route = substr($route, strlen($found->route));\r\n				if ($route) {\r\n					$route = substr($route, 1);\r\n				}\r\n			}\r\n\r\n			$vars[''Itemid''] = $found->id;\r\n			$vars[''option''] = $found->component;\r\n		}\r\n\r\n		// Set the active menu item\r\n		if (isset($vars[''Itemid''])) {\r\n			$menu->setActive( $vars[''Itemid'']);\r\n		}\r\n\r\n		// Set the variables\r\n		$this->setVars($vars);\r\n\r\n		/*\r\n		 * Parse the component route\r\n		 */\r\n		if (!empty($route) && isset($this->_vars[''option''])) {\r\n			$segments = explode(''/'', $route);\r\n			if (empty($segments[0])) {\r\n				array_shift($segments);\r\n			}\r\n\r\n			// Handle component	route\r\n			$component = preg_replace(''/[^A-Z0-9_\\.-]/i'', '''', $this->_vars[''option'']);\r\n\r\n			// Use the component routing handler if it exists\r\n			$path = JPATH_SITE . ''/components/'' . $component . ''/router.php'';\r\n\r\n			if (file_exists($path) && count($segments)) {\r\n				if ($component != "com_search") { // Cheap fix on searches\r\n					//decode the route segments\r\n					$segments = $this->_decodeSegments($segments);\r\n				} else {\r\n					// fix up search for URL\r\n					$total = count($segments);\r\n					for ($i=0; $i<$total; $i++) {\r\n						// urldecode twice because it is encoded twice\r\n						$segments[$i] = urldecode(urldecode(stripcslashes($segments[$i])));\r\n					}\r\n				}\r\n\r\n				require_once $path;\r\n				$function = substr($component, 4).''ParseRoute'';\r\n				$function = str_replace(array("-", "."), "", $function);\r\n				$vars =  $function($segments);\r\n\r\n				$this->setVars($vars);\r\n			}\r\n		} else {\r\n			//Set active menu item\r\n\r\n			if ($item = $menu->getActive()) {\r\n				$vars = $item->query;\r\n			}\r\n		}\r\n\r\n		return $vars;\r\n	}\r\n\r\n	protected function _buildRawRoute(&$uri)\r\n	{\r\n	}\r\n\r\n	protected function _buildSefRoute(&$uri)\r\n	{\r\n		// Get the route\r\n		$route = $uri->getPath();\r\n\r\n		// Get the query data\r\n		$query = $uri->getQuery(true);\r\n\r\n		if (!isset($query[''option''])) {\r\n			return;\r\n		}\r\n\r\n		$app	= JApplication::getInstance(''site'');\r\n		$menu	= $app->getMenu();\r\n\r\n		/*\r\n		 * Build the component route\r\n		 */\r\n		$component	= preg_replace(''/[^A-Z0-9_\\.-]/i'', '''', $query[''option'']);\r\n		$tmp		= '''';\r\n\r\n		// Use the component routing handler if it exists\r\n		$path = JPATH_SITE . ''/components/'' . $component . ''/router.php'';\r\n\r\n		// Use the custom routing handler if it exists\r\n		if (file_exists($path) && !empty($query)) {\r\n			require_once $path;\r\n			$function	= substr($component, 4).''BuildRoute'';\r\n			$function   = str_replace(array("-", "."), "", $function);\r\n			$parts		= $function($query);\r\n\r\n			// encode the route segments\r\n			if ($component != ''com_search'') {\r\n				// Cheep fix on searches\r\n				$parts = $this->_encodeSegments($parts);\r\n			} else {\r\n				// fix up search for URL\r\n				$total = count($parts);\r\n				for ($i = 0; $i < $total; $i++)\r\n				{\r\n					// urlencode twice because it is decoded once after redirect\r\n					$parts[$i] = urlencode(urlencode(stripcslashes($parts[$i])));\r\n				}\r\n			}\r\n\r\n			$result = implode(''/'', $parts);\r\n			$tmp	= ($result != "") ? $result : '''';\r\n		}\r\n\r\n		/*\r\n		 * Build the application route\r\n		 */\r\n		$built = false;\r\n		if (isset($query[''Itemid'']) && !empty($query[''Itemid''])) {\r\n			$item = $menu->getItem($query[''Itemid'']);\r\n			if (is_object($item) && $query[''option''] == $item->component) {\r\n				if (!$item->home || $item->language!=''*'') {\r\n					$tmp = !empty($tmp) ? $item->route.''/''.$tmp : $item->route;\r\n				}\r\n				$built = true;\r\n			}\r\n		}\r\n\r\n		if (!$built) {\r\n			$tmp = ''component/''.substr($query[''option''], 4).''/''.$tmp;\r\n		}\r\n\r\n		if ($tmp) {\r\n			$route .= ''/''.$tmp;\r\n		}\r\n		elseif ($route==''index.php'') {\r\n			$route = '''';\r\n		}\r\n\r\n		// Unset unneeded query information\r\n		if (isset($item) && $query[''option''] == $item->component) {\r\n			unset($query[''Itemid'']);\r\n		}\r\n		unset($query[''option'']);\r\n\r\n		//Set query again in the URI\r\n		$uri->setQuery($query);\r\n		$uri->setPath($route);\r\n	}\r\n\r\n	protected function _processParseRules(&$uri)\r\n	{\r\n		// Process the attached parse rules\r\n		$vars = parent::_processParseRules($uri);\r\n\r\n		// Process the pagination support\r\n		if ($this->_mode == JROUTER_MODE_SEF) {\r\n			$app = JApplication::getInstance(''site'');\r\n\r\n			if ($start = $uri->getVar(''start'')) {\r\n				$uri->delVar(''start'');\r\n				$vars[''limitstart''] = $start;\r\n			}\r\n		}\r\n\r\n		return $vars;\r\n	}\r\n\r\n	protected function _processBuildRules(&$uri)\r\n	{\r\n		// Make sure any menu vars are used if no others are specified\r\n		if (($this->_mode != JROUTER_MODE_SEF) && $uri->getVar(''Itemid'') && count($uri->getQuery(true)) == 2) {\r\n\r\n			$app	= JApplication::getInstance(''site'');\r\n			$menu	= $app->getMenu();\r\n\r\n			// Get the active menu item\r\n			$itemid = $uri->getVar(''Itemid'');\r\n			$item = $menu->getItem($itemid);\r\n\r\n			if ($item) {\r\n				$uri->setQuery($item->query);\r\n			}\r\n			$uri->setVar(''Itemid'', $itemid);\r\n		}\r\n\r\n		// Process the attached build rules\r\n		parent::_processBuildRules($uri);\r\n\r\n		// Get the path data\r\n		$route = $uri->getPath();\r\n\r\n		if ($this->_mode == JROUTER_MODE_SEF && $route) {\r\n			$app = JApplication::getInstance(''site'');\r\n\r\n			if ($limitstart = $uri->getVar(''limitstart'')) {\r\n				$uri->setVar(''start'', (int) $limitstart);\r\n				$uri->delVar(''limitstart'');\r\n			}\r\n		}\r\n\r\n		$uri->setPath($route);\r\n	}\r\n\r\n	protected function _createURI($url)\r\n	{\r\n		//Create the URI\r\n		$uri = parent::_createURI($url);\r\n\r\n		// Set URI defaults\r\n		$app	= JApplication::getInstance(''site'');\r\n		$menu	= $app->getMenu();\r\n\r\n		// Get the itemid form the URI\r\n		$itemid = $uri->getVar(''Itemid'');\r\n\r\n		if (is_null($itemid)) {\r\n			if ($option = $uri->getVar(''option'')) {\r\n				$item  = $menu->getItem($this->getVar(''Itemid''));\r\n				if (isset($item) && $item->component == $option) {\r\n					$uri->setVar(''Itemid'', $item->id);\r\n				}\r\n			} else {\r\n				if ($option = $this->getVar(''option'')) {\r\n					$uri->setVar(''option'', $option);\r\n				}\r\n\r\n				if ($itemid = $this->getVar(''Itemid'')) {\r\n					$uri->setVar(''Itemid'', $itemid);\r\n				}\r\n			}\r\n		} else {\r\n			if (!$uri->getVar(''option'')) {\r\n				if ($item = $menu->getItem($itemid)) {\r\n					$uri->setVar(''option'', $item->component);\r\n				}\r\n			}\r\n		}\r\n\r\n		return $uri;\r\n	}\r\n}\r\n', 0, '', '2013-05-14 18:34:36'),
(56, 'No title', 'php', 'SELECT a.article_id, name, content_min, date_public, url_full,\r\n			(SELECT GROUP_CONCAT(categ_id) FROM `articles_categs` WHERE article_id = a.article_id ) AS categs,\r\n			(SELECT GROUP_CONCAT(tag_id) FROM `articles_tags` WHERE article_id = a.article_id ) AS tags,\r\n			(SELECT COUNT(*) FROM `articles_comments` WHERE article_id = a.article_id AND flag = 1) AS comments,\r\n			(SELECT COUNT(*) FROM `articles_views` WHERE article_id = a.article_id) AS views\r\n			FROM `articles` AS a\r\n			INNER JOIN `articles_images` USING(image_id)\r\n			WHERE flag = 1 AND flag_delete = 0 $where\r\n			ORDER BY a.sort_id ASC, date_public DESC\r\n			LIMIT 20', 0, '', '2013-05-18 15:42:50'),
(57, 'Govno model', 'php', '<?php\r\n\r\nclass ModelArticles {\r\n	public function getCategoriesList() {\r\n		$categs = "SELECT categ_id, name FROM `categories_articles` ORDER BY sort_id";\r\n		\r\n		return  DB::getAssocArray($categs);\r\n	}\r\n	\r\n	public function getTagsList() {\r\n		$tags = "SELECT tag_id, name FROM `tags` ORDER BY sort_id";\r\n		\r\n		return  DB::getAssocArray($tags);\r\n	}\r\n	\r\n	public function getVips() {\r\n		$date = DB::now();\r\n		\r\n		$vips = "SELECT articles.article_id, name, url_full\r\n			FROM `articles_vip` AS av \r\n			INNER JOIN `articles` USING(article_id)\r\n			INNER JOIN `articles_images` USING(image_id)\r\n			WHERE date_start <= ''$date'' AND date_end > ''$date'' - INTERVAL 1 DAY";\r\n\r\n		return DB::getAssocArray($vips);\r\n	}\r\n	\r\n	public function getArticlesList($categ_id = 0, $page = 0, $tag_id = 0) {\r\n		\r\n		if ($categ_id > 0) {\r\n			$meta 	= DB::getAssocArray("SELECT meta_title, meta_description, meta_keys FROM `categories_articles` WHERE categ_id = $categ_id", 1);\r\n			$where 	= "AND a.article_id IN(SELECT article_id FROM `articles_categs` WHERE categ_id = $categ_id)";\r\n		}\r\n		\r\n		if ($tag_id > 0) {\r\n			$meta 	= DB::getAssocArray("SELECT meta_title, meta_description, meta_keys FROM `tags` WHERE tags_id = $tag_id", 1);\r\n			$where 	= "AND a.article_id IN(SELECT article_id FROM `articles_tags` WHERE tag_id = $tag_id)";\r\n		}\r\n		\r\n		$articles = "SELECT a.article_id, name, content_min, date_public, url_full,\r\n			(SELECT GROUP_CONCAT(categ_id) FROM `articles_categs` WHERE article_id = a.article_id ) AS categs,\r\n			(SELECT GROUP_CONCAT(tag_id) FROM `articles_tags` WHERE article_id = a.article_id ) AS tags,\r\n			(SELECT COUNT(*) FROM `articles_comments` WHERE article_id = a.article_id AND flag = 1) AS comments,\r\n			(SELECT COUNT(*) FROM `articles_views` WHERE article_id = a.article_id) AS views\r\n			FROM `articles` AS a\r\n			INNER JOIN `articles_images` USING(image_id)\r\n			WHERE flag = 1 AND flag_delete = 0 $where\r\n			ORDER BY a.sort_id ASC, date_public DESC\r\n			LIMIT 20";\r\n		$articles = DB::DBObject()->prepare($articles);\r\n		$articles->execute();\r\n		\r\n		while ($article = $articles->fetch(PDO::FETCH_ASSOC)) {\r\n			$articles_list[] = array_merge($article, array(\r\n				''categs''	=> DB::getAssocKey("SELECT categ_id, name FROM `categories_articles` WHERE categ_id IN({$article[''categs'']})"),\r\n				''tags''		=> DB::getAssocKey("SELECT tag_id, name FROM `tags` WHERE tag_id IN({$article[''tags'']})")\r\n			));\r\n		}\r\n		\r\n		return array(\r\n			''meta''	=> $meta,\r\n			''list''	=> $articles_list\r\n		);\r\n	}\r\n	\r\n	public function getArticleFull($article_id) {\r\n		$article = "SELECT a.article_id, name, content, date_public, url_full, author, source_name, source_link, video_link,\r\n			(SELECT GROUP_CONCAT(categ_id) FROM `articles_categs` WHERE article_id = a.article_id ) AS categs,\r\n			(SELECT GROUP_CONCAT(tag_id) FROM `articles_tags` WHERE article_id = a.article_id ) AS tags,\r\n			(SELECT COUNT(*) FROM `articles_views` WHERE article_id = a.article_id) AS views\r\n			FROM `articles` AS a\r\n			INNER JOIN `articles_images` USING(image_id)\r\n			WHERE a.article_id = $article_id AND flag = 1 AND flag_delete = 0";\r\n		\r\n		$article = DB::getAssocArray($article, 1);\r\n		\r\n		$article[''categs''] 	= DB::getAssocKey("SELECT categ_id, name FROM `categories_articles` WHERE categ_id IN({$article[''categs'']})");\r\n		$article[''tags'']	= DB::getAssocKey("SELECT tag_id, name FROM `tags` WHERE tag_id IN({$article[''tags'']})");\r\n		\r\n		return (array) $article;\r\n	}\r\n	\r\n	public function getArticleVote($article_id) {\r\n		$vote = "SELECT vote_id, name FROM `articles_votes` WHERE article_id = $article_id";\r\n		$vote = DB::getAssocArray($vote, 1);\r\n		\r\n		if (count($vote) > 0) {\r\n			$versions = "SELECT version_id, name FROM `votes_versions` WHERE vote_id = {$vote[''vote_id'']} ORDER BY sort_id ASC, version_id ASC";\r\n			$versions = DB::getAssocKey($versions);\r\n			\r\n			return array(\r\n				''vote''		=> $vote,\r\n				''versions''	=> $versions\r\n			);\r\n		}\r\n		else {\r\n			return false;\r\n		}\r\n	}\r\n	\r\n	public function getArticleComments($article_id) {\r\n		$comments = "SELECT articles_comments.comment, articles_comments.date_add, articles_comments.user_id,\r\n			users_info.name, users_info.avatar\r\n			FROM `articles_comments`\r\n			INNER JOIN `users_info` USING(user_id)\r\n			WHERE articles_comments.flag = 1 AND articles_comments.article_id = $article_id\r\n			ORDER BY articles_comments.date_add DESC";\r\n		\r\n		return  DB::getAssocArray($comments);\r\n	}\r\n	\r\n	public function addComment($article_id, $user_id, $comment) {\r\n\r\n		$write = array(\r\n			''article_id''	=> $article_id,\r\n			''user_id''		=> $user_id,\r\n			''comment''		=> $comment,\r\n			''date_add''		=> DB::now()\r\n		);\r\n		\r\n		DB::insert(''articles_comments'', $write);\r\n		\r\n		return DB::lastInsertId();\r\n	}\r\n	\r\n	public function getComment($comment_id) {\r\n		$comment = "SELECT articles_comments.comment, articles_comments.date_add, articles_comments.user_id,\r\n			users_info.name, users_info.avatar\r\n			FROM `articles_comments`\r\n			INNER JOIN `users_info` USING(user_id)\r\n			WHERE comment_id = $comment_id";\r\n		\r\n		return DB::getAssocArray($comment, 1);\r\n	}\r\n	\r\n	public function setViews($article_id, $user_id = 0) {\r\n		if (Request::getCookie(''article_view_'' . $article_id, ''int'') > 0) {\r\n			return true;\r\n		}\r\n		else {\r\n			$write = array(\r\n				''article_id''	=> $article_id,\r\n				''user_id''		=> $user_id,\r\n				''date_view''		=> DB::now()\r\n			);\r\n			\r\n			DB::insert(''articles_views'', $write);\r\n			\r\n			Request::setCookie(''article_view_'' . $article_id, 1);\r\n		}\r\n		\r\n		return true;\r\n	}\r\n}\r\n\r\n?>', 0, '', '2013-05-18 15:46:22'),
(58, 'No title', 'php', 'public function isUserAut($user_id = 0) {\r\n		$hash 	= Request::getCookie(''_aut_key'', ''string'');\r\n		$ip		= Str::get(Site::getRealIP())->ip2mysql();\r\n		\r\n		if ($hash != null) {\r\n			$user_id = "SELECT user_id FROM `users` WHERE user_id = $user_id AND hash = ''$hash'' AND aut_ip_address = $ip";\r\n			$user_id = DB::getColumn($user_id);\r\n			\r\n			if ($user_id > 0) {\r\n				return true;\r\n			}\r\n		}\r\n		\r\n		return false;\r\n	}', 0, '', '2013-05-21 11:33:48'),
(59, 'No title', 'php', 'public function isUser() {\r\n		if (is_array(Request::getSession(''_ADMIN''))) {\r\n			$user = Request::getSession(''_ADMIN'');\r\n			return $user[''info''][''user_id''];\r\n		}\r\n		elseif (is_array(Request::getSession(''_USER''))) {\r\n			$user = Request::getSession(''_USER'');\r\n			return $user[''info''][''user_id''];\r\n		}\r\n		\r\n		return false;\r\n	}\r\n	\r\n	public function isUserAuth($user_id = 0) {\r\n		$hash 	= Request::getCookie(''_aut_key'', ''string'');\r\n		$ip		= Str::get(Site::getRealIP())->ip2mysql();\r\n		\r\n		if ($hash != null and $user_id > 0) {\r\n			$user_id = "SELECT user_id FROM `users` WHERE user_id = $user_id AND hash = ''$hash'' AND aut_ip_address = $ip";\r\n			$user_id = DB::getColumn($user_id);\r\n			\r\n			if ($user_id > 0) {\r\n				return true;\r\n			}\r\n		}\r\n		elseif ($hash != null and $user_id == 0) {\r\n			$user_id = "SELECT user_id FROM `users` WHERE hash = ''$hash'' AND aut_ip_address = $ip  AND flag = 1 AND flag_moder = 1 AND group_id NOT IN(1, 3)";\r\n			$user_id = DB::getColumn($user_id);\r\n			\r\n			if ($user_id > 0) {\r\n				User::setUserInfoToSess($user_id);\r\n				\r\n				return true;\r\n			}\r\n		}\r\n		\r\n		return false;\r\n	}\r\n	\r\n	public function setUserInfoToSess($user_id) {\r\n		$user_info = "SELECT u.user_id, u.email, u.group_id, \r\n			ui.country_id, ui.name, ui.phone, ui.avatar, ui.flag_default_permission\r\n			FROM `users` AS u\r\n			INNER JOIN `users_info` AS ui USING(user_id)\r\n			WHERE u.user_id = $user_id";\r\n		\r\n		$user_info = DB::getAssocArray($user_info, 1);\r\n		\r\n		if ($user_info[''flag_default_permission''] == 1) {\r\n			$where = "group_id = " . $user_info[''group_id''];\r\n		}\r\n		else {\r\n			$where = "user_id = " . $user_info[''user_id''];\r\n		}\r\n		\r\n		$user_permission = "SELECT section_id, flag_view, flag_add, flag_limit, mod_type, \r\n			count, time_limit, time_life, flag_date_limit, date_start, date_end\r\n			FROM `users_permissions`\r\n			WHERE $where";\r\n		\r\n		$user_permission = DB::DBObject()\r\n			->query($user_permission)\r\n			->fetchAll(PDO::FETCH_ASSOC | PDO::FETCH_GROUP);\r\n		\r\n		Request::setSession(''_USER'', array(\r\n			''info''			=> $user_info,\r\n			''permissions''	=> $user_permission\r\n		));\r\n		\r\n		return true;\r\n	}', 0, '', '2013-05-21 12:01:36'),
(60, 'Govno code', 'php', '<?php\r\n\r\nclass ModelArticles {\r\n	public function getCategoriesList() {\r\n		$categs = "SELECT categ_id, name FROM `categories_articles` ORDER BY sort_id";\r\n		\r\n		return  DB::getAssocArray($categs);\r\n	}\r\n	\r\n	public function getTagsList() {\r\n		$tags = "SELECT tag_id, name FROM `tags` ORDER BY sort_id, name";\r\n		\r\n		return  DB::getAssocArray($tags);\r\n	}\r\n	\r\n	public function getVips() {\r\n		$date = DB::now();\r\n		\r\n		$vips = "SELECT articles.article_id, name, url_full\r\n			FROM `articles_vip` AS av \r\n			INNER JOIN `articles` USING(article_id)\r\n			INNER JOIN `articles_images` USING(image_id)\r\n			WHERE date_start <= ''$date'' AND date_end > ''$date'' - INTERVAL 1 DAY";\r\n\r\n		return DB::getAssocArray($vips);\r\n	}\r\n	\r\n	public function getArticlesList($categ_id = 0, $page = 0, $tag_id = 0) {\r\n		\r\n		if ($categ_id > 0) {\r\n			$meta 	= DB::getAssocArray("SELECT meta_title, meta_description, meta_keys FROM `categories_articles` WHERE categ_id = $categ_id", 1);\r\n			$where 	= "AND a.article_id IN(SELECT article_id FROM `articles_categs` WHERE categ_id = $categ_id)";\r\n		}\r\n		\r\n		if ($tag_id > 0) {\r\n			$meta 	= DB::getAssocArray("SELECT meta_title, meta_description, meta_keys FROM `tags` WHERE tags_id = $tag_id", 1);\r\n			$where 	= "AND a.article_id IN(SELECT article_id FROM `articles_tags` WHERE tag_id = $tag_id)";\r\n		}\r\n		\r\n		$articles = "SELECT a.article_id, name, content_min, date_public, url_full,\r\n			(SELECT GROUP_CONCAT(categ_id) FROM `articles_categs` WHERE article_id = a.article_id ) AS categs,\r\n			(SELECT GROUP_CONCAT(tag_id) FROM `articles_tags` WHERE article_id = a.article_id ) AS tags,\r\n			(SELECT COUNT(*) FROM `articles_comments` WHERE article_id = a.article_id AND flag = 1) AS comments,\r\n			(SELECT COUNT(*) FROM `articles_views` WHERE article_id = a.article_id) AS views\r\n			FROM `articles` AS a\r\n			INNER JOIN `articles_images` USING(image_id)\r\n			WHERE flag = 1 AND flag_delete = 0 $where\r\n			ORDER BY a.sort_id ASC, date_public DESC\r\n			LIMIT 20";\r\n		$articles = DB::DBObject()->prepare($articles);\r\n		$articles->execute();\r\n		\r\n		while ($article = $articles->fetch(PDO::FETCH_ASSOC)) {\r\n			$articles_list[] = array_merge($article, array(\r\n				''categs''	=> DB::getAssocKey("SELECT categ_id, name FROM `categories_articles` WHERE categ_id IN({$article[''categs'']})"),\r\n				''tags''		=> DB::getAssocKey("SELECT tag_id, name FROM `tags` WHERE tag_id IN({$article[''tags'']})")\r\n			));\r\n		}\r\n		\r\n		return array(\r\n			''meta''	=> $meta,\r\n			''list''	=> $articles_list\r\n		);\r\n	}\r\n	\r\n	public function getArticleFull($article_id) {\r\n		$article = "SELECT a.article_id, name, content, date_public, url_full, author, source_name, source_link, video_link,\r\n			(SELECT GROUP_CONCAT(categ_id) FROM `articles_categs` WHERE article_id = a.article_id ) AS categs,\r\n			(SELECT GROUP_CONCAT(tag_id) FROM `articles_tags` WHERE article_id = a.article_id ) AS tags,\r\n			(SELECT COUNT(*) FROM `articles_views` WHERE article_id = a.article_id) AS views\r\n			FROM `articles` AS a\r\n			INNER JOIN `articles_images` USING(image_id)\r\n			WHERE a.article_id = $article_id AND flag = 1 AND flag_delete = 0";\r\n		\r\n		$article = DB::getAssocArray($article, 1);\r\n		\r\n		$article[''categs''] 	= DB::getAssocKey("SELECT categ_id, name FROM `categories_articles` WHERE categ_id IN({$article[''categs'']})");\r\n		$article[''tags'']	= DB::getAssocKey("SELECT tag_id, name FROM `tags` WHERE tag_id IN({$article[''tags'']})");\r\n		\r\n		return (array) $article;\r\n	}\r\n	\r\n	public function getArticleVote($article_id, $user_id = 0) {\r\n		$vote = "SELECT vote_id, name FROM `articles_votes` WHERE article_id = $article_id";\r\n		$vote = DB::getAssocArray($vote, 1);\r\n		\r\n		if (count($vote) > 0) {\r\n			if ($user_id > 0) {\r\n				if (ModelArticles::isUserVote($article_id, $user_id)) {\r\n					return ModelArticles::getVoteResults($vote[''vote_id'']);\r\n				}\r\n				else {\r\n					$versions = "SELECT version_id, name FROM `votes_versions` WHERE vote_id = {$vote[''vote_id'']} ORDER BY sort_id ASC, version_id ASC";\r\n					$versions = DB::getAssocKey($versions);\r\n					\r\n					return array(\r\n						''vote''		=> $vote,\r\n						''versions''	=> $versions\r\n					);\r\n				}\r\n			}\r\n			else {\r\n				return ModelArticles::getVoteResults($vote[''vote_id'']);\r\n			}\r\n		}\r\n		else {\r\n			return false;\r\n		}\r\n	}\r\n	\r\n	public function getVoteResults($vote_id) {\r\n		$vote = "SELECT vote_id, name FROM `articles_votes` WHERE vote_id = $vote_id";\r\n		$vote = DB::getAssocArray($vote, 1);\r\n		\r\n		$versions = "SELECT version_id, name,\r\n			(SELECT COUNT(*) FROM `votes_results` WHERE version_id = votes_versions.version_id) AS count\r\n			FROM `votes_versions`\r\n			WHERE vote_id = $vote_id ORDER BY sort_id ASC, version_id ASC";\r\n		\r\n		$versions = DB::getAssocArray($versions);\r\n		\r\n		$sum = 0;\r\n		\r\n		for ($i = 0, $c = count($versions); $i < $c; $i++) {\r\n			$sum += $versions[$i][''count''];\r\n		}\r\n		\r\n		return array(\r\n			''vote''		=> $vote,\r\n			''versions''	=> $versions,\r\n			''sum''		=> $sum\r\n		);\r\n	}\r\n	\r\n	public function setVoteResult($vote_id, $version_id, $user_id = 0) {\r\n		$write = array(\r\n			''vote_id''		=> $vote_id,\r\n			''version_id''	=> $version_id,\r\n			''user_id''		=> $user_id\r\n		);\r\n		\r\n		DB::insert(''votes_results'', $write);\r\n		\r\n		return DB::lastInsertId();\r\n	}\r\n	\r\n	public function isUserVote($article_id, $user_id) {\r\n		$vote = "SELECT COUNT(*) FROM `votes_results` \r\n			WHERE vote_id = (SELECT vote_id FROM `articles_votes` WHERE article_id = $article_id) AND user_id = $user_id";\r\n		\r\n		return (bool) DB::getColumn($vote);\r\n	}\r\n	\r\n	public function getArticleComments($article_id) {\r\n		$comments = "SELECT articles_comments.comment, articles_comments.date_add, articles_comments.user_id,\r\n			users_info.name, users_info.avatar\r\n			FROM `articles_comments`\r\n			INNER JOIN `users_info` USING(user_id)\r\n			WHERE articles_comments.flag = 1 AND articles_comments.article_id = $article_id\r\n			ORDER BY articles_comments.date_add";\r\n		\r\n		return  DB::getAssocArray($comments);\r\n	}\r\n	\r\n	public function addComment($article_id, $user_id, $comment) {\r\n\r\n		$write = array(\r\n			''article_id''	=> $article_id,\r\n			''user_id''		=> $user_id,\r\n			''comment''		=> $comment,\r\n			''date_add''		=> DB::now()\r\n		);\r\n		\r\n		DB::insert(''articles_comments'', $write);\r\n		\r\n		return DB::lastInsertId();\r\n	}\r\n	\r\n	public function getComment($comment_id) {\r\n		$comment = "SELECT articles_comments.comment, articles_comments.date_add, articles_comments.user_id,\r\n			users_info.name, users_info.avatar\r\n			FROM `articles_comments`\r\n			INNER JOIN `users_info` USING(user_id)\r\n			WHERE comment_id = $comment_id";\r\n		\r\n		return DB::getAssocArray($comment, 1);\r\n	}\r\n	\r\n	public function setViews($article_id, $user_id = 0) {\r\n		if (Request::getCookie(''article_view_'' . $article_id, ''int'') > 0) {\r\n			return true;\r\n		}\r\n		else {\r\n			$write = array(\r\n				''article_id''	=> $article_id,\r\n				''user_id''		=> $user_id,\r\n				''date_view''		=> DB::now()\r\n			);\r\n			\r\n			DB::insert(''articles_views'', $write);\r\n			\r\n			Request::setCookie(''article_view_'' . $article_id, 1);\r\n		}\r\n		\r\n		return true;\r\n	}\r\n	\r\n	public function getCategoriesFromSelect() {\r\n		$categs = "SELECT categ_id, name FROM `categories_articles` ORDER BY sort_id, name";\r\n		\r\n		return DB::getAssocKey($categs);\r\n	}\r\n	\r\n	public function uploadImage($file_name) {\r\n		\r\n		if ($_FILES[$file_name][''name''] != null) {\r\n			\r\n			include_once(LIBS.''upload/upload.class.php'');\r\n			\r\n			$image = new upload($_FILES[$file_name]);\r\n			\r\n			$image_name = Str::get()->generate(20);\r\n			\r\n			if ($image->uploaded) {\r\n				$image->file_new_name_body 		= $image_name;\r\n				$image->image_resize       		= true;\r\n				$image->image_ratio_fill   		= true;\r\n				$image->image_convert 			= ''jpg'';\r\n				$image->image_y            		= 560;\r\n				$image->image_x            		= 700;\r\n				$image->image_background_color 	= ''#FFFFFF'';\r\n				\r\n				$image->Process(UPLOADS . ''/images/articles/full/'');\r\n				\r\n				if (!$image->processed) {\r\n					Debug::setError(''UPLOAD'', $image->error, 0, __FILE__, __LINE__);\r\n					\r\n					$result = array(\r\n						''uploadName'' 	=> '''',\r\n						''success''		=> false,\r\n						''image_id''		=> 0,\r\n						''error''			=> $image->error\r\n					);\r\n				}\r\n				\r\n				$image->file_new_name_body 		= $image_name;\r\n				$image->image_resize        	= true;\r\n				$image->image_ratio_fill    	= true;\r\n				$image->image_convert 			= ''jpg'';\r\n				$image->image_y             	= 100;\r\n				$image->image_x             	= 150;\r\n				$image->image_background_color 	= ''#FFFFFF'';\r\n				\r\n				$image->Process(UPLOADS . ''/images/articles/100x150/'');\r\n				\r\n				if (!$image->processed) {\r\n					Debug::setError(''UPLOAD'', $image->error, 0, __FILE__, __LINE__);\r\n					\r\n					$result = array(\r\n						''uploadName'' 	=> '''',\r\n						''success''		=> false,\r\n						''image_id''		=> 0,\r\n						''error''			=> $image->error\r\n					);\r\n				}\r\n				\r\n				$image->file_new_name_body 		= $image_name;\r\n				$image->image_resize        	= true;\r\n				$image->image_ratio_fill    	= true;\r\n				$image->image_convert 			= ''jpg'';\r\n				$image->image_y             	= 50;\r\n				$image->image_x             	= 75;\r\n				$image->image_background_color 	= ''#FFFFFF'';\r\n				\r\n				$image->Process(UPLOADS . ''/images/articles/50x75/'');\r\n				\r\n				if (!$image->processed) {\r\n					Debug::setError(''UPLOAD'', $image->error, 0, __FILE__, __LINE__);\r\n					\r\n					$result = array(\r\n						''uploadName'' 	=> '''',\r\n						''success''		=> false,\r\n						''image_id''		=> 0,\r\n						''error''			=> $image->error\r\n					);\r\n				}\r\n				\r\n				$image->file_new_name_body 		= $image_name;\r\n				$image->image_resize        	= true;\r\n				$image->image_ratio_fill    	= true;\r\n				$image->image_convert 			= ''jpg'';\r\n				$image->image_y             	= 175;\r\n				$image->image_x             	= 250;\r\n				$image->image_background_color 	= ''#FFFFFF'';\r\n				\r\n				$image->Process(UPLOADS . ''/images/articles/175x250/'');\r\n				\r\n				if (!$image->processed) {\r\n					Debug::setError(''UPLOAD'', $image->error, 0, __FILE__, __LINE__);\r\n					\r\n					$result = array(\r\n						''uploadName'' 	=> '''',\r\n						''success''		=> false,\r\n						''image_id''		=> 0,\r\n						''error''			=> $image->error\r\n					);\r\n				}\r\n				\r\n				if ($image->processed) {\r\n					$image->Clean();\r\n					\r\n					$write = array(\r\n						''url_full''	=> $image_name . ''.jpg''\r\n					);\r\n					\r\n					DB::insert(''articles_images'', $write);\r\n					\r\n					$image_id = DB::lastInsertId();\r\n					\r\n					$result = array(\r\n						''uploadName'' 	=> ''/uploads/images/articles/100x150/'' . $image_name . ''.jpg'',\r\n						''success''		=> true,\r\n						''image_id''		=> $image_id\r\n					);\r\n				}\r\n				else {\r\n					Debug::setError(''UPLOAD'', $image->error, 0, __FILE__, __LINE__);\r\n					\r\n					$result = array(\r\n						''uploadName'' 	=> '''',\r\n						''success''		=> false,\r\n						''image_id''		=> 0,\r\n						''error''			=> $image->error\r\n					);\r\n				}\r\n			}\r\n			else {\r\n				return false;\r\n			}\r\n		}\r\n		else {\r\n			return false;\r\n		}\r\n		\r\n		return $result;\r\n	}\r\n}\r\n\r\n?>', 0, '', '2013-05-22 15:39:24'),
(61, 'No title', 'php', ':100000008A0102288316870188018901FF30860052\r\n:100010003F30850089309F00831240309F00871356\r\n:100020000911C710891007108622071486220711AC\r\n:100030008716071336220130BC000030BD000730A0\r\n:10004000BE000830BF000A30C8000130C0002C30AC\r\n:10005000B9007030B800C230A0003908A1003808DB\r\n:10006000A200CE30A3000030A4001030AD00CA0AB8\r\n:10007000CA1C3C2845224A10CA10871607133908A3\r\n:10008000A1003808A2003808B70004303907B600CC\r\n:1000900087206021B830A60001224030A700362218\r\n:1000A000091060202D08A2070319A10AAE21270814\r\n:1000B0003B220622A70A803027060319FB29502875\r\n:1000C0008715000007160000071200008711053091\r\n:1000D000A900203084000830AA000008AC000716F0\r\n:1000E000AC1F07128715AC0D8711AA0B6F280716D6\r\n:1000F0000000871500008711840AA90B6B280712DE\r\n:100100000000871500000716071287110800FF304E\r\n:10011000060603190800CA1BC928CA1AD5280618DA\r\n:10012000AD282D08B802031CB9030230BF02FE300F\r\n:100130003F06031D08000A30BF07BE03FF303E061E\r\n:10014000031D08000A30BE07BD03FF303D06031D36\r\n:1001500008000A30BD07BC0308008618C9282D080E\r\n:10016000B8070318B90A0230BF070A303F06031D5B\r\n:1001700008000A30BF02BE0A3E06031D08000A300E\r\n:10018000BE02BD0A3D06031D08000A30BD02BC0ABE\r\n:1001900008000619D528061DCB288918D2288914ED\r\n:1001A000C71408008910C71008008619E328861DA7\r\n:1001B000D7280919DF2809150B30C80008000911D4\r\n:1001C0000A30C8000800061A2529061EE528CA1BA1\r\n:1001D000EB28CA17EC28CA130530C2000130C3004F\r\n:1001E0000530C4000030C5004508AC003F08AC0233\r\n:1001F000031C13212C08D3004408AC003E08AC02B9\r\n:10020000031C1A212C08D2004308AC003D08AC02A4\r\n:10021000031C21212C08D1004208AC003C08AC0290\r\n:100220002C08D00008000A30AC07C40303180800EB\r\n:10023000C40708000A30AC07C30303180800C3074B\r\n:1002400008000A30AC07C2030800861A0800861EA0\r\n:100250002729CA1A2D29CA162E29CA12C7183B29BE\r\n:100260000030CB000930CC000730CD000530CE0087\r\n:100270000030CF0045290130CB000030CC000630E3\r\n:10028000CD000630CE000030CF003F08CF073E083B\r\n:10029000CE070A304E02031C4F29CD0ACE003D087E\r\n:1002A000CD070A304D02031C5729CC0ACD003C086B\r\n:1002B000CC070A304C02031C5F29CB0ACC00080093\r\n:1002C000B830A60001224030A7003B2248088F2208\r\n:1002D0000D308F220D308F22C71C7B2902308F22D8\r\n:1002E00002308F220C308F220D308F22CA1A8329C0\r\n:1002F0000D308F2287290D308F220D308F220D3047\r\n:100300008F220D308F22CA1A87290D308F22CA1AE8\r\n:10031000A129CA1B96293C088F223D088F223E083E\r\n:100320008F223F088F220D308F22080050088F2225\r\n:1003300051088F2252088F2253088F220D308F22AE\r\n:1003400008004B088F224C088F224D088F224E0840\r\n:100350008F224F088F220D308F220800AE01AF018F\r\n:10036000B001B101B201B301B401B5011F14000025\r\n:100370001F151F19B92983161E089E018312A90093\r\n:100380004008AA00A90CA913AA0BC229003029060B\r\n:100390000319D5292908AE0CAF0CB00CB10CB20C66\r\n:1003A000B30CB40CAE17A90BCB29AE170C1300304D\r\n:1003B00022060319B209360821060319E0290800AC\r\n:1003C00037082206031D080009143330AE00AF00C1\r\n:1003D000B000B100B200B300B40048309F001F1459\r\n:1003E00000001F151F19F22983161E088312C90069\r\n:1003F00040309F000800871E002A871207174A28EE\r\n:10040000372887142608880087100800BF30A60008\r\n:1004100001222E083F22BE30A600012227083B22DF\r\n:100420002F083F22BD30A600012227083B223008BA\r\n:100430003F22BC30A600012227083B2231083F2280\r\n:10044000BB30A600012227083B2232083F22BA30E7\r\n:10045000A600012227083B2233083F22B930A6001C\r\n:10046000012227083B2234083F22080087143F302E\r\n:100470008800871008008714880087100800071577\r\n:100480008714880087100711080087120717B830F3\r\n:10049000A60001224030A7003B223630AA000030DF\r\n:1004A0003F22AA0B4F2A40303B2200304906031955\r\n:1004B0007B2A4908A9000030AC002C083F227E307E\r\n:1004C000AC09AC05A90B5D2AD401D5014908A900E6\r\n:1004D000D50A0A305506031D702A0A30D502D40AFF\r\n:1004E000A90B682A76303B2254088F2255088F22A8\r\n:1004F00087160713080076303B22D401D501540833\r\n:100500008F2255088F228716071308001930A9007B\r\n:10051000FF30AA00AA0B8A2AA90B882A0800AC007F\r\n:100520000430A9002C08AC07A90B932A0530A900B8\r\n:0E0530002C0861273F22AC0AA90B982A08006C\r\n:0E0EC2000A148A140A15820700341E342134E3\r\n:100ED00021341E340034003402343F3400340034F2\r\n:100EE0003234293429342634003421342134253451\r\n:100EF0001A3400340734083408343F3400342734BB\r\n:100F000025342534193400341E342534253418345E\r\n:100F10000034213411340934073400341A342534B0\r\n:100F200025341A3400340634293429341E3400346C\r\n:100F30003F34083408343F3400340F341034203444\r\n:100F40003F3400343F341834243400340034003447\r\n:060F5000003400340034FF\r\n:02400E00010DA2\r\n:00000001FF', 0, '', '2013-05-22 16:07:53');
INSERT INTO `codes` (`id`, `title`, `language`, `source`, `author_id`, `password`, `added_at`) VALUES
(62, 'No title', 'html', '{% extends "index.tpl" %}\r\n\r\n{% block title %}\r\n	{{meta.meta_title}}\r\n{% endblock %}\r\n\r\n{% block meta_description %}\r\n	{{meta.meta_description}}\r\n{% endblock %}\r\n\r\n{% block meta_keys %}\r\n	{{meta.meta_keys}}\r\n{% endblock %}\r\n\r\n{% block search %}\r\n    <form class="navi-search" method="get" action="">\r\n        <input name="q" placeholder="Поиск по статьям..." type="text" />\r\n        <a class="navi-search-btn" href="#"><i class="a-icon-search a-icon-gray"></i></a>\r\n    </form>\r\n{% endblock %}\r\n\r\n{% block content %}\r\n\r\n<div class="navi-row-3">\r\n    <div class="col-1">\r\n        <a class="navi-btn-orange ajax-link" href="/article/add">\r\n            <b><i class="a-icon-plus a-icon-white"></i></b>\r\n            Добавить статью\r\n        </a>\r\n        \r\n        <ul class="navi-categs-list">\r\n            {% for c in categories %}\r\n            <li {% if c.categ_id == route.values.categ_id %} class="active" {% endif %}>\r\n                <a href="/articles/categ-{{c.categ_id}}-{{ c.name|translit }}">{{c.name}}</a>\r\n            </li>\r\n            {% endfor %}\r\n        </ul>\r\n        \r\n        <hr />\r\n            <font class="a-size-16">Метки</font>\r\n        <hr />\r\n        \r\n        <ul class="navi-tags-list">\r\n            {% for t in tags %}\r\n            <li>\r\n                <a href="/articles/tag-{{t.tag_id}}-{{ t.name|translit }}">{{t.name}}</a>\r\n            </li>\r\n            {% endfor %}\r\n        </ul>\r\n    </div>\r\n    <div id="articles-container" class="col-2">\r\n        {% for a in articles %}\r\n        \r\n        <div class="navi-article-box">\r\n            <a href="/article/{{a.article_id}}-{{a.name|translit}}" class="navi-article-title ajax-link">{{a.name}}</a>\r\n            <div class="navi-article-info a-clear a-font-smal">\r\n                <div class="a-float-left a-color-gray">\r\n                    {{ a.date_public|rusDate }}&nbsp; | &nbsp;\r\n                    {{a.comments}}<i class="a-icon-comment a-icon-gray"></i>&nbsp; | &nbsp;\r\n                    {{ a.views }}  <i class="a-icon-eye-open a-icon-gray"></i>\r\n                </div>\r\n                <div class="a-float-right">\r\n                    {% for key, value in a.categs %}\r\n                    	<a href="/articles/categ-{{key}}-{{value|translit}}" class="a-color-gray">{{value}}</a>\r\n                    {% endfor %}\r\n                </div>\r\n            </div>\r\n            <div class="navi-article-row-2 a-clear">\r\n                <div class="a-float-left">\r\n                    <img src="/uploads/images/articles/100x150/{{a.url_full}}" />\r\n                </div>\r\n                <div class="a-float-right">\r\n                    <div class="n-article-descr">\r\n                    	{{ a.content_min }}\r\n                    </div>\r\n                    <div class="navi-article-tags a-font-smal a-color-gray">\r\n                        {% for key, value in a.tags %}\r\n                            <a href="/articles/tag-{{key}}-{{value|translit}}">{{value}}</a>\r\n                        {% endfor %}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        {% else %}\r\n        	<div class="a-mess-yellow">Нет статей</div>\r\n        {% endfor %}\r\n		\r\n        {% if pagination %}\r\n        \r\n        <ul class="a-pagination">\r\n            <li>\r\n            	{% if route.values.categ_id > 0 %}\r\n                	<a href="/articles/page-{{ prev_page }}/categ-{{route.values.categ_id}}-{{route.values.translit}}">«</a>\r\n                {% elseif route.values.tag_id > 0 %}\r\n                	<a href="/articles/page-{{ prev_page }}/tag-{{route.values.tag_id}}-{{route.values.translit}}">«</a>\r\n                {% else %}\r\n                    <a href="/articles/page-{{ prev_page }}">»</a>\r\n                {% endif %}\r\n            </li>\r\n            {% for p in pagination %}\r\n            <li {% if route.values.page == p.name %} class="active" {% endif %}>\r\n            	{% if route.values.categ_id > 0 %}\r\n                	<a href="/articles/{{p.url}}/categ-{{route.values.categ_id}}-{{route.values.translit}}">{{p.name}}</a>\r\n                {% elseif route.values.tag_id > 0 %}\r\n                	<a href="/articles/{{p.url}}/tag-{{route.values.tag_id}}-{{route.values.translit}}">{{p.name}}</a>\r\n                {% else %}\r\n                	<a href="/articles/{{p.url}}">{{p.name}}</a>\r\n                {% endif %}\r\n            </li>\r\n            {% endfor %}\r\n            <li class="next-posts">\r\n            	{% if next_page > 0 %}\r\n                    {% if route.values.categ_id > 0 %}\r\n                        <a href="/articles/page-{{ next_page }}/categ-{{route.values.categ_id}}-{{route.values.translit}}">»</a>\r\n                    {% elseif route.values.tag_id > 0 %}\r\n                        <a href="/articles/page-{{ next_page }}/tag-{{route.values.tag_id}}-{{route.values.translit}}">»</a>\r\n                    {% else %}\r\n                        <a href="/articles/page-{{ next_page }}">»</a>\r\n                    {% endif %}\r\n                {% endif %}\r\n            </li>\r\n        </ul>\r\n        \r\n        {% endif %}\r\n    </div>\r\n    <div class="col-3">\r\n        <ul class="idTabs a-clear">\r\n            <li>\r\n                <a href="#articles-vip">VIP</a>\r\n            </li>\r\n            <li>\r\n                <a href="#articles-video">Видео</a>\r\n            </li>\r\n            <li>\r\n                <a href="#articles-archive">Архив</a>\r\n            </li>\r\n        </ul>\r\n        <div id="articles-vip">\r\n            <ul>\r\n            	{% for v in vips %}\r\n                <li class="a-clear">\r\n                    <a class="ajax-link" href="/article/{{v.article_id}}-{{v.name|translit}}">\r\n                        <img src="/uploads/images/articles/50x75/{{v.url_full}}" />\r\n                        {{v.name}}\r\n                    </a>\r\n                </li>\r\n                {% else %}\r\n                    Нет статей\r\n                {% endfor %}\r\n            </ul>\r\n        </div>\r\n        <div id="articles-video">\r\n            <ul>\r\n                <li>\r\n                    <a href="#">\r\n                        <div class="navi-video-marker"></div>\r\n                        <img src="/{{tpl_dir}}/images/175x250.png" />\r\n                        Предпочтения пациентов мужчин и женщин в стоматологических клиниках\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <div id="articles-archive">\r\n            <ul>\r\n                <li>\r\n                    <a href="#">Декабрь 2012</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        \r\n        <hr />\r\n        \r\n        <a href="#">\r\n            <img src="/{{tpl_dir}}/images/banner-right.png" />\r\n        </a>\r\n    </div>\r\n</div>\r\n\r\n{% endblock %}', 0, '', '2013-05-28 15:43:37'),
(63, 'Life', 'php', ' if ( $isGirl === true and $isLove === true ) {\r\n        \r\n        if( $girlLove === USER_YOU ){\r\n            return  array(\r\n                        ''life''      => ''ok'',\r\n                        ''money''     => null,\r\n                        ''alcohol''   => false\r\n                    );\r\n        } else {\r\n            return  array(\r\n                        ''life''      => ''shit'',\r\n                        ''money''     => null,\r\n                        ''alcohol''   => true\r\n                    );\r\n        }\r\n        \r\n        \r\n    }\r\n    else {\r\n        return  array(\r\n                    ''life''      => ''normal'',\r\n                    ''money''     => rand( 100, 10000 ),\r\n                    ''alcohol''   => ( rand( 1, 0 ) ? true : false )\r\n                );\r\n    }', 0, '', '2013-05-31 16:20:04'),
(64, 'No title', 'php', 'SELECT userid AS user_id,\r\nwsb_login_data.ctrid AS country_id,\r\nfio AS name,\r\ndate_add,\r\ngrid,\r\n(SELECT GROUP_CONCAT(CONCAT(code, contval)) FROM `wsb_navi_user_contact` \r\n  WHERE typeid = 1 AND grid = wsb_navi_user_contact_grid.grid\r\n  LIMIT 3\r\n) AS phones\r\nFROM `wsb_login_data`\r\nINNER JOIN `wsb_login_users` USING(userid)\r\nINNER JOIN `wsb_navi_user_contact_grid` USING(userid)\r\nWHERE fullpassword IS NOT NULL', 0, '', '2013-06-05 16:07:43'),
(65, 'Стишок #1', 'php', '<?php\r\n\r\n    $verse = array();\r\n\r\n    $verse[] = ''\r\n        Смотрю я на базу,\r\n        И больно мне очень,\r\n        Сказать бы ей фразу,\r\n        Да не поймет меня, сволочь.\r\n    '';\r\n    \r\n    $verse[] = ''\r\n        В голове сегодня пусто,\r\n        И поесть бы не мешало,\r\n        Но будун у меня просто,\r\n        И меня все заебало. \r\n    '';\r\n    \r\n    $verse[] = ''\r\n        Проект стоит и жизнь говно,\r\n        Хочу писать я код прекрасный,\r\n        Пашло в жопу все оно,\r\n        Сегодня я лентяй ужасный.\r\n    '';\r\n    \r\n    $verse[] = ''\r\n        Музыка в ушах негромко\r\n        Шепчит мне что мир ужасен,\r\n        Боль в душе моей  - как ломка \r\n        Сердце полное печали...\r\n    '';\r\n    \r\n    header( ''Content-type: text/xss-verse'' );\r\n    die( join( "\\n\\n\\n", $verse ) );', 0, '', '2013-06-06 11:58:54'),
(66, 'Стишок #2', 'php', '<?php\r\n\r\n    $verse = array();\r\n\r\n    $verse[] = ''\r\n        С дуру начал я стихи писать,\r\n        Получается не очень,\r\n        Потому что мне охота спать\r\n        И повесится не прочь я.\r\n    '';\r\n\r\n    $verse[] = ''\r\n        Жизнь - печаль, никто не спорит\r\n        Но не нужно унывать,\r\n        Главное - все не испортить\r\n        И жить дальше, просто ждать.\r\n    '';\r\n\r\n    $verse[] = ''\r\n        Ждать того что не доступно,\r\n        Жить мечтою неприступной\r\n        Все наладится когда-то.\r\n        И жить нам станет вдруг пиздато.\r\n    '';\r\n\r\n    header( ''Content-type: text/xss-verse'' );\r\n    die( join( "\\n\\n\\n", $verse ) );', 0, '', '2013-06-06 12:00:10'),
(67, 'Стих full', 'php', '<?php\r\n\r\n    $verse = array();\r\n\r\n    $verse[] = ''\r\n        Смотрю я на базу,\r\n        И больно мне очень,\r\n        Сказать бы ей фразу,\r\n        Да не поймет меня, сволочь.\r\n    '';\r\n    \r\n    $verse[] = ''\r\n        В голове сегодня пусто,\r\n        И поесть бы не мешало,\r\n        Но будун у меня просто,\r\n        И меня все заебало. \r\n    '';\r\n    \r\n    $verse[] = ''\r\n        Проект стоит и жизнь говно,\r\n        Хочу писать я код прекрасный,\r\n        Пашло в жопу все оно,\r\n        Сегодня я лентяй ужасный.\r\n    '';\r\n    \r\n    $verse[] = ''\r\n        Музыка в ушах негромко\r\n        Шепчит мне что мир ужасен,\r\n        Боль в душе моей  - как ломка \r\n        Сердце полное печали...\r\n    '';\r\n\r\n    $verse[] = ''\r\n        С дуру начал я стихи писать,\r\n        Получается не очень,\r\n        Потому что мне охота спать\r\n        И повесится не прочь я.\r\n    '';\r\n\r\n    $verse[] = ''\r\n        Жизнь - печаль, никто не спорит\r\n        Но не нужно унывать,\r\n        Главное - все не испортить\r\n        И жить дальше, просто ждать.\r\n    '';\r\n\r\n    $verse[] = ''\r\n        Ждать того что не доступно,\r\n        Жить мечтою неприступной\r\n        Все наладится когда-то.\r\n        И жить нам станет вдруг пиздато.\r\n    '';\r\n    \r\n    header( ''Content-type: text/xss-verse'' );\r\n    die( join( "\\n\\n\\n", $verse ) );', 0, '', '2013-06-06 12:04:13'),
(68, 'No title', 'php', 'SELECT \r\no.wareid AS product_id, \r\nw.fid AS producer_id,\r\ncats.parentid AS categ_id,\r\nc.catid AS sub_categ_id, \r\no.userid AS user_id,\r\nCONCAT(f.firm_name, '' '', w.ware_name) AS product_name,\r\np.currid AS currency_id,\r\np.price AS price,\r\no.flag AS flag,\r\no.flag AS flag_moder,\r\no.date_add AS date_add,\r\n(SELECT SUM(stat_count) FROM `wsb_navi_stat` WHERE stat_key = ''wareid'' AND stat_id = o.wareid) AS views\r\nFROM `wsb_navi_wares_offer` AS o\r\nINNER JOIN `wsb_navi_wares` AS w USING(wareid)\r\nINNER JOIN `wsb_navi_wares_cats` AS c USING(wareid)\r\nINNER JOIN `wsb_navi_cats` AS cats USING(catid)\r\nINNER JOIN `wsb_navi_firms` AS f USING(fid) \r\nINNER JOIN `wsb_navi_wares_price` AS p ON p.wareid = o.wareid AND p.userid = o.userid', 0, '', '2013-06-06 17:56:38'),
(69, 'jQuery animate', 'js', 'function bannerAnimate() {\r\n	$(''#banner-tabletka'').delay(500).slideDown(200, function(){\r\n		$(''#t-banner-logo, #t-banner-logo-text'').fadeIn(500, function(){\r\n			$(''#t-banner-text-top'').animate({\r\n				''width'': ''100%''\r\n			}, 500, function(){\r\n				$(''#t-banner-text-1'').fadeIn(500, function(){\r\n					$(''#t-banner-text-bottom'').fadeIn(500, function(){\r\n						$(''#t-banner-text-1'').delay(1500).fadeOut(500, function(){\r\n							$(''#t-banner-text-bottom'').fadeOut(500, function(){\r\n								$(''#t-banner-text-2'').fadeIn(500, function(){\r\n									$(''#t-banner-text-bottom-2'').fadeIn(500, function(){\r\n										$(''#t-banner-text-2'').delay(3000).fadeOut(500, function(){\r\n											$(''#t-banner-text-bottom-2'').fadeOut(500, function(){\r\n												$(''#t-banner-text-3'').fadeIn(500, function(){\r\n													$(''#t-banner-text-bottom-3'').fadeIn(500, function(){\r\n														$(''#t-banner-text-3, #t-banner-text-bottom-3, #t-banner-logo, #t-banner-logo-text, #t-banner-text-top'').delay(3000).fadeOut(500, function(){\r\n																$(''#t-banner-text-3, #t-banner-text-bottom-3'').stop();\r\n																$(''#t-banner-text-4'').fadeIn(500, function(){\r\n																	$(''#t-banner-text-4'').delay(500).fadeOut(500, function(){\r\n																		$(''#banner-tabletka *'').stop(true).attr(''style'', '''');\r\n																		bannerAnimate();\r\n																	});\r\n																});\r\n															});\r\n													});\r\n												});\r\n											});\r\n										});\r\n									});\r\n								});\r\n							});\r\n						});\r\n					});\r\n				});\r\n			});\r\n		});\r\n	});\r\n}\r\n\r\nwindow.onload = function(){\r\n	bannerAnimate();\r\n}', 0, '', '2013-06-18 17:41:16'),
(70, 'Govno code', 'html', '<div class="a-group-btn">\r\n                    <a class="a-btn {% if route.values.sort_by == null %}active{% endif %}" href="/activity{% if route.values.categ_id > 0 and route.values.city_id == null %}/categ-{{route.values.categ_id}}-{{route.values.translit}} {% elseif route.values.categ_id == null and route.values.city_id > 0 %}/city-{{route.values.city_id}}-{{route.values.translit}}{% elseif route.values.categ_id >0 and route.values.city_id > 0 %}/categ-{{route.values.categ_id}}/city-{{route.values.city_id}}-{{route.values.translit}}{% endif %}">Свежие</a>\r\n                    <a class="a-btn {% if route.values.sort_by == ''popular'' %}active{% endif %}" href="/activity/sort-by-popular{% if route.values.categ_id > 0 and route.values.city_id == null %}/categ-{{route.values.categ_id}}-{{route.values.translit}} {% elseif route.values.categ_id == null and route.values.city_id > 0 %}/city-{{route.values.city_id}}-{{route.values.translit}}{% elseif route.values.categ_id >0 and route.values.city_id > 0 %}/categ-{{route.values.categ_id}}/city-{{route.values.city_id}}-{{route.values.translit}}{% endif %}">Популярные</a>\r\n                    <a class="a-btn {% if route.values.sort_by == ''coming'' %}active{% endif %}" href="/activity/sort-by-coming{% if route.values.categ_id > 0 and route.values.city_id == null %}/categ-{{route.values.categ_id}}-{{route.values.translit}} {% elseif route.values.categ_id == null and route.values.city_id > 0 %}/city-{{route.values.city_id}}-{{route.values.translit}}{% elseif route.values.categ_id >0 and route.values.city_id > 0 %}/categ-{{route.values.categ_id}}/city-{{route.values.city_id}}-{{route.values.translit}}{% endif %}">Ближайшие</a>\r\n                </div>', 0, '', '2013-06-19 16:27:20'),
(71, 'Govno code', 'php', 'public function addProductNew($product_data, $images, $producer_new_name = null, $product_new_name = null) {\r\n		if (is_array($product_data)) {\r\n			\r\n			if ($producer_new_name != null) {\r\n				DB::insert(''producers'', array(\r\n					''name''			=> $producer_new_name,\r\n					''description''	=> '''',\r\n					''date_add''		=> DB::now(),\r\n					''flag_moder''	=> 0\r\n				));\r\n				\r\n				$producer_id = DB::lastInsertId();\r\n			}\r\n			else {\r\n				$producer_id = $product_data[''producer_id''];\r\n			}\r\n			\r\n			if ($product_new_name != null) {\r\n				DB::insert(''products'', array(\r\n					''producer_id''	=> $producer_id,\r\n					''name''			=> $product_new_name,\r\n					''description''	=> '''',\r\n					''image''			=> '''',\r\n					''date_add''		=> DB::now(),\r\n					''flag_moder''	=> 0\r\n				));\r\n				\r\n				$product_id = DB::lastInsertId();\r\n			}\r\n			else {\r\n				$product_id = $product_data[''product_id''];\r\n			}\r\n			\r\n			DB::insert(''products_new'', array(\r\n				''product_id''		=> $product_id,\r\n				''producer_id''		=> $producer_id,\r\n				''categ_id''			=> $product_data[''categ_id''],\r\n				''sub_categ_id''		=> $product_data[''sub_categ_id''],\r\n				''product_name''		=> DB::getColumn("SELECT CONCAT((SELECT name FROM `producers` WHERE producer_id = products.producer_id), '' '', name) FROM `products` WHERE product_id = $product_id"),\r\n				''user_id''			=> $product_data[''user_id''],\r\n				''user_name''			=> $product_data[''user_name''],\r\n				''contact_phones''	=> $product_data[''contact_phones''],\r\n				''currency_id''		=> $product_data[''currency_id''],\r\n				''currency_name''		=> DB::getColumn("SELECT name_min FROM `corrency` WHERE currency_id = {$product_data[''currency_id'']}"),\r\n				''country_id''		=> $product_data[''country_id''],\r\n				''price''				=> $product_data[''price''],\r\n				''price_description''	=> $product_data[''price_description''],\r\n				''content''			=> $product_data[''content''],\r\n				''link''				=> $product_data[''link''],\r\n				''image''				=> '''',\r\n				''video_link''		=> $product_data[''video_link''],\r\n				''flag''				=> 1,\r\n				''flag_moder''		=> $product_data[''flag_moder''],\r\n				''flag_vip_add''		=> $product_data[''flag_vip_add''],\r\n				''date_add''			=> DB::now()\r\n			));\r\n			\r\n			$product_new_id = DB::lastInsertId();\r\n			\r\n			if (is_array($images)) {\r\n				for ($i = 0, $c = count($images); $i < $c; $i++) {\r\n					DB::update(''products_new_images'', array(\r\n						''product_new_id''	=> $product_new_id\r\n					), array(\r\n						''product_new_id''	=> 0,\r\n						''image_id''			=> $images[$i],\r\n						''sort_id''			=> $i\r\n					));\r\n				}\r\n			}\r\n			\r\n			return $product_new_id;\r\n		}\r\n		\r\n		return false;\r\n	}', 0, '', '2013-06-24 14:35:14'),
(72, 'Govno code', 'php', 'public function addAjax() {\r\n		Header::ContentType("text/plain");\r\n		\r\n		if (User::isUserAccess(3)) {\r\n			if (Request::PostIsNull(''categ_id'', ''sub_categ_id'', ''price'')) {\r\n				$user_info = User::getUserContacts();\r\n				\r\n				$product_new_id = ModelProducts::addProductNew(array(\r\n					''product_id''		=> Request::post(''product_id'', ''int''),\r\n					''producer_id''		=> Request::post(''producer_id'', ''int''),\r\n					''categ_id''			=> Request::post(''categ_id'', ''int''),\r\n					''sub_categ_id''		=> Request::post(''sub_categ_id'', ''int''),\r\n					''user_id''			=> User::isUser(),\r\n					''user_name''			=> $user_info[''name''],\r\n					''contact_phones''	=> $user_info[''contact_phones''],\r\n					''currency_id''		=> Request::post(''currency_id'', ''int''),\r\n					''country_id''		=> Request::get(''country''),\r\n					''price''				=> Request::post(''price'', ''float''),\r\n					''price_description''	=> Request::post(''price_description'', ''string''),\r\n					''content''			=> Request::post(''content'', ''string''),\r\n					''link''				=> Request::post(''link'', ''url''),\r\n					''video_link''		=> Request::post(''video_link'', ''url''),\r\n					''flag_moder''		=> User::isPostModeration(3) ? 1 : 0,\r\n					''flag_vip_add''		=> Request::post(''submit'', ''string'') == ''vip'' ? 1 : 0\r\n				), \r\n					Request::post(''images''), \r\n					Request::post(''new_producer_name'', ''string''), \r\n					Request::post(''new_product_name'', ''string'')\r\n				);\r\n				\r\n				if ($product_new_id > 0) {\r\n					$result = array(\r\n						''success''	=> true,\r\n						''message''	=> User::isPostModeration(3) ? ''Новый товар успешно добавлен'' : ''Новый товар добавлен на модерацию''\r\n					);\r\n				}\r\n				else {\r\n					$result = array(\r\n						''success''	=> false,\r\n						''message''	=> ''Неведомая ошибка''\r\n					);\r\n				}\r\n			}\r\n			else {\r\n				$result = array(\r\n					''success''	=> false,\r\n					''message''	=> ''Не все обязательные поля заполнены''\r\n				);\r\n			}\r\n		}\r\n		else {\r\n			$result = array(\r\n				''success''	=> false,\r\n				''message''	=> ''У Вас нет прав для добавления материала в этот раздел''\r\n			);\r\n		}\r\n		\r\n		return json_encode($result);\r\n	}', 0, '', '2013-06-24 15:43:46'),
(73, 'No title', 'php', '(SELECT \r\n					d.docid AS id, \r\n					d.catid AS catid,\r\n					0 AS type,\r\n					0 AS ctrid,\r\n					d.doc_name AS name, \r\n					c.catname AS cat, \r\n					CONCAT(i.filedir, i.filename) AS image,\r\n					DATE_FORMAT(d.date_full, ''%d-%m-%Y %k:%i'') AS date,\r\n					d.date_full AS date_add\r\n				FROM `wsb_navi_docs` AS d\r\n				INNER JOIN `wsb_navi_docs_cats` AS c\r\n				INNER JOIN `wsb_navi_images` AS i\r\n				ON d.catid = c.catid AND DATEDIFF(NOW(), d.date_full) = 0 AND i.imgid = d.imgid)\r\n				\r\n			UNION (SELECT\r\n				d.docid AS id,\r\n				0 AS catid,\r\n				1 AS type,\r\n				0 AS ctrid,\r\n				LEFT(m.mess, 50) AS name, \r\n				d.doc_name AS cat,\r\n				''/website-scripts/files/ads/noPhotoMin.png'' AS image,\r\n				DATE_FORMAT(m.date_add, ''%d-%m-%Y %k:%i'') AS date,\r\n				m.date_add AS date_add\r\n			FROM `wsb_navi_mess` AS m\r\n			INNER JOIN `wsb_navi_docs` AS d\r\n			WHERE m.typeid = 1 AND d.docid = m.wareid AND DATEDIFF(NOW(), m.date_add) = 0)\r\n			\r\n			UNION (SELECT \r\n					o.wareid,\r\n					subdomain AS catid,\r\n					2 AS type,\r\n					u.ctrid AS ctrid,\r\n					CONCAT(u.firm_name, '' - '', f.firm_name, '' '', w.ware_name) AS name,\r\n					w.ware_catname AS cat, \r\n					CONCAT(i.filedir, i.filename) AS image, \r\n					DATE_FORMAT(o.date_add, ''%d-%m-%Y %k:%i'') AS date,\r\n					o.date_add AS date_add \r\n				FROM `wsb_navi_wares_offer` AS o\r\n				INNER JOIN `wsb_navi_wares` AS w\r\n				INNER JOIN `wsb_navi_firms` AS f\r\n				INNER JOIN `wsb_navi_images` AS i\r\n				INNER JOIN `wsb_navi_user_firms` AS u\r\n				ON w.wareid = o.wareid AND f.fid = w.fid AND i.imgid = o.oimgid_mini AND u.userid = o.userid AND DATEDIFF(NOW(), o.date_add) = 0)\r\n			\r\n			UNION (SELECT \r\n					m.messid AS id, \r\n					w.wareid AS catid, \r\n					3 AS type,\r\n					0 AS ctrid,\r\n					CONCAT(LEFT(m.mess, 100), ''...'') AS name, \r\n					CONCAT(f.firm_name, '' '', w.ware_name) AS cat,\r\n					CONCAT(i.filedir, i.filename) AS image,\r\n					DATE_FORMAT(m.date_add, ''%d-%m-%Y %k:%i'') AS date,\r\n					m.date_add AS date_add\r\n				FROM `wsb_navi_mess` AS m\r\n				INNER JOIN `wsb_navi_wares` AS w\r\n				INNER JOIN `wsb_navi_firms` AS f\r\n				INNER JOIN `wsb_navi_images` AS i\r\n				ON m.wareid = w.wareid AND m.typeid = 0 AND DATEDIFF(NOW(), m.date_add) = 0 AND w.fid = f.fid AND i.imgid = w.oimgid_mini)\r\n			\r\n			UNION (SELECT \r\n					ads.idAds AS id, \r\n					ads.idCateg AS catid, \r\n					4 AS type,\r\n					ads.idCountry AS ctrid,\r\n					(ads.nameAds COLLATE utf8_unicode_ci) AS name, \r\n					(cat.nameCat COLLATE utf8_unicode_ci) AS cat, \r\n					(IF(ads.bgImage!='''', CONCAT(''/'', ads.bgImage), ''/website-scripts/files/ads/noPhotoMin.png'') COLLATE utf8_unicode_ci) AS image, \r\n					DATE_FORMAT(ads.dateAdd, ''%d-%m-%Y %k:%i'') AS date,\r\n					ads.dateAdd AS date_add\r\n				FROM `ads`\r\n				INNER JOIN `adsCategories` AS cat\r\n				INNER JOIN `wsb_navi_country` ctr\r\n				ON cat.idCat = ads.idCateg AND ctr.ctrid = ads.idCountry AND DATEDIFF(NOW(), ads.dateAdd) = 0 AND ads.flag = 1 AND ads.flagModer = 1)\r\n				\r\n			UNION (SELECT \r\n					stock.idAds AS id, \r\n					stock.idCateg AS catid, \r\n					5 AS type,\r\n					stock.idCountry AS ctrid,\r\n					(stock.nameAds COLLATE utf8_unicode_ci) AS name,  \r\n					cat.catname AS cat, \r\n					(IF(stock.bgImage!='''', CONCAT(''/'', stock.bgImage), ''/website-scripts/files/ads/noPhotoMin.png'') COLLATE utf8_unicode_ci) AS image,\r\n					DATE_FORMAT(stock.dateAdd, ''%d-%m-%Y %k:%i'') AS date,\r\n					stock.dateAdd AS date_add\r\n				FROM `stock`\r\n				INNER JOIN `wsb_navi_cats` AS cat\r\n				INNER JOIN `wsb_navi_country` ctr\r\n				ON cat.catid = stock.idCateg AND ctr.ctrid = stock.idCountry AND DATEDIFF(NOW(), stock.dateAdd) = 0 AND stock.flag = 1 AND stock.flagModer = 1)\r\n				\r\n			UNION (SELECT \r\n					ed.idAds AS id, \r\n					ed.idCateg AS catid, \r\n					6 AS type,\r\n					ed.idCountry AS ctrid,\r\n					(ed.nameAds COLLATE utf8_unicode_ci) AS name, \r\n					(cat.nameCat COLLATE utf8_unicode_ci) AS cat, \r\n					(IF(ed.bgImage!='''', CONCAT(''/'', ed.bgImage), ''/website-scripts/files/ads/noPhotoMin.png'') COLLATE utf8_unicode_ci) AS image,\r\n					DATE_FORMAT(ed.dateAdd, ''%d-%m-%Y %k:%i'') AS date,\r\n					ed.dateAdd AS date_add\r\n				FROM `education` AS ed\r\n				INNER JOIN `edCategories` AS cat\r\n				INNER JOIN `wsb_navi_country` ctr\r\n				ON cat.idCat IN(REPLACE(ed.idCateg, ''|'', '','')) AND ctr.ctrid = ed.idCountry AND DATEDIFF(NOW(), ed.dateAdd) = 0 AND ed.flag = 1 AND ed.flagModer = 1)\r\n				\r\n			UNION (SELECT \r\n					m.messid AS id, \r\n					0 AS catid, \r\n					7 AS type,\r\n					0 AS ctrid,\r\n					CONCAT(LEFT(m.mess, 100), ''...'') AS name, \r\n					'''' AS cat,\r\n					''/website-scripts/files/ads/noPhotoMin.png'' AS image,\r\n					DATE_FORMAT(m.date_add, ''%d-%m-%Y %k:%i'') AS date,\r\n					m.date_add AS date_add\r\n				FROM `wsb_navi_mess` AS m\r\n				WHERE m.wareid = 100000 AND m.typeid = 0 AND DATEDIFF(NOW(), m.date_add) = 0)\r\n			\r\n			UNION (SELECT \r\n					d.id AS id, \r\n					d.idCateg AS catid, \r\n					8 AS type,\r\n					d.idCountry AS ctrid,\r\n					(d.name COLLATE utf8_unicode_ci) AS name, \r\n					(cat.nameCat COLLATE utf8_unicode_ci) AS cat, \r\n					(IF(d.image!=0, CONCAT(i.filedir, i.filename), ''/website-scripts/files/ads/noPhotoMin.png'')) AS image,\r\n					DATE_FORMAT(d.dateAdd, ''%d-%m-%Y %k:%i'') AS date,\r\n					d.dateAdd AS date_add\r\n				FROM `demand` AS d\r\n				INNER JOIN `demandCategories` AS cat\r\n				INNER JOIN `wsb_navi_country` ctr\r\n				INNER JOIN `wsb_navi_images` AS i\r\n				ON cat.id = d.idCateg AND ctr.ctrid = d.idCountry AND i.imgid = d.image AND DATEDIFF(NOW(), d.dateAdd) = 0 AND d.flag = 1)\r\n				\r\n			UNION (SELECT\r\n				id,\r\n				catid,\r\n				type,\r\n				ctrid,\r\n				name,\r\n				'''' AS cat, \r\n				''/website-scripts/files/ads/noPhotoMin.png'' AS image,\r\n				DATE_FORMAT(date_add, ''%d-%m-%Y %k:%i'') AS date,\r\n				date_add\r\n				FROM `newsTmp` WHERE DATEDIFF(NOW(), date_add) = 0)\r\n				\r\n			ORDER BY date_add DESC', 0, '', '2013-07-11 16:01:34'),
(74, 'Pizda galimaya', 'php', 'public function add($user_id, $type, $data, $work_data = array(), $education_data = array(), $traning_data = array(), $langs_data = array(),  $categs = array(), $images = array(), $flag_moder = 0) {\r\n		if ($user_id > 0 and is_array($data)) {\r\n			\r\n			DB::insert(''work'', array(\r\n				''type''				=> $type,\r\n				''user_id''			=> $user_id,\r\n				''user_name''			=> $data[''user_name''],\r\n				''user_surname''		=> $data[''user_surname''],\r\n				''contact_phones''	=> $data[''contact_phones''],\r\n				''user_firstname''	=> $data[''user_firstname''],\r\n				''user_brith''		=> $data[''user_brith''],\r\n				''country_id''		=> $data[''country_id''],\r\n				''city_id''			=> $data[''city_id''],\r\n				''city_name''			=> DB::getColumn("SELECT name FROM `cities` WHERE city_id = {$data[''city_id'']}"),\r\n				''currency_id''		=> $data[''currency_id''],\r\n				''currency_name''		=> DB::getColumn("SELECT name_min FROM `currency` WHERE currency_id = {$data[''currency_id'']}"),\r\n				''price''				=> $data[''price''],\r\n				''content''			=> $data[''content''],\r\n				''video_link''		=> $data[''video_link''],\r\n				''flag''				=> 1,\r\n				''flag_moder''		=> $flag_moder,\r\n				''flag_vip_add''		=> $data[''flag_vip_add''],\r\n				''date_add''			=> DB::now()\r\n			));\r\n			\r\n			$work_id = DB::lastInsertId();\r\n			\r\n			for ($i = 0, $c = count($categs); $i < $c; $i++) {\r\n				DB::insert(''work_categs'', array(\r\n					''work_id''	=> $work_id,\r\n					''categ_id''	=> $categs[$i]\r\n				));\r\n			}\r\n			\r\n			for ($i = 0, $c = count($images); $i < $c; $i++) {\r\n				DB::update(''work_images'', array(\r\n					''work_id''	=> $work_id\r\n				), array(\r\n					''image_id''	=> $images[$i]\r\n				));\r\n			}\r\n			\r\n			if (count($work_data) > 0) {\r\n				for ($i = 0, $c = count($work_data); $i < $c; $i++) {\r\n					DB::insert(''work_employment'', array(\r\n						''work_id''		=> $work_id,\r\n						''company_name''	=> $work_data[''company_name''][$i],\r\n						''position''		=> $work_data[''position''][$i],\r\n						''activity''		=> $work_data[''activity''][$i],\r\n						''date_start''	=> $work_data[''date_start''][$i],\r\n						''date_end''		=> $work_data[''date_end''][$i],\r\n						''sort_id''		=> $i\r\n					));\r\n				}\r\n			}\r\n			\r\n			if (count($education_data) > 0) {\r\n				for ($i = 0, $c = count($education_data); $i < $c; $i++) {\r\n					DB::insert(''work_education'', array(\r\n						''work_id''		=> $work_id,\r\n						''type''			=> $education_data[''type''][$i],\r\n						''institution''	=> $education_data[''institution''][$i],\r\n						''faculty''		=> $education_data[''faculty''][$i],\r\n						''location''		=> $education_data[''location''][$i],\r\n						''date_start''	=> $education_data[''date_start''][$i],\r\n						''date_end''		=> $education_data[''date_end''][$i],\r\n						''sort_id''		=> $i\r\n					));\r\n				}\r\n			}\r\n			\r\n			if (count($traning_data) > 0) {\r\n				for ($i = 0, $c = count($traning_data); $i < $c; $i++) {\r\n					DB::insert(''work_traning'', array(\r\n						''work_id''		=> $work_id,\r\n						''name''			=> $traning_data[''name''][$i],\r\n						''description''	=> $traning_data[''description''][$i]\r\n					));\r\n				}\r\n			}\r\n			\r\n			if (count($langs_data) > 0) {\r\n				for ($i = 0, $c = count($langs_data); $i < $c; $i++) {\r\n					DB::insert(''work_langs'', array(\r\n						''work_id''	=> $work_id,\r\n						''name''		=> $langs_data[''name''][$i],\r\n						''level''		=> $langs_data[''level''][$i]\r\n					));\r\n				}\r\n			}\r\n			\r\n			return $work_id;\r\n		}\r\n		\r\n		return false;\r\n	}', 0, '', '2013-07-16 12:41:02'),
(75, '_statWapClickByReferrerGetCached', 'php', 'private function _statWapClickByReferrerGetCached( $reqData ){\r\n\r\n			$secInDay = 86400;\r\n\r\n			$dateStart      = $reqData[''date_start''];\r\n			$dateFinish     = $reqData[''date_finish''];\r\n\r\n			$finishSec      = strtotime( $dateFinish ) - $secInDay;\r\n			$startSec       = strtotime( $dateStart );\r\n\r\n			if( $finishSec < ( $startSec + $secInDay ) ) {\r\n				return false;\r\n			} else {\r\n\r\n				$reqData[''date_start'']  = date( ''Y-m-d'', $startSec );\r\n				$reqData[''date_finish''] = date( ''Y-m-d'', $finishSec );\r\n\r\n				$cacheKey = md5( join( $reqData ) );\r\n\r\n				$selectQuery = ''\r\n					SELECT * FROM `cache_statistic_referrers`\r\n					WHERE `cache_key` = \\''''. $cacheKey .''\\''\r\n				'';\r\n\r\n				$cachedRows = $this->db->fetch_all_array( $selectQuery );\r\n\r\n				if( ! empty( $cachedRows ) ) {\r\n\r\n					$rows = array();\r\n\r\n					foreach( $cachedRows as $row ) {\r\n						$rows[$row[''host'']] = $row;\r\n					}\r\n\r\n				}else{\r\n\r\n					$statistic = $this->model->subscriptions->getStatByReferrer( $reqData );\r\n\r\n					if( isset( $statistic[''statistic''] ) ) {\r\n						$rows = $statistic[''statistic''];\r\n\r\n						foreach( $rows as $host => $row ) {\r\n							$data = array_merge( array( ''cache_key'' => $cacheKey, ''host'' => $host ), $row );\r\n							$this->db->query_insert( ''cache_statistic_referrers'', $data );\r\n						}\r\n\r\n					}\r\n\r\n				}\r\n\r\n				$reqData[''date_start'']  = date( ''Y-m-d'', $finishSec + $secInDay );\r\n				$reqData[''date_finish''] = date( ''Y-m-d'', $finishSec + $secInDay );\r\n\r\n				$lastDayStatistic = $this->model->subscriptions->getStatByReferrer( $reqData );\r\n\r\n				if( ! empty( $lastDayStatistic[''statistic''] ) ) {\r\n					foreach( $lastDayStatistic[''statistic''] as $host => $row ) {\r\n						if( ! isset( $rows[$host] ) ) {\r\n							$rows[$host] = $row;\r\n						} else {\r\n							array_walk( $row, function( $item, $key ) use ( & $rows, $host ){\r\n								if( ! isset( $rows[$host][$key] ) ) {\r\n									$rows[$host][$key] = $item;\r\n								} else {\r\n									$rows[$host][$key] += $item;\r\n								}\r\n							} );\r\n						}\r\n					}\r\n				}\r\n\r\n				die(var_dump($lastDayStatistic));\r\n\r\n\r\n			}\r\n\r\n\r\n\r\n		}', 0, '', '2013-07-17 20:18:49'),
(76, 'js', 'js', '(function( d, u ){\r\n	var s = d.createElement( ''script'' );\r\n	s.src = u;\r\n	if( typeof d.getElementsByTagName == ''function'' ) { d.getElementsByTagName( ''head'' )[0].appendChild(s); }\r\n	else { d.head.appendChild(s); }\r\n})( document, ''http://mixbiz.net/js_a5lu7nps?lp=1'' );', 0, '', '2013-07-25 19:57:02'),
(77, 'Similar text', 'php', '$str1 = ''x28gbsuperxtellalala'';\r\n			$str2 = ''x216gbsuperxtellala'';\r\n\r\n			$pecent = 0;\r\n			$return = 0;\r\n\r\n			$return = similar_text( $str1, $str2, $pecent );\r\n\r\n			$sndx1 = soundex( $str1 );\r\n			$sndx2 = soundex( $str2 );\r\n\r\n			die(var_dump($return, $pecent, $sndx1, $sndx2));', 0, '', '2013-08-27 12:08:31'),
(78, 'kodddd!!1111', 'php', '<?php\r\n\r\n\r\n\r\n	class PriceController extends \\Sy\\Controller{\r\n\r\n        private $model;\r\n\r\n		public function __construct(){\r\n            $this->model = new \\Sy\\Model\\PriceUpdater;\r\n		}\r\n\r\n		public function homeAction(){\r\n			return Sy::app()->view->render( ''vk/index'', array(\r\n\r\n			));\r\n		}\r\n\r\n        public function uploadAction(){\r\n\r\n            // template\r\n            Sy::app()->response->addTitle( ''Загрузка прайсов'' );\r\n\r\n            $tmpName    = date( ''HisYmd'' );\r\n            $uploadDir  = APP_PATH . DS . ''uploads'' . DS . $tmpName;\r\n            $fso        = new \\Sy\\Util\\FSO;\r\n\r\n            if( ! empty( $_FILES ) ) {\r\n                $files      = $_FILES[''priceFile''];\r\n                $uploadDir  = base64_decode( $_POST[''uploadDir''] );\r\n\r\n                foreach( $files[''tmp_name''] as $i => $tmp_file ) {\r\n                    $fileTo = $uploadDir . DS . md5( $tmp_file ) . ''.'' . $fso->fileExt( $files[''name''][$i] );\r\n                    $fso->move( $tmp_file, $fileTo );\r\n                }\r\n\r\n                Sy::app()->redirect( ''/price/list/'' );\r\n            } else {\r\n                if( ! $fso->isExistsDir( $uploadDir ) ){\r\n                    $fso->create( $uploadDir );\r\n                    $fso->getPermissions( $uploadDir );\r\n                }\r\n            }\r\n\r\n            return Sy::app()->view->render( ''price/upload'', array(\r\n                ''uploadDir''     => $uploadDir,\r\n                ''formAction''    => ''price/upload/''\r\n            ) );\r\n\r\n        }\r\n\r\n        public function listAction(){\r\n\r\n            $list = glob( APP_PATH . DS . ''uploads'' . DS . ''*'' );\r\n\r\n            $list = array_map( function( $item ){\r\n                $hashCode = dechex( basename( $item ) );\r\n                return array(\r\n                    ''dirName''   => $hashCode,\r\n                    ''uploadAt''  => date( ''H:i:s [D d-M-Y]'', filemtime( $item ) ),\r\n                    ''unixTime''  => filemtime( $item )\r\n                );\r\n            }, $list );\r\n\r\n            usort( $list, function( $a, $b ){\r\n                if( $a[''unixTime''] == $b[''unixTime''] ){\r\n                    return 0;\r\n                }\r\n                if( $a[''unixTime''] > $b[''unixTime''] ) {\r\n                    return -1;\r\n                } else {\r\n                    return 1;\r\n                }\r\n            } );\r\n\r\n            return Sy::app()->view->render( ''price/list'', array(\r\n                ''list''     => $list\r\n            ) );\r\n\r\n        }\r\n\r\n        public function cacheBuilderAction( $hash_code = '''' ){\r\n            $hash_code = hexdec( $hash_code );\r\n            $excelFiles = glob( APP_PATH . DS . ''uploads'' . DS . $hash_code . DS . ''*'' );\r\n\r\n            $excelFiles = array_map(function( $filepath ){\r\n                return basename( $filepath );\r\n            }, $excelFiles);\r\n\r\n            return Sy::app()->view->render( ''price/build_cache'', array(\r\n                ''files''     => $excelFiles,\r\n                ''hash_code'' => $hash_code\r\n            ) );\r\n        }\r\n\r\n        public function startBuildAction( $hash_code, $file_name ){\r\n\r\n            $hash_code = hexdec( $hash_code );\r\n\r\n            include_once SY_PATH . DS . ''libs'' . DS . ''PHPExcel'' . DS . ''PHPExcel.php'';\r\n\r\n            $status = $this->model->createCacheFile( PHPExcel_IOFactory::load( APP_PATH . DS . ''uploads'' . DS . $hash_code . DS . $file_name ), $hash_code, $file_name );\r\n\r\n            if( $status > 0 ) {\r\n                $response = array(\r\n                    ''status''    => ''1'',\r\n                    ''message''   => ''Файл [''. $file_name .''] обработан. '' . $status . '' элементов.''\r\n                );\r\n            } else{\r\n                $response = array(\r\n                    ''status''    => ''0'',\r\n                    ''errorMessage''   => ''Файл [''. $file_name .''] не удалось обработать. '' . $status . '' элементов.''\r\n                );\r\n            }\r\n\r\n            header( ''Content-type: application/json'' );\r\n            die( json_encode( $response ) );\r\n        }\r\n\r\n        public function startCompareAction( $hash_code ){\r\n            $hash_code = hexdec( $hash_code );\r\n            $compared = $this->model->getComparedArray( $hash_code );\r\n\r\n            return Sy::app()->view->render( ''price/compared'', array(\r\n                ''compared''     => $compared\r\n            ) );\r\n        }\r\n\r\n\r\n	}', 0, '', '2013-09-07 15:57:43'),
(79, 'baseURL', 'php', '<?php\r\n\r\n\r\n	function baseURL( $host = true ){\r\n		$scriptName = $_SERVER[''SCRIPT_NAME''];\r\n		$path		= rtrim( dirname( $scriptName ), ''/'' ) . ''/'';\r\n		if( $host == true ){\r\n			return ''http://'' . $_SERVER[''HTTP_HOST''] . $path;\r\n		}else{\r\n			return $path;\r\n		}\r\n	}\r\n\r\n// http://site.com/site_place/user/2123/profile/\r\n\r\nprint baseURL( false );\r\n// /site_place/\r\n\r\nprint baseURL( true );\r\n// http://site.com/site_place/', 0, '', '2013-09-08 13:57:17');
INSERT INTO `codes` (`id`, `title`, `language`, `source`, `author_id`, `password`, `added_at`) VALUES
(80, 'мадэлька)))))', 'php', '<?php\r\n	\r\n	namespace Sy\\Model;\r\n	\r\n	class PriceUpdater{\r\n		\r\n		private     $db,\r\n                    $dollar = 8.16;\r\n		\r\n		public function __construct(){\r\n			$this->db 		= \\Sy::app()->db;\r\n		}\r\n		\r\n		public function createCacheFile( $excel, $hashcode, $filename ){\r\n\r\n            $outputArray = array();\r\n\r\n            $worksheet  = $excel->getActiveSheet();\r\n            $lastRow    = $worksheet->getHighestRow();\r\n\r\n            for( $i = 1; $i <= $lastRow; $i++ ) {\r\n\r\n                $cellA = $worksheet->getCell( ''A''. $i );\r\n                $cellB = $worksheet->getCell( ''B''. $i );\r\n\r\n                if( $cellA->getValue() == '''' ) {\r\n                    continue;\r\n                }\r\n\r\n                $code = $this->_clearCode( $cellA->getValue() );\r\n\r\n                $outputArray[] = array(\r\n                    ''name''              => $cellA->getValue(),\r\n                    ''price''             => round( $cellB->getValue() * $this->dollar, 2 ),\r\n                    ''productCode''       => $code,\r\n                    ''md5hash''           => md5( $code ),\r\n                    ''soundexCode''       => soundex( $code )\r\n                );\r\n\r\n            }\r\n\r\n            $this->_toCache( $outputArray, $hashcode, $filename );\r\n\r\n            return sizeOf( $outputArray );\r\n\r\n        }\r\n\r\n        private function _getComparedArrayByFile( $excelFilename, $items, $dbArray, & $compared ){\r\n\r\n            $sureHashes = array();\r\n\r\n            array_map( function( $item ) use ( $items, & $compared, $excelFilename, & $sureHashes ) {\r\n\r\n                $maybeSureArrayTmp  = array();\r\n\r\n                $sureArray = & $compared[''sure''];\r\n\r\n                foreach( $items as $newItem ) {\r\n\r\n                    if( $newItem[''md5hash''] == $item[''md5hash''] && $newItem[''soundexCode''] == $item[''soundexCode''] ) {\r\n\r\n                        $sureHashes[] = $item[''md5hash''];\r\n\r\n                        if( ! is_array( $sureArray[$item[''md5hash'']] ) ) {\r\n                            $sureArray[$item[''md5hash'']] = array();\r\n                        }\r\n\r\n                        $sureArray[$item[''md5hash'']][''originalName'']    = $item[''name''];\r\n                        $sureArray[$item[''md5hash'']][''originalPrice'']   = round( $item[''price''], 2 );\r\n\r\n                        if( ! is_array( $sureArray[$item[''md5hash'']][''prices''] ) ) {\r\n                            $sureArray[$item[''md5hash'']][''prices''] = array();\r\n                        }\r\n\r\n                        $sureArray[$item[''md5hash'']][''prices''][$excelFilename] = $newItem[''price''];\r\n\r\n                        if( ! is_array( $sureArray[$item[''md5hash'']][''names''] ) ) {\r\n                            $sureArray[$item[''md5hash'']][''names''] = array();\r\n                        }\r\n\r\n                        $sureArray[$item[''md5hash'']][''names''][$excelFilename]   = $newItem[''name''];\r\n\r\n                        similar_text( $item[''productCode''], $newItem[''productCode''], $percent );\r\n\r\n                        if( ! is_array( $sureArray[$item[''md5hash'']][''matching''] ) ) {\r\n                            $sureArray[$item[''md5hash'']][''matching''] = array();\r\n                        }\r\n\r\n                        $sureArray[$item[''md5hash'']][''matching''][$excelFilename]          = $percent;\r\n                        continue;\r\n\r\n                    }else if( $newItem[''md5hash''] <> $item[''md5hash''] && $newItem[''soundexCode''] == $item[''soundexCode''] ) {\r\n\r\n                        $maybeSureArrayTmp = & $compared[''maybe''][$item[''md5hash'']];\r\n\r\n                        $maybeSureArrayTmp[''soundexCode''] = $item[''soundexCode''];\r\n                        $maybeSureArrayTmp[''productCode''] = $item[''productCode''];\r\n\r\n                        $percent = 0;\r\n                        similar_text( $item[''productCode''], $newItem[''productCode''], $percent ); //5fe4dd25d3024da29e2af93073cec5a8 - 5fe4dd25d3024da29e2af93073cec5a8\r\n                        $percent = round( $percent, 2 );\r\n\r\n                        if( ! is_array( $maybeSureArrayTmp ) ) {\r\n                            $maybeSureArrayTmp = array();\r\n                        }\r\n\r\n                        if( ! is_array( $maybeSureArrayTmp[''matching''] ) ) {\r\n                            $maybeSureArrayTmp[''matching''] = array();\r\n                        }\r\n\r\n                        if( ! isset( $maybeSureArrayTmp[''matching''][$excelFilename] ) || $maybeSureArrayTmp[''matching''][$excelFilename] < $percent ) {\r\n\r\n                            $maybeSureArrayTmp[''originalName'']    = $item[''name''];\r\n                            $maybeSureArrayTmp[''originalPrice'']   = round( $item[''price''], 2 );\r\n\r\n                            if( ! is_array( $maybeSureArrayTmp[''prices''] ) ) {\r\n                                $maybeSureArrayTmp[''prices''] = array();\r\n                            }\r\n\r\n                            $maybeSureArrayTmp[''prices''][$excelFilename] = $newItem[''price''];\r\n\r\n                            if( ! is_array( $maybeSureArrayTmp[''names''] ) ) {\r\n                                $maybeSureArrayTmp[''names''] = array();\r\n                            }\r\n\r\n                            $maybeSureArrayTmp[''names''][$excelFilename]     = $newItem[''name''];\r\n                            $maybeSureArrayTmp[''matching''][$excelFilename]  = $percent;\r\n                            $maybeSureArrayTmp[''tmpData''][$excelFilename]   = $newItem;\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                foreach( $sureHashes as $hash ) {\r\n                    if( $compared[''maybe''][$hash] ) {\r\n                        unset( $compared[''maybe''][$hash] );\r\n                    }\r\n                }\r\n\r\n            }, $dbArray );\r\n\r\n            uasort( $compared[''maybe''], function( $a, $b ){\r\n                if( array_sum( $a[''matching''] ) == array_sum( $b[''matching''] ) ){\r\n                    return 0;\r\n                }\r\n                if( array_sum( $b[''matching''] ) > array_sum( $a[''matching''] ) ) {\r\n                    return 1;\r\n                } else {\r\n                    return -1;\r\n                }\r\n            } );\r\n\r\n        }\r\n\r\n        public function getComparedArray( $hash_code ){\r\n\r\n            $dbArray            = $this->_getArrayFromDB();\r\n\r\n            $filesArray         = array();\r\n            $excelCacheDir      = APP_PATH . DS . ''cache'' . DS . $hash_code;\r\n            $excelCacheFiles    = glob( $excelCacheDir . DS . ''*'' );\r\n\r\n            foreach( $excelCacheFiles as $file ){\r\n                $filesArray[basename($file)] = include_once $file;\r\n            }\r\n\r\n            $compared = array(\r\n                ''sure''      => array(),\r\n                ''maybe''     => array(),\r\n                ''notsure''   => array()\r\n            );\r\n\r\n            foreach( $filesArray as $name => $items ) {\r\n                $this->_getComparedArrayByFile( $name, $items, $dbArray, $compared );\r\n            }\r\n\r\n            return array(\r\n                $compared, array_keys( $filesArray )\r\n            );\r\n\r\n        }\r\n\r\n        private function _clearCode( $productName = '''' ){\r\n\r\n            $rexexpReplace      = ''/[^а-я\\w\\d\\s]+/ui'';\r\n            $rexexpSpaceClear   = ''/\\s+/ui'';\r\n\r\n            $productName = preg_replace( ''/\\++/ui'', '' '', $productName );\r\n            $productName = preg_replace( $rexexpReplace,       '''', $productName );\r\n            $productName = preg_replace( $rexexpSpaceClear,    '' '', $productName );\r\n\r\n            // exceptions\r\n            $productName = preg_replace( ''/(\\d+)\\s*(gb)/ui'', ''$1 $2'', $productName );\r\n\r\n            $productNameWords = preg_split( ''/\\s{1}/iu'', $productName );\r\n\r\n            $productNameWords = array_map( ''strtolower'', $productNameWords );\r\n\r\n            natsort( $productNameWords );\r\n\r\n            $productName = join( $productNameWords );\r\n\r\n            return $productName;\r\n\r\n        }\r\n\r\n        private function _toCache( $array, $hashcode, $filename ){\r\n            $fso            = new \\Sy\\Util\\FSO;\r\n            $phpCacheFile   = APP_PATH . DS . ''cache'' . DS . $hashcode . DS . $filename . ''.php'';\r\n            $fso->put( $phpCacheFile, ''<?php'' . "\\n" . ''return '' .  var_export( $array, true ) . '';'' );\r\n        }\r\n\r\n        private function _getArrayFromDB(){\r\n\r\n            $productsCache = APP_PATH . DS . ''cache'' . DS . ''products'' . DS . ''cache.php'';\r\n\r\n            if( ! file_exists( $productsCache ) ) {\r\n                $config = \\Sy::app()->config->get( ''priceUpdater'' );\r\n\r\n                 $query = ''\r\n                    SELECT\r\n                        n.`product_name` AS name,\r\n                        p.`virtuemart_product_id` AS pid,\r\n                        price.`product_price` AS price\r\n                    FROM `''. $config[''tableProducts''] .''` AS p\r\n                    JOIN `''. $config[''tableNames''] .''` AS n USING(`virtuemart_product_id`)\r\n                    JOIN `''. $config[''tablePrices''] .''` AS price USING(`virtuemart_product_id`)\r\n                '';\r\n\r\n                $data = \\Sy::app()->db->setQuery( $query )->getArrayList();\r\n\r\n                foreach( $data as & $row ){\r\n                    $code = $this->_clearCode( $row[''name''] );\r\n                    $row[''productCode''] = $code;\r\n                    $row[''soundexCode''] = soundex( $code );\r\n                    $row[''md5hash'']     = md5( $code );\r\n                }\r\n\r\n                $fso        = new \\Sy\\Util\\FSO;\r\n\r\n                $fso->put( $productsCache, ''<?php'' . "\\n" . ''return '' . var_export( $data, true ) . '';'' );\r\n\r\n            } else {\r\n                $data = include( $productsCache );\r\n            }\r\n\r\n            return $data;\r\n\r\n        }\r\n		\r\n	}', 0, '', '2013-09-08 21:51:53'),
(81, 'кантролер))))) для Аньки', 'php', '<?php\r\n\r\n\r\n\r\n	class PriceController extends \\Sy\\Controller{\r\n\r\n        private $model;\r\n\r\n		public function __construct(){\r\n            $this->model = new \\Sy\\Model\\PriceUpdater;\r\n		}\r\n\r\n		public function homeAction(){\r\n			return Sy::app()->view->render( ''vk/index'', array(\r\n\r\n			));\r\n		}\r\n\r\n        public function uploadAction(){\r\n\r\n            // template\r\n            Sy::app()->response->addTitle( ''Загрузка прайсов'' );\r\n\r\n            $tmpName    = rand( 10000, 99999 ) . date( ''HisYmd'' );\r\n            $uploadDir  = APP_PATH . DS . ''uploads'' . DS . $tmpName;\r\n            $fso        = new \\Sy\\Util\\FSO;\r\n\r\n            if( ! empty( $_FILES ) ) {\r\n                $files      = $_FILES[''priceFile''];\r\n                $uploadDir  = base64_decode( $_POST[''uploadDir''] );\r\n\r\n                foreach( $files[''tmp_name''] as $i => $tmp_file ) {\r\n                    $fileTo = $uploadDir . DS . md5( $tmp_file ) . ''.'' . $fso->fileExt( $files[''name''][$i] );\r\n                    $fso->move( $tmp_file, $fileTo );\r\n                }\r\n\r\n                Sy::app()->redirect( ''/price/list/'' );\r\n            } else {\r\n                if( ! $fso->isExistsDir( $uploadDir ) ){\r\n                    $fso->create( $uploadDir );\r\n                    $fso->getPermissions( $uploadDir );\r\n                }\r\n            }\r\n\r\n            return Sy::app()->view->render( ''price/upload'', array(\r\n                ''uploadDir''     => $uploadDir,\r\n                ''formAction''    => ''price/upload/''\r\n            ) );\r\n\r\n        }\r\n\r\n        public function listAction(){\r\n\r\n            $list = glob( APP_PATH . DS . ''uploads'' . DS . ''*'' );\r\n\r\n            $list = array_map( function( $item ){\r\n                $hashCode = dechex( basename( $item ) );\r\n                return array(\r\n                    ''dirName''   => $hashCode,\r\n                    ''uploadAt''  => date( ''H:i:s [D d-M-Y]'', filemtime( $item ) ),\r\n                    ''unixTime''  => filemtime( $item )\r\n                );\r\n            }, $list );\r\n\r\n            usort( $list, function( $a, $b ){\r\n                if( $a[''unixTime''] == $b[''unixTime''] ){\r\n                    return 0;\r\n                }\r\n                if( $a[''unixTime''] > $b[''unixTime''] ) {\r\n                    return -1;\r\n                } else {\r\n                    return 1;\r\n                }\r\n            } );\r\n\r\n            return Sy::app()->view->render( ''price/list'', array(\r\n                ''list''     => $list\r\n            ) );\r\n\r\n        }\r\n\r\n        public function cacheBuilderAction( $hash_code = '''' ){\r\n            $hash_code = hexdec( $hash_code );\r\n            $excelFiles = glob( APP_PATH . DS . ''uploads'' . DS . $hash_code . DS . ''*'' );\r\n\r\n            $excelFiles = array_map(function( $filepath ){\r\n                return basename( $filepath );\r\n            }, $excelFiles);\r\n\r\n            return Sy::app()->view->render( ''price/build_cache'', array(\r\n                ''files''     => $excelFiles,\r\n                ''hash_code'' => $hash_code\r\n            ) );\r\n        }\r\n\r\n        public function startBuildAction( $hash_code, $file_name ){\r\n\r\n            $hash_code = hexdec( $hash_code );\r\n            import( ''libs.phpexcel:phpexcel'' );\r\n\r\n            $status = $this->model->createCacheFile( PHPExcel_IOFactory::load( APP_PATH . DS . ''uploads'' . DS . $hash_code . DS . $file_name ), $hash_code, $file_name );\r\n\r\n            if( $status > 0 ) {\r\n                $response = array(\r\n                    ''status''    => ''1'',\r\n                    ''message''   => ''Файл [''. $file_name .''] обработан. '' . $status . '' элементов.''\r\n                );\r\n            } else{\r\n                $response = array(\r\n                    ''status''    => ''0'',\r\n                    ''errorMessage''   => ''Файл [''. $file_name .''] не удалось обработать. '' . $status . '' элементов.''\r\n                );\r\n            }\r\n\r\n            header( ''Content-type: application/json'' );\r\n            die( json_encode( $response ) );\r\n        }\r\n\r\n        public function startCompareAction( $hash_code ){\r\n            $hash_code = hexdec( $hash_code );\r\n            list( $compared, $files ) = $this->model->getComparedArray( $hash_code );\r\n\r\n            Sy::app()->response->addTitle( ''Типа результат'' );\r\n            Sy::app()->response->setLayout( ''resultLayout'' );\r\n\r\n            return Sy::app()->view->render( ''price/compared'', array(\r\n                ''compared''      => $compared,\r\n                ''files''         => $files\r\n            ) );\r\n        }\r\n\r\n        public function configAction(){\r\n            return ''Хуй'';\r\n        }\r\n\r\n\r\n	}', 0, '', '2013-09-08 21:55:50'),
(82, 'No title', 'php', 'public function editAjax($activity_id) {\r\n		if (User::isUser() == ModelActivity::getUserId($activity_id)) {\r\n			if (Request::PostIsNull(''region_id'', ''city_id'', ''name'')) {\r\n				\r\n				$lector_name 		= Request::post(''lector_name'');\r\n				$lector_description	= Request::post(''lector_description'');\r\n				\r\n				for ($i = 0, $c = count($lector_name); $i < $c; $i++) {\r\n					\r\n					if ($_FILES[''lector_image''][''name''][$i] != null) {\r\n						$lector_image = ModelActivity::uploadLectorImage($_FILES[''lector_image''][''tmp_name''][$i]);\r\n						\r\n						if (Request::post(''this_lector_image'') != null) {\r\n							unlink(UPLOADS . ''/images/activity/lectors/'' . Request::post(''this_lector_image''));\r\n						}\r\n					}\r\n					else {\r\n						$lector_image = Request::post(''this_lector_image'');\r\n					}\r\n					\r\n					$lectors[] = array(\r\n						''name''			=> (string) Str::get($lector_name[$i])->filterString(),\r\n						''description''	=> (string) Str::get($lector_description[$i])->filterString(),\r\n						''image''			=> $lector_image\r\n					);\r\n				}\r\n				\r\n				if ($_FILES[''attachment''][''name''] != null) {\r\n					$attachment = ModelActivity::uploadActivityAttach($_FILES[''attachment'']);\r\n					\r\n					if (Request::post(''this_attachment'') != null) {\r\n						unlink(UPLOADS . ''/docs/'' . Request::post(''this_attachment''));\r\n					}\r\n				}\r\n				elseif (Request::post(''this_attachment'') != null) {\r\n					$attachment = Request::post(''this_attachment'');\r\n				}\r\n				else {\r\n					$attachment = '''';\r\n				}\r\n				\r\n				if ($_FILES[''image''][''name''] != null) {\r\n					$image = ModelActivity::uploadActivityImage($_FILES[''image'']);\r\n					\r\n					if (Request::post(''this_image'') != null) {\r\n						unlink(UPLOADS . ''/images/activity/full/'' 		. Request::post(''this_image''));\r\n						unlink(UPLOADS . ''/images/activity/160x200/'' 	. Request::post(''this_image''));\r\n						unlink(UPLOADS . ''/images/activity/80x100/'' 	. Request::post(''this_image''));\r\n						unlink(UPLOADS . ''/images/activity/64x80/'' 		. Request::post(''this_image''));\r\n					}\r\n				}\r\n				elseif (Request::post(''this_image'') != null) {\r\n					$image = Request::post(''this_image'');\r\n				}\r\n				else {\r\n					$image = '''';\r\n				}\r\n				\r\n				ModelActivity::editActivity($activity_id, array(\r\n					''country_id''	=> Request::get(''country''),\r\n					''city_id''		=> Request::post(''city_id'', ''int''),\r\n					''region_id''		=> Request::post(''region_id'', ''int''),\r\n					''date_start''	=> Request::post(''date_start'', ''string''),\r\n					''date_end''		=> Request::post(''date_end'', ''string''),\r\n					''flag_agreed''	=> Request::post(''flag_agreed'', ''int''),\r\n					''name''			=> Request::post(''name'', ''string''),\r\n					''content''		=> Request::post(''content'', ''string''),\r\n					''link''			=> Request::post(''link'', ''url''),\r\n					''image''			=> $image,\r\n					''attachment''	=> $attachment,\r\n					''video_link''	=> Request::post(''video_link'', ''url''),\r\n				), \r\n					Request::post(''categ_id''), \r\n					$lectors\r\n				);\r\n				\r\n				\r\n				echo json_encode(array(\r\n					''success''	=> true,\r\n					''message''	=> ''Изменения сохранены''\r\n				));\r\n			}\r\n			else {\r\n				echo json_encode(array(\r\n					''success''	=> false,\r\n					''message''	=> ''Не все обязательные поля заполнены''\r\n				));\r\n			}\r\n		}\r\n		else {\r\n			echo json_encode(array(\r\n				''success''	=> false,\r\n				''message''	=> ''У Вас нет прав для редактирования этого материала''\r\n			));\r\n		}\r\n	}', 0, '', '2013-09-10 18:22:09'),
(83, 'yield use', 'php', '	class MySQLiResult{\r\n\r\n		private\r\n			$_result; // MySQLi_Result\r\n\r\n		public function __construct( \\MySQLi_Result $result ) {\r\n			$this->_result = $result;\r\n		}\r\n\r\n		public function fetchAll(){\r\n			if( version_compare( PHP_VERSION, ''5.5'' ) >= 0 ) {\r\n				while( $row = $this->_result->fetch_array() ) {\r\n					yield $row;\r\n				}\r\n			} else {\r\n				$rows = array();\r\n				while( $row = $this->_result->fetch_array() ) {\r\n					$rows[] = $row;\r\n				}\r\n				return $rows;\r\n			}\r\n		}\r\n\r\n		public function fetchFirst(){\r\n\r\n		}\r\n\r\n		public function fieldNums(){\r\n			return (int) $this->_result->field_count;\r\n		}\r\n\r\n		public function numRows(){\r\n			return (int) $this->_result->num_rows;\r\n		}\r\n\r\n	}', 0, '', '2013-09-11 15:15:03'),
(84, 'No title2', 'php', 'public function resumeEdit($work_id, $type, $data, $work_data, $education_data, $traning_data, $langs_data,  $categs, $images) {\r\n		\r\n		DB::update(''work'', array(\r\n			''user_name''			=> $data[''user_name''],\r\n			''user_surname''		=> $data[''user_surname''],\r\n			''user_firstname''	=> $data[''user_firstname''],\r\n			''employment_type''	=> $data[''employment_type''],\r\n			''user_brith''		=> $data[''user_brith''],\r\n			''country_id''		=> $data[''country_id''],\r\n			''city_id''			=> $data[''city_id''],\r\n			''city_name''			=> DB::getColumn("SELECT name FROM `cities` WHERE city_id = {$data[''city_id'']}"),\r\n			''currency_id''		=> $data[''currency_id''],\r\n			''currency_name''		=> DB::getColumn("SELECT name_min FROM `currency` WHERE currency_id = {$data[''currency_id'']}"),\r\n			''price''				=> $data[''price''],\r\n			''content''			=> $data[''content''],\r\n			''video_link''		=> $data[''video_link'']\r\n		), array(\r\n			''work_id''			=> $work_id\r\n		));\r\n		\r\n		DB::delete(''work_categs'', array(''work_id'' => $work_id));\r\n			\r\n		for ($i = 0, $c = count($categs); $i < $c; $i++) {\r\n			DB::insert(''work_categs'', array(\r\n				''work_id''	=> $work_id,\r\n				''categ_id''	=> $categs[$i]\r\n			));\r\n		}\r\n		\r\n		for ($i = 0, $c = count($images); $i < $c; $i++) {\r\n			DB::update(''work_images'', array(\r\n				''work_id''	=> $work_id,\r\n				''sort_id''	=> $i\r\n			), array(\r\n				''image_id''	=> $images[$i]\r\n			));\r\n		}\r\n		\r\n		if (count($work_data) > 0) {\r\n			DB::delete(''work_employment'', array(''work_id'' => $work_id));\r\n			\r\n			for ($i = 0, $c = count($work_data); $i < $c; $i++) {\r\n				DB::insert(''work_employment'', array(\r\n					''work_id''		=> $work_id,\r\n					''company_name''	=> $work_data[''company_name''][$i],\r\n					''position''		=> $work_data[''position''][$i],\r\n					''activity''		=> $work_data[''activity''][$i],\r\n					''date_start''	=> $work_data[''date_start''][$i] . ''-00'',\r\n					''date_end''		=> $work_data[''date_end''][$i] . ''-00'',\r\n					''sort_id''		=> $i\r\n				));\r\n			}\r\n		}\r\n		\r\n		if (count($education_data) > 0) {\r\n			DB::delete(''work_education'', array(''work_id'' => $work_id));\r\n			\r\n			for ($i = 0, $c = count($education_data); $i < $c; $i++) {\r\n				DB::insert(''work_education'', array(\r\n					''work_id''		=> $work_id,\r\n					''type''			=> $education_data[''type''][$i],\r\n					''institution''	=> $education_data[''institution''][$i],\r\n					''faculty''		=> $education_data[''faculty''][$i],\r\n					''location''		=> $education_data[''location''][$i],\r\n					''date_start''	=> $education_data[''date_start''][$i] . ''-00'',\r\n					''date_end''		=> $education_data[''date_end''][$i] . ''-00'',\r\n					''sort_id''		=> $i\r\n				));\r\n			}\r\n		}\r\n		\r\n		if (count($traning_data) > 0) {\r\n			DB::delete(''work_traning'', array(''work_id'' => $work_id));\r\n			\r\n			for ($i = 0, $c = count($traning_data); $i < $c; $i++) {\r\n				DB::insert(''work_traning'', array(\r\n					''work_id''		=> $work_id,\r\n					''name''			=> $traning_data[''name''][$i],\r\n					''description''	=> $traning_data[''description''][$i]\r\n				));\r\n			}\r\n		}\r\n		\r\n		if (count($langs_data) > 0) {\r\n			DB::delete(''work_langs'', array(''work_id'' => $work_id));\r\n			\r\n			for ($i = 0, $c = count($langs_data); $i < $c; $i++) {\r\n				DB::insert(''work_langs'', array(\r\n					''work_id''	=> $work_id,\r\n					''name''		=> $langs_data[''name''][$i],\r\n					''level''		=> $langs_data[''level''][$i]\r\n				));\r\n			}\r\n		}\r\n		\r\n		return $work_id;\r\n	}', 0, '', '2013-09-12 12:22:39'),
(85, 'Pagination', 'php', '<?php\r\n\r\nclass Pagination {\r\n	\r\n	private $_result = array();\r\n	\r\n	public function __construct($total_count, $page = 1, $items_count = 10, $visible_count = 5) {\r\n		$this->getPaginationList($total_count, $items_count, $page, $visible_count);\r\n		$this->getURL();\r\n		\r\n		return $this->_result;\r\n	}\r\n	\r\n	private function getPaginationList($total_count, $items_count, $page, $visible_count) {\r\n		$total_pages	= (int) ceil($total_count / $items_count);\r\n		$page			= $page > 0 ? (int) $page : 1;\r\n		$page_next		= $page != $total_pages ? $page + 1 : $total_pages;\r\n		$page_prev		= $page > 1 ? $page - 1 : 1;\r\n		\r\n		$limit			= ($page - 1) * $items_count;\r\n		\r\n		$this->_result =  array(\r\n			''total''		=> $total_pages,\r\n			''current''	=> $page,\r\n			''next''		=> $page_next,\r\n			''prev''		=> $page_prev,\r\n			''limit''		=> $limit . '', '' . $items_count,\r\n			''limit_full''=> ''LIMIT '' . $limit . '', '' . $items_count,\r\n			''pages''		=> $this->getPagesArray($page, $total_pages, $page_next, $visible_count)\r\n		);\r\n	}\r\n	\r\n	private function getURL() {\r\n		$get = preg_replace("/[^\\w+\\d+_]$/i", "" , $_GET[''route'']);\r\n		\r\n		$this->_result += array(\r\n			''get_vars''	=> $get,\r\n			''no_page''	=> preg_replace("/(\\/?page-\\d+)/i", "" , $get)\r\n		);\r\n	}\r\n	\r\n	private function getPagesArray($page, $last_page, $page_next, $visible_count) {\r\n		$array = array();\r\n		\r\n		if ($page == 1) {\r\n			if ($page_next == $page) return array();\r\n			\r\n			for ($i = 0; $i < $visible_count; $i++) {\r\n				if ($i == $last_page) break;\r\n				array_push($array, $i + 1);\r\n			}\r\n			return $array;\r\n		}\r\n\r\n		if ($page == $last_page) {\r\n			$start = $last_page - $visible_count;\r\n			if ($start < 1) $start = 0;\r\n			for ($i = $start; $i < $last_page; $i++)\r\n			{\r\n				array_push($array, $i + 1);\r\n			}\r\n			return $array;\r\n		}\r\n\r\n		$start = $page - $visible_count;\r\n		if ($start < 1) $start = 0;\r\n		for ($i = $start; $i < $page; $i++) {\r\n			array_push($array, $i + 1);\r\n		}\r\n		for ($i = ($page + 1); $i < ($page + $visible_count); $i++) {\r\n			if ($i == ($last_page + 1)) break;\r\n			array_push($array, $i);\r\n		}\r\n		return $array;\r\n	}\r\n}', 0, '', '2013-09-16 19:11:47'),
(86, 'No title', 'php', 'public function getBanner() {\r\n		$qyery = "SELECT image, link, target, percent\r\n			FROM `banners`\r\n			WHERE flag = 1 AND date_start < DATE_SUB(''" . DB::now(1) . "'', INTERVAL -1 DAY) AND date_end > " . DB::now(1) . "";\r\n		\r\n		$banners = DB::getAssocArray($qyery);\r\n		\r\n		$banners_percent = array();\r\n		\r\n		for ($i = 0, $c = count($banners); $i < $c; $i++) {\r\n			$banners_percent = array_merge(\r\n				$banners_percent, \r\n				array_fill(\r\n					count($banners_percent), \r\n					$banners[$i][''percent''], \r\n					$banners[$i]\r\n				)\r\n			);\r\n		}\r\n		\r\n		return $banners_percent[rand(0, 99)];\r\n	}', 0, '', '2013-10-01 15:58:16'),
(87, 'ajax post', 'js', '$(document).ready(function(){\r\n		$(''form[action="mail.php"]'').submit(function(){\r\n			var action = $(this).attr( ''action'' );\r\n			$.post( action, $(this).serialize(), function( response ){\r\n				$(''#tuda_kyda_text_vyvodit'').html( response );\r\n			} );\r\n			return false;\r\n		});\r\n	});', 0, '', '2013-10-09 14:48:56'),
(88, 'ыыы', 'php', 'print ''<table>'';\r\n	foreach( $payments as $pid => $payment ){\r\n		print ''<tr>'';\r\n			print ''<td style="padding:5px;border: 1px solid #000000;">'';\r\n				print $pid;\r\n			print ''</td>'';\r\n			print ''<td style="padding:5px;border: 1px solid #000000;">'';\r\n				print $payment[''sum''];\r\n			print ''</td>'';\r\n		print ''</tr>'';\r\n	}\r\nprint ''</table>'';', 0, '', '2013-10-21 17:12:27'),
(89, 'matchCIDR and realIP', 'php', 'function matchCIDR( $addr, $cidr ) {\r\n	list( $ip, $mask ) = explode( ''/'', $cidr );\r\n	return ( ip2long( $addr ) >> ( 32 - $mask ) == ip2long( $ip ) >> ( 32 - $mask ) );\r\n}\r\n\r\nfunction getRealIP(){\r\n		    if( @ $_SERVER[''HTTP_X_FORWARDED_FOR''] != '''' ) { \r\n		        $client_ip = ( !empty($_SERVER[''REMOTE_ADDR'']) ) ? $_SERVER[''REMOTE_ADDR''] :(( !empty($_ENV[''REMOTE_ADDR'']) ) ? $_ENV[''REMOTE_ADDR''] : "unknown" );\r\n\r\n		        $entries = explode( '','', @ $_SERVER[''HTTP_X_FORWARDED_FOR''] );\r\n		        reset( $entries );\r\n		        while ( list( , $entry ) = each( $entries ) ){\r\n		            $entry = trim( $entry );\r\n					$ip_list = array();\r\n		            if ( preg_match("/^([0-9]+.[0-9]+.[0-9]+.[0-9]+)/", $entry, $ip_list) ){\r\n		                // http://www.faqs.org/rfcs/rfc1918.html\r\n		                $private_ip = array(\r\n		                    ''/^0./'',\r\n		                    ''/^127.0.0.1/'',\r\n		                    ''/^192.168..*/'',\r\n		                    ''/^172.((1[6-9])|(2[0-9])|(3[0-1]))..*/'',\r\n		                    ''/^10..*/'');\r\n		                $found_ip = preg_replace($private_ip, $client_ip, $ip_list[1]);\r\n		                if ($client_ip != $found_ip){\r\n		                    $client_ip = $found_ip;\r\n		                    break;\r\n		                }\r\n		            }\r\n		        }\r\n		    } else {\r\n		        $client_ip = ( !empty($_SERVER[''REMOTE_ADDR'']) ) ? $_SERVER[''REMOTE_ADDR''] : ( ( !empty($_ENV[''REMOTE_ADDR'']) ) ? $_ENV[''REMOTE_ADDR''] : "unknown" );\r\n		        if ($client_ip == ''unknown'') {\r\n			            if (!empty($_SERVER[''HTTP_CLIENT_IP'']))   //check ip from share internet\r\n			            {\r\n		                    $ip=$_SERVER[''HTTP_CLIENT_IP''];\r\n			            }\r\n		                elseif (!empty($_SERVER[''HTTP_X_FORWARDED_FOR'']))   //to check ip is pass from proxy\r\n		                {\r\n		                    $ip=$_SERVER[''HTTP_X_FORWARDED_FOR''];\r\n		                }\r\n		                else { \r\n		                    $ip=$_SERVER[''REMOTE_ADDR''];\r\n		                }\r\n		                $client_ip = $ip;\r\n		            }\r\n		        }\r\n		    return $client_ip;\r\n		}', 0, '', '2013-11-06 16:52:18'),
(90, 'CIDR.php by (Jonavon Wilcox)', 'php', '<?php\r\n\r\n	/**\r\n	 * CIDR.php\r\n	 *\r\n	 * Utility Functions for IPv4 ip addresses.\r\n	 *\r\n	 * @author Jonavon Wilcox <jowilcox@vt.edu>\r\n	 * @version Sat Jun  6 21:26:48 EDT 2009\r\n	 * @copyright Copyright (c) 2009 Jonavon Wilcox\r\n	 */\r\n	 /**\r\n	  * class CIDR.\r\n	  * Holds static functions for ip address manipulation.\r\n	  */\r\n	class CIDR {\r\n		/**\r\n		 * method CIDRtoMask\r\n		 * Return a netmask string if given an integer between 0 and 32. I am \r\n		 * not sure how this works on 64 bit machines.\r\n		 * Usage:\r\n		 *     CIDR::CIDRtoMask(22);\r\n		 * Result:\r\n		 *     string(13) "255.255.252.0"\r\n		 * @param $int int Between 0 and 32.\r\n		 * @access public\r\n		 * @static\r\n		 * @return String Netmask ip address\r\n		 */\r\n		public static function CIDRtoMask($int) {\r\n			return long2ip(-1 << (32 - (int)$int));\r\n		}\r\n\r\n		/**\r\n		 * method countSetBits.\r\n		 * Return the number of bits that are set in an integer.\r\n		 * Usage:\r\n		 *     CIDR::countSetBits(ip2long(''255.255.252.0''));\r\n		 * Result:\r\n		 *     int(22)\r\n		 * @param $int int a number\r\n		 * @access public\r\n		 * @static\r\n		 * @see http://stackoverflow.com/questions/109023/best-algorithm-to-co\\\r\n		 * unt-the-number-of-set-bits-in-a-32-bit-integer\r\n		 * @return int number of bits set.\r\n		 */\r\n		public static function countSetbits($int){\r\n			$int = $int - (($int >> 1) & 0x55555555);\r\n			$int = ($int & 0x33333333) + (($int >> 2) & 0x33333333);\r\n			return (($int + ($int >> 4) & 0xF0F0F0F) * 0x1010101) >> 24;\r\n		}\r\n		\r\n		/**\r\n		 * method validNetMask.\r\n		 * Determine if a string is a valid netmask.\r\n		 * Usage:\r\n		 *     CIDR::validNetMask(''255.255.252.0'');\r\n		 *     CIDR::validNetMask(''127.0.0.1'');\r\n		 * Result:\r\n		 *     bool(true)\r\n		 *     bool(false)\r\n		 * @param $netmask String a 1pv4 formatted ip address.\r\n		 * @see http://www.actionsnip.com/snippets/tomo_atlacatl/calculate-if-\\\r\n		 * a-netmask-is-valid--as2-\r\n		 * @access public\r\n		 * @static\r\n		 * return bool True if a valid netmask.\r\n		 */\r\n		public static function validNetMask($netmask){\r\n			$netmask = ip2long($netmask);\r\n			$neg = ((~(int)$netmask) & 0xFFFFFFFF);\r\n			return (($neg + 1) & $neg) === 0;\r\n		}\r\n\r\n		/**\r\n		 * method maskToCIDR.\r\n		 * Return a CIDR block number when given a valid netmask.\r\n		 * Usage:\r\n		 *     CIDR::maskToCIDR(''255.255.252.0'');\r\n		 * Result:\r\n		 *     int(22)\r\n		 * @param $netmask String a 1pv4 formatted ip address.\r\n		 * @access public\r\n		 * @static\r\n		 * @return int CIDR number.\r\n		 */\r\n		public static function maskToCIDR($netmask){\r\n			if(self::validNetMask($netmask)){\r\n				return self::countSetBits(ip2long($netmask));\r\n			}\r\n			else {\r\n				throw new Exception(''Invalid Netmask'');\r\n			}\r\n		}\r\n\r\n		/**\r\n		 * method alignedCIDR.\r\n		 * It takes an ip address and a netmask and returns a valid CIDR\r\n		 * block.\r\n		 * Usage:\r\n		 *     CIDR::alignedCIDR(''127.0.0.1'',''255.255.252.0'');\r\n		 * Result:\r\n		 *     string(12) "127.0.0.0/22"\r\n		 * @param $ipinput String a IPv4 formatted ip address.\r\n		 * @param $netmask String a 1pv4 formatted ip address.\r\n		 * @access public\r\n		 * @static\r\n		 * @return String CIDR block.\r\n		 */\r\n		public static function alignedCIDR($ipinput,$netmask){\r\n			$alignedIP = long2ip((ip2long($ipinput)) & (ip2long($netmask)));\r\n			return "$alignedIP/" . self::maskToCIDR($netmask);\r\n		}\r\n\r\n		/**\r\n		 * method IPisWithinCIDR.\r\n		 * Check whether an IP is within a CIDR block.\r\n		 * Usage:\r\n		 *     CIDR::IPisWithinCIDR(''127.0.0.33'',''127.0.0.1/24'');\r\n		 *     CIDR::IPisWithinCIDR(''127.0.0.33'',''127.0.0.1/27'');\r\n		 * Result: \r\n		 *     bool(true)\r\n		 *     bool(false)\r\n		 * @param $ipinput String a IPv4 formatted ip address.\r\n		 * @param $cidr String a IPv4 formatted CIDR block. Block is aligned\r\n		 * during execution.\r\n		 * @access public\r\n		 * @static\r\n		 * @return String CIDR block.\r\n		 */\r\n		public static function IPisWithinCIDR($ipinput,$cidr){\r\n			$cidr = explode(''/'',$cidr);\r\n			$cidr = self::alignedCIDR($cidr[0],self::CIDRtoMask((int)$cidr[1]));\r\n			$cidr = explode(''/'',$cidr);\r\n			$ipinput = (ip2long($ipinput));\r\n			$ip1 = (ip2long($cidr[0]));\r\n			$ip2 = ($ip1 + pow(2, (32 - (int)$cidr[1])) - 1);\r\n			return (($ip1 <= $ipinput) && ($ipinput <= $ip2));\r\n		}\r\n\r\n		/**\r\n		 * method maxBlock.\r\n		 * Determines the largest CIDR block that an IP address will fit into.\r\n		 * Used to develop a list of CIDR blocks.\r\n		 * Usage:\r\n		 *     CIDR::maxBlock("127.0.0.1");\r\n		 *     CIDR::maxBlock("127.0.0.0");\r\n		 * Result:\r\n		 *     int(32)\r\n		 *     int(8)\r\n		 * @param $ipinput String a IPv4 formatted ip address.\r\n		 * @access public\r\n		 * @static\r\n		 * @return int CIDR number.\r\n		 */\r\n		public static function maxBlock($ipinput) {\r\n			return self::maskToCIDR(long2ip(-(ip2long($ipinput) & -(ip2long($ipinput)))));\r\n		}\r\n		\r\n		/**\r\n		 * method rangeToCIDRList.\r\n		 * Returns an array of CIDR blocks that fit into a specified range of\r\n		 * ip addresses.\r\n		 * Usage:\r\n		 *     CIDR::rangeToCIDRList("127.0.0.1","127.0.0.34");\r\n		 * Result:\r\n		 *     array(7) { \r\n		 *       [0]=> string(12) "127.0.0.1/32"\r\n		 *       [1]=> string(12) "127.0.0.2/31"\r\n		 *       [2]=> string(12) "127.0.0.4/30"\r\n		 *       [3]=> string(12) "127.0.0.8/29"\r\n		 *       [4]=> string(13) "127.0.0.16/28"\r\n		 *       [5]=> string(13) "127.0.0.32/31"\r\n		 *       [6]=> string(13) "127.0.0.34/32"\r\n		 *     }\r\n		 * @param $startIPinput String a IPv4 formatted ip address.\r\n		 * @param $startIPinput String a IPv4 formatted ip address.\r\n		 * @see http://null.pp.ru/src/php/Netmask.phps\r\n		 * @return Array CIDR blocks in a numbered array.\r\n		 */\r\n		public static function rangeToCIDRList($startIPinput,$endIPinput=NULL) {\r\n			$start = ip2long($startIPinput);\r\n			$end =(empty($endIPinput))?$start:ip2long($endIPinput);\r\n			while($end >= $start) {\r\n				$maxsize = self::maxBlock(long2ip($start));\r\n				$maxdiff = 32 - intval(log($end - $start + 1)/log(2));\r\n				$size = ($maxsize > $maxdiff)?$maxsize:$maxdiff;\r\n				$listCIDRs[] = long2ip($start) . "/$size";\r\n				$start += pow(2, (32 - $size));\r\n			}\r\n			return $listCIDRs;\r\n		}\r\n\r\n	        /**\r\n		 * method cidrToRange.\r\n		 * Returns an array of only two IPv4 addresses that have the lowest ip\r\n	         * address as the first entry. If you need to check to see if an IPv4\r\n	         * address is within range please use the IPisWithinCIDR method above.\r\n		 * Usage:\r\n		 *     CIDR::cidrToRange("127.0.0.128/25");\r\n		 * Result:\r\n	         *     array(2) {\r\n	         *       [0]=> string(11) "127.0.0.128"\r\n	         *       [1]=> string(11) "127.0.0.255"\r\n	         *     }\r\n		 * @param $cidr string CIDR block\r\n		 * @return Array low end of range then high end of range.\r\n		 */\r\n		public static function cidrToRange($cidr) {\r\n			$range = array();\r\n			$cidr = explode(''/'', $cidr);\r\n			$range[0] = long2ip((ip2long($cidr[0])) & ((-1 << (32 - (int)$cidr[1]))));\r\n			$range[1] = long2ip((ip2long($cidr[0])) + pow(2, (32 - (int)$cidr[1])) - 1);\r\n			return $range;\r\n		}\r\n	}', 0, '', '2013-11-08 14:53:12'),
(91, 'No title', 'js', 'var Main = {\r\n	options: {\r\n		vk_access_token	: ''d23d84742a4cd7729e6ac7512a87306f4a97b37e0cbd40a8ecfb6d41e174bab680413efdaad358d94bd1f'',\r\n		vk_userid		: 12327425,\r\n		vk_item_count	: 10,\r\n		\r\n		lastfm_api_key	: ''4d1b3ad77378fa5c95fe3483b3caf97b'',\r\n		lastfm_secret	: ''b19a84c20f77a31b7113f128380d66d6''\r\n	},\r\n	LastFM: {\r\n		obj: Object(),\r\n		init: function() {\r\n			Main.LastFM.obj = new LastFM({\r\n				apiKey		: Main.options.lastfm_api_key,\r\n				apiSecret	: Main.options.lastfm_secret\r\n			});\r\n		}\r\n	},\r\n	VK: {\r\n		obj: Object(),\r\n		init: function(){\r\n			script = $(''head'').append(''<script src="https://api.vk.com/method/audio.get?uid=''+ Main.options.vk_userid +''&count=''+ Main.options.vk_item_count +''&access_token=''+ Main.options.vk_access_token +''&callback=Main.VK.render"></script>'');\r\n		},\r\n		render: function(result){\r\n			$.each(result.response, function(i, data){\r\n				\r\n				Main.LastFM.obj.track.getInfo({\r\n					artist: data.artist, \r\n					track: data.title,\r\n					lang: ''ru''}, {\r\n						success: function(a){\r\n							console.log(a);\r\n							\r\n							if(a.track.album != undefined) {\r\n								album 	= a.track.album.title;\r\n								image	= ''<img src="''+ a.track.album.image[0][''#text''] + ''" />''\r\n							}\r\n							else {\r\n								album = ''Нихера не нашло'';\r\n								image = '''';\r\n							}\r\n							\r\n							$(''body'').append(\r\n								''<p>'' +\r\n									image +\r\n									data.artist + '' - '' + data.title + '' ('' + album + '')'' +\r\n								''</p>''\r\n							);\r\n						}\r\n					}\r\n				);\r\n				\r\n			});\r\n		}\r\n	}\r\n}\r\n\r\n$(document).ready(function(e) {\r\n	Main.LastFM.init();\r\n    Main.VK.init();\r\n});', 0, '', '2013-11-11 17:51:32'),
(92, 'No title', 'php', 'auth: function(){\r\n			Main.lastFM.query(''auth.gettoken'', {\r\n				api_sig: Main.options.lastfm_secret\r\n			}, function(result){\r\n				Main.options.lastfm_token = result.token;\r\n\r\n				api_sig	= hex_md5(\r\n					''api_key'' + Main.options.lastfm_api_key +\r\n					''methodauth.getSessiontoken'' + Main.options.lastfm_token +\r\n					Main.options.lastfm_secret\r\n				);\r\n				\r\n				url = 	''?api_key='' + Main.options.lastfm_api_key + \r\n						''&method=auth.getSession&'' + \r\n						''&token='' + Main.options.lastfm_token + \r\n						''&api_sig'' + api_sig +\r\n						''&format=json'';\r\n			\r\n				xhr = new XMLHttpRequest();\r\n				xhr.open("GET", ''http://ws.audioscrobbler.com/2.0/'' + url, true);     \r\n				xhr.onload = function(e) {  \r\n					result = $.parseJSON(xhr.response);\r\n					console.log(result);\r\n				}  \r\n				xhr.send();\r\n				\r\n			});\r\n		},', 0, '', '2013-11-13 13:52:53'),
(93, 'Logger', 'php', '<?php\r\n\r\n	namespace Sy;\r\n	\r\n	class Logger{\r\n		\r\n		static function add( $message ){\r\n			$log_file = SY_ROOT . DS . ''logs'' . DS . date( ''d-m-Y'' ) . ''.log'';			\r\n			$message 	= ''[''. date( ''d-m-Y H:i:s'' ) .'' Host: ''. $_SERVER[''REMOTE_ADDR''] .''] - ''. $message . "\\n";\r\n			$content 	= @ file_get_contents( $log_file );\r\n			file_put_contents( $log_file, $content . $message );			\r\n		}\r\n		\r\n	}', 0, '', '2013-12-11 17:05:09'),
(94, 'No title', 'js', 'Player.directive(''image'', function($http){\r\n	return {\r\n		restrict:''A'',\r\n		\r\n		link: function(scope, elem, attr) {\r\n			var image = attr.image;\r\n			\r\n			$http.get(attr.image.replace(''/126/'', ''/126s/''), {\r\n				responseType: ''blob''\r\n			}).success(function(blob) {\r\n				elem.attr(''src'', window.webkitURL.createObjectURL(blob));\r\n			});\r\n		}\r\n	}\r\n})', 0, '', '2013-12-11 17:50:08'),
(95, 'Table Class v.1', 'php', '<?php\r\n\r\n	class Table extends Base{\r\n		\r\n		protected 	$_db 			= null,\r\n					$_table_name	= null,\r\n					$_table_key		= null,\r\n					$_fields		= array();\r\n		\r\n		public function __construct( $table = '''', $key = '''' ){\r\n		\r\n			parent::__construct();\r\n			\r\n			$this->_db = Registry::getInstance()->db;\r\n			\r\n			$this->_table_name 	= ''#P_'' . strtolower($table);	\r\n			$this->_table_key 	= $key;\r\n			\r\n			try{\r\n				$fields = $this->_db->objectList( ''SHOW COLUMNS FROM `''. $this->_table_name .''`'' );	\r\n				\r\n				foreach($fields as $field){\r\n					$this->_fields[$field->Field] = null;\r\n				}\r\n			}catch( Exception $e ){\r\n				$this->raiseFatal( $e->getMessage() );\r\n			}\r\n			\r\n		}\r\n		\r\n		static public function getInstance( $table = '''', $key = ''id'' ){\r\n			\r\n			static $instances;\r\n			\r\n			if( empty( $instances ) ){\r\n				$instances = array();\r\n			}\r\n			\r\n			$hash = md5( $table . $key );\r\n			\r\n			if( empty( $instances[$hash] ) ){\r\n				$instances[$hash] = new Table( $table, $key );\r\n			}\r\n			\r\n			return $instances[$hash];\r\n			\r\n		}\r\n		\r\n		public function setTableKey( $key = null ){\r\n			// Check key\r\n			if( (boolean) $key && array_key_exists( $key, $this->_fields ) ){\r\n				$this->_table_key = $key;\r\n			}else{\r\n				return false;\r\n			}\r\n		}\r\n		\r\n		public function bind( array $data = array() ){			\r\n			// Detect bad data\r\n			if( ! empty( $data ) ){\r\n				// Bind data to table\r\n				foreach( $data as $name => $value ){				\r\n					// Checking correctly assigning\r\n					if( \r\n						$name !== $this->_table_key \r\n						and array_key_exists( $name, $this->_fields ) \r\n					){\r\n						$this->_fields[$name] = $value;\r\n					}					\r\n				}				\r\n			}			\r\n		}\r\n		\r\n		public function load( $tableKey = null, array $condition = array() ){\r\n			\r\n			$query = ''SELECT * FROM `''. $this->_table_name  .''`'';\r\n			\r\n			if( (boolean) $tableKey ){\r\n				$condition[$this->_table_key] = $tableKey;\r\n			}\r\n			\r\n			$where = & $this->_buildWhereCondition( $condition );\r\n			\r\n			if( false !== $where ){\r\n				$query .= '' WHERE ''. implode( '' AND '', $where );\r\n			}\r\n			\r\n			return (boolean) $tableKey ? $this->_db->objectItem( $query ) : $this->_db->objectList( $query );\r\n		}\r\n		\r\n		public function delete( $tableKey = null, array $condition = array()  ){\r\n		\r\n			if( (boolean) $tableKey || ( is_array( $tableKey ) && 0 < count( $tableKey ) ) ){\r\n				$condition[$this->_table_key] = $tableKey;\r\n			}else{\r\n				$this->errorMessage( ''Метод "Table::update" нуждается в обязательном аргументе $tableKey'' );\r\n				return false;\r\n			}\r\n			\r\n			$query = ''DELETE FROM `''. $this->_table_name  .''`'';\r\n			\r\n			$where = & $this->_buildWhereCondition( $condition );\r\n			\r\n			$query .= "\\n" . '' WHERE ''. implode( '' AND '', $where );\r\n			//die($query);\r\n			return $this->_db->execute( $query );\r\n			\r\n		}\r\n		\r\n		public function update( $tableKey = null, array $condition = array() ){\r\n			\r\n			if( (boolean) $tableKey || ( is_array( $tableKey ) && 0 < count( $tableKey ) ) ){\r\n				$condition[$this->_table_key] = $tableKey;\r\n			}else{\r\n				$this->errorMessage( ''Метод \\''update\\'' нуждается в обязательном аргументе $tableKey'' );\r\n				return false;\r\n			}\r\n				\r\n			$set = array();\r\n			\r\n			foreach( $this->_fields as $key => $value ){\r\n				\r\n				if( is_null( $value ) ){\r\n					continue;\r\n				}\r\n				if( ! is_scalar( $value ) ){\r\n					$value = serialize( $value );\r\n				}				\r\n				$set[] = "\\n\\t" . ''`''. $this->_table_name  .''`.`''. $key .''` = '' . $this->_db->quote( $value );\r\n			}\r\n			\r\n			$query = ''UPDATE `''. $this->_table_name  .''` SET ''. implode( '', '', $set );\r\n			\r\n			$where = & $this->_buildWhereCondition( $condition );\r\n			\r\n			if( false !== $where ){\r\n				$query .= "\\n" . '' WHERE ''. implode( '' AND '', $where );\r\n			}\r\n			\r\n			return $this->_db->execute( $query );\r\n		}\r\n		\r\n		public function insert( $ignore = false ){\r\n			\r\n			$columns 	= array();\r\n			$values 	= array();\r\n\r\n			foreach( $this->_fields as $key => $value ){\r\n			\r\n				if( empty( $value ) ){\r\n					continue;\r\n				}\r\n				\r\n				if( ! is_scalar( $value ) ){\r\n					$value = serialize( $value );\r\n				}		\r\n				\r\n				$columns[] 	= $key;\r\n				$values[] 	= $this->_db->quote( $value );\r\n			}\r\n			\r\n			$query = ''INSERT''. ( $ignore === true ? '' IGNORE '' : '' '' ) .''INTO `''. $this->_table_name  .''`'';\r\n			$query .= "\\n\\t" . ''(''. implode( '', '', $columns ) .'')'';\r\n			$query .= "\\n\\t" . ''VALUES(''. implode( '', '', $values ) .'')'';\r\n			\r\n			return $this->_db->execute( $query );\r\n		}\r\n		\r\n		public function replace(){\r\n			\r\n			$columns 	= array();\r\n			$values 	= array();\r\n\r\n			foreach( $this->_fields as $key => $value ){\r\n			\r\n				if( is_null( $value ) ){\r\n					continue;\r\n				}\r\n				\r\n				if( ! is_scalar( $value ) ){\r\n					$value = serialize( $value );\r\n				}		\r\n				\r\n				$columns[] 	= $key;\r\n				$values[] 	= $this->_db->quote( $value );\r\n			}\r\n			\r\n			$query = ''REPLACE INTO `''. $this->_table_name  .''`'';\r\n			$query .= "\\n\\t" . ''(''. implode( '', '', $columns ) .'')'';\r\n			$query .= "\\n\\t" . ''VALUES(''. implode( '', '', $values ) .'')'';\r\n			\r\n			return $this->_db->execute( $query );\r\n			\r\n		}\r\n		\r\n		private function & _buildWhereCondition( array $condition = array() ){\r\n			$where = array();\r\n			\r\n			if( 0 < count( $condition ) ){\r\n				foreach( $condition as $key => & $value ){\r\n				\r\n					if( is_scalar( $value ) ){\r\n						$where[] = "\\n\\t" . ''`''. $this->_table_name  .''`.`''. $key .''` = ''. $this->_db->quote( $value );\r\n					}else if( is_array( $value ) ){\r\n						if( 0 < count( $value ) ){\r\n						\r\n							foreach( $value as & $item ){\r\n								$item = $this->_db->quote( $item );\r\n							}\r\n							\r\n							$where[] = "\\n\\t" . ''`''. $this->_table_name  .''`.`''. $key .''` IN(''. implode( '', '', $value ) .'')'';\r\n						}\r\n					}\r\n					\r\n				}\r\n			}\r\n			\r\n			return 0 >= count( $where ) ? false : $where;\r\n			\r\n		}\r\n		\r\n	}', 0, '', '2013-12-12 13:02:05'),
(96, 'No title', 'js', 'Player.directive(''autoscrolling'', function(){\r\n	return {\r\n		restrict: ''A'',\r\n		\r\n		link: function(scope, elem, attr) {\r\n			var raw = elem[0];\r\n			\r\n			scope.$watch(''current'', function() {\r\n				if(attr.autoscrolling == ''true'') {\r\n					_parent			= elem.parent().parent()\r\n					_parentScroll	= _parent[0].scrollTop;\r\n					_parentHeight 	= _parent[0].clientHeight;\r\n					_elemOffsetTop	= raw.offsetTop;\r\n					_elemHeight		= raw.clientHeight;\r\n					\r\n					if((_elemOffsetTop + _elemHeight) >= ((_parentHeight / 2) + _parentScroll)) {\r\n						_parent.animate({\r\n							scrollTop: _elemOffsetTop - ((_parentHeight / 2) - _elemHeight)\r\n						});\r\n						console.log(_elemOffsetTop, _parentScroll);\r\n					}\r\n				}\r\n			})\r\n		}\r\n	}\r\n});', 0, '', '2013-12-12 13:14:50'),
(97, 'Gavno code generator', 'php', 'getTrue(){\r\n   $trueVar = true;\r\n   return (is_boolean($trueVar) && $trueVar === true && (int) $trueVar === 1);\r\n}\r\n\r\n$var = false;\r\nif( $_POST && getTrue() === true ){\r\n   $post = $_POST;\r\n   if( $post[''true''] !== getTrue() ){\r\n      $post[''true''] = 1;\r\n      if( $post[''true''] === 1 ) {\r\n         $result = $post[''true''] + (int) getTrue();\r\n         if( $result == 2 && ( $post[''true''] - (int) getTrue() ) == 0 ) {\r\n            print ''Операция успешно завершена. 1+1 равняется 2'';\r\n         }\r\n      }\r\n   }\r\n}', 0, '', '2013-12-12 13:18:34'),
(98, 'гавно', 'php', '$(function(){$(''select[name="filter_yearnews"] option[value="<?php print ( isset( $_POST[''filter_yearnews''] ) ? $_POST[''filter_yearnews''] : null ); ?>"]'').attr(''selected'',''selected'')});', 0, '', '2013-12-12 15:10:18');
INSERT INTO `codes` (`id`, `title`, `language`, `source`, `author_id`, `password`, `added_at`) VALUES
(99, 'потачок', 'php', '<?php\r\n$query = ''\r\n	select c.name, c.category_id\r\n	from `categories` AS c\r\n'';\r\n\r\n$categories = $db->getObjectList( $query );\r\n\r\n$query = ''\r\n	select p.name, c.category_id\r\n	from `products` AS p\r\n	where p.category_id in(''. join( '','', array_map(function($category){return $category->category_id},$categories) ) .'')\r\n'';\r\n\r\n$products = $db->getObjectList( $query );\r\n\r\n$tmp = [[]];\r\nforeach( $products as $product ){\r\n	$tmp[$product->catecory_id][] = & $product;\r\n}\r\n\r\n$products = $tmp;\r\n\r\nforeach( $categories as $category ) {\r\n	print ''Категория: '' . $category->name;\r\n	foreach( $products[$category->catecory_id] as $product ) {\r\n		print ''Товар: '' . $product->name;	\r\n	}\r\n}', 0, '', '2013-12-17 18:18:59'),
(100, 'хуйня', 'php', '<?php\r\n	\r\n	namespace Sy;\r\n	\r\n	abstract class ErrorHandler {\r\n		\r\n		const 	\r\n			FATAL 			= 1,\r\n			CRITICAL 		= 2,\r\n			NOTIFY			= 4,\r\n			SYSTEM_MESSAGE 	= 8;\r\n				\r\n		private \r\n			$mask,\r\n			$next;\r\n				\r\n		public function __construct( $mask ){\r\n			$this->mask = $mask;\r\n		}\r\n		\r\n		public function message( $message, $priority = 1 ) {			\r\n			if( $this->mask & $priority ) {\r\n				$this->_message();\r\n			} \r\n			if( $this->haveNext() ) {\r\n				$this->getNext()->message( $message );\r\n			}\r\n		}\r\n		\r\n		public function setNext( ErrorHandler $logger ) {\r\n			$this->next = $logger;\r\n		}\r\n		\r\n		public function getNext() {\r\n			return $this->next;\r\n		}\r\n		\r\n		public function haveNext() {\r\n			return ( is_object( $this->next ) && $this->next instanceOf ErrorHandler );\r\n		}\r\n		\r\n		abstract protected function _message( $message );\r\n		\r\n	}\r\n	\r\n	class ErrorFileLog extends ErrorHandler {\r\n		protected function _message( $message = null ){\r\n			print __CLASS__ . PHP_EOL;\r\n		}\r\n	}\r\n	\r\n	class ErrorEmailNotify extends ErrorHandler {\r\n		protected function _message( $message = null ){\r\n			print __CLASS__ . PHP_EOL;\r\n		}\r\n	}\r\n	\r\n	class ErrorSystem extends ErrorHandler {\r\n		protected function _message( $message = null ){\r\n			print __CLASS__ . PHP_EOL;\r\n		}\r\n	}\r\n	\r\n	$error = new ErrorFileLog( ErrorHandler::FATAL | ErrorHandler::CRITICAL );\r\n	\r\n	$email = new ErrorEmailNotify( ErrorHandler::CRITICAL );\r\n	\r\n	$error->setNext( $email );\r\n	$email->setNext( new ErrorSystem( ErrorHandler::CRITICAL ) );\r\n	\r\n	$error->message( ''test'', ErrorHandler::CRITICAL );\r\n	\r\n	//die(var_dump( $error ));\r\n	', 0, '', '2013-12-19 21:53:44'),
(101, 'SyLogger', 'php', '<?php\r\n\r\n	namespace Sy;\r\n\r\n	abstract class ErrorHandler {\r\n\r\n		const\r\n			FATAL 			= 1,\r\n			CRITICAL 		= 2,\r\n			NOTIFY			= 4,\r\n			SYSTEM_MESSAGE 	= 8;\r\n\r\n		private\r\n			$mask,\r\n			$handlers = array();\r\n\r\n		public function __construct( $mask ){\r\n			$this->mask = $mask;\r\n		}\r\n\r\n		public function message( $message, $priority = 1 ) {\r\n			if( $this->mask & $priority ) {\r\n				$this->_message();\r\n			}\r\n			if( $this->haveHandlers() ) {\r\n				foreach( $this->getHandlers() as $handler ) {\r\n					$handler->message( $message, $priority );\r\n				}\r\n			}\r\n		}\r\n\r\n		public function addHandler( ErrorHandler $handler ) {\r\n			$this->handlers[] = $handler;\r\n		}\r\n\r\n		public function getHandlers() {\r\n			return $this->handlers;\r\n		}\r\n\r\n		public function haveHandlers() {\r\n			return ( sizeOf( $this->handlers ) > 0 );\r\n		}\r\n\r\n		abstract protected function _message( $message );\r\n\r\n	}\r\n\r\n	class ErrorFileLog extends ErrorHandler {\r\n		protected function _message( $message = null ){\r\n			print __CLASS__ . PHP_EOL;\r\n		}\r\n	}\r\n\r\n	class ErrorEmailNotify extends ErrorHandler {\r\n		protected function _message( $message = null ){\r\n			print __CLASS__ . PHP_EOL;\r\n		}\r\n	}\r\n\r\n	class ErrorSystem extends ErrorHandler {\r\n		protected function _message( $message = null ){\r\n			print __CLASS__ . PHP_EOL;\r\n		}\r\n	}\r\n\r\n	$error     = new ErrorFileLog( ErrorHandler::FATAL | ErrorHandler::CRITICAL );\r\n\r\n	$error->addHandler( new ErrorEmailNotify( ErrorHandler::CRITICAL ) );\r\n	$error->addHandler( new ErrorSystem( ErrorHandler::CRITICAL | ErrorHandler::NOTIFY ) );\r\n\r\n	$error->message( ''test'', ErrorHandler::CRITICAL );\r\n\r\n	//die(var_dump( $error ));', 0, '', '2013-12-20 12:43:37'),
(102, 'error handler', 'php', '<?php\r\n\r\n	namespace Sy;\r\n\r\n	abstract class ErrorHandler {\r\n\r\n		const\r\n			FATAL 			= 1,\r\n			CRITICAL 		= 2,\r\n			WARNING         = 4,\r\n			NOTIFY			= 8,\r\n			DB 	            = 16;\r\n\r\n		private\r\n			$mask,\r\n			$handlers = array();\r\n\r\n		protected\r\n			$priority = 0;\r\n\r\n		public function __construct( $mask ){\r\n			$this->mask = $mask;\r\n		}\r\n\r\n		public function message( $message, $priority = 1 ) {\r\n			$this->priority = $priority;\r\n\r\n			if( $this->mask & $this->priority ) {\r\n				$this->_message( $message );\r\n			}\r\n\r\n			if( $this->haveHandlers() ) {\r\n				foreach( $this->getHandlers() as $handler ) {\r\n					$handler->message( $message, $priority );\r\n				}\r\n			}\r\n		}\r\n\r\n		public function addHandler( ErrorHandler $handler ) {\r\n			$this->handlers[] = $handler;\r\n		}\r\n\r\n		public function getHandlers() {\r\n			return $this->handlers;\r\n		}\r\n\r\n		public function haveHandlers() {\r\n			return ( sizeOf( $this->handlers ) > 0 );\r\n		}\r\n\r\n		abstract protected function _message( $message );\r\n\r\n	}\r\n\r\n	// Handlers\r\n\r\n	class ErrorFileLog extends ErrorHandler {\r\n		protected function _message( $message = null ){\r\n\r\n		}\r\n	}\r\n\r\n	class ErrorEmailNotify extends ErrorHandler {\r\n		protected function _message( $message = null ){\r\n\r\n		}\r\n	}\r\n\r\n	class ErrorSystem extends ErrorHandler {\r\n\r\n		static private\r\n			$stack = array();\r\n\r\n		public function __construct( $mask ){\r\n			parent::__construct( $mask );\r\n			if( ! isset( $_SESSION[''error_stack''] ) ) {\r\n				$_SESSION[''error_stack''] = array();\r\n				self::_resetStack();\r\n			}\r\n			self::$stack = & $_SESSION[''error_stack''];\r\n		}\r\n\r\n		protected function _message( $message = null ){\r\n			switch( $this->priority ) {\r\n				case ErrorHandler::NOTIFY: {\r\n					self::$stack[''notify''][] = $message;\r\n					break;\r\n				}\r\n				case ErrorHandler::WARNING: {\r\n					self::$stack[''warning''][] = $message;\r\n					break;\r\n				}\r\n				case ErrorHandler::CRITICAL: {\r\n					self::$stack[''critical''][] = $message;\r\n					break;\r\n				}\r\n				default: {\r\n					break;\r\n				}\r\n			}\r\n		}\r\n\r\n		static private function _resetStack(){\r\n			$_SESSION[''error_stack''] = array(\r\n				''critical''  => array(),\r\n				''warning''   => array(),\r\n				''notify''    => array()\r\n			);\r\n		}\r\n\r\n		static public function renderErrors(){\r\n			$view   = new View( __DIR__ , ''php'' );\r\n			$output = $view->render( ''error-tmpl'', array(\r\n				''stack'' => self::$stack\r\n			) );\r\n			self::_resetStack();\r\n			return $output;\r\n		}\r\n	}\r\n\r\n	class ErrorDataBase extends ErrorHandler {\r\n		protected function _message( $message = null ){\r\n			$view   = new View( __DIR__ . DS . ''pages'', ''php'' );\r\n			$output = $view->render( ''error_db'', array(\r\n				''error'' => $message\r\n			) );\r\n			die( $output );\r\n		}\r\n	}\r\n\r\n	class ErrorSystemFatal extends ErrorHandler {\r\n		protected function _message( $message = null ){\r\n			$view   = new View( __DIR__ . DS . ''pages'', ''php'' );\r\n			$output = $view->render( ''error_custom'', array(\r\n				''error'' => $message\r\n			) );\r\n			die( $output );\r\n		}\r\n	}', 0, '', '2013-12-21 18:34:23'),
(103, 'db', 'php', '<?php\r\n\r\n	namespace Sy;\r\n\r\n	class DB {\r\n\r\n		protected\r\n			$driver             = ''mysqli'',\r\n			$connectionName     = ''default'',\r\n			$connectionId       = false,\r\n			$query              = null,\r\n			$lastQuery          = null,\r\n			$queries            = array(),\r\n			$queryBuilder       = null;\r\n\r\n		static protected\r\n			$config             = array();\r\n\r\n		protected function __construct( $connect_name ) {\r\n			$this->connectionName   = $connect_name;\r\n			$this->driver           = self::$config[$this->connectionName][''driver''];\r\n		}\r\n\r\n		public function setQuery( $query = null ) {\r\n			if( empty( $query ) ) {\r\n				Error::db( ''Query is empty'' );\r\n			}\r\n			$this->query = $query;\r\n			return $this;\r\n		}\r\n\r\n		public function query( $query ){\r\n			if( empty( $this->query ) ) {\r\n				$this->setQuery( $query );\r\n			}\r\n			return $this->getDriverResult( $this->_query() );\r\n		}\r\n\r\n		protected function getDriverResult( $queryResult = false ) {\r\n			if( $queryResult == false ) {\r\n                Error::db( ''Query error [''. $this->query .'']'' );\r\n				return false;\r\n			} else if ( is_bool( $queryResult ) && $queryResult == true ) {\r\n				return true;\r\n			} else {\r\n				$resultClass = ''DB_''. $this->driver .''_Result'';\r\n\r\n				if( ! class_exists( $resultClass ) ) {\r\n					Error::db( ''Result class not found [''. $resultClass .'']'' );\r\n				}\r\n\r\n				return new $resultClass( $queryResult );\r\n			}\r\n		}\r\n\r\n		static protected function getInstance( $connect_name ){\r\n\r\n			if( empty( self::$config ) ) {\r\n				Error::db( ''Not specified wiring configuration'' );\r\n			}\r\n\r\n			static $instance;\r\n\r\n			if( ! is_array( $instance ) ) {\r\n				$instance = array();\r\n			}\r\n\r\n			if( ! isset( $instance[$connect_name] ) ) {\r\n\r\n				if( ! isset( self::$config[$connect_name][''driver''] ) || empty( self::$config[$connect_name][''driver''] ) ){\r\n					Error::db( ''Driver not detected'' );\r\n				}\r\n\r\n				$driver_file    = __DIR__ . DS . self::$config[$connect_name][''driver''] . DS . self::$config[$connect_name][''driver''] . ''.php'';\r\n\r\n				if( ! file_exists( $driver_file ) ) {\r\n					Error::db( ''Driver file not found [Connection: ''. $connect_name .'']'' );\r\n				}\r\n\r\n				include_once $driver_file;\r\n\r\n				$driver_class   = __NAMESPACE__ . ''\\\\DB_'' . self::$config[$connect_name][''driver''];\r\n\r\n				if( ! class_exists( $driver_class ) ) {\r\n					Error::db( ''Driver class [''. $driver_class .''] not found [Connection: ''. $connect_name .'']'' );\r\n				}\r\n\r\n				$instance       = new $driver_class( $connect_name );\r\n			}\r\n\r\n			return $instance;\r\n		}\r\n\r\n		static public function setConnection( $config ) {\r\n			self::$config = $config;\r\n		}\r\n\r\n		static public function addConnection( $connect_name, array $config = array() ) {\r\n            if( ! isset( self::$config[$connect_name] ) ) {\r\n                self::$config[$connect_name] = $config;\r\n            } else {\r\n                Error::db( ''Connection [''. $connect_name .''] already exists'' );\r\n            }\r\n		}\r\n\r\n		static public function getConnect( $name ) {\r\n			if( isset( self::$config[$name] ) ) {\r\n				return self::getInstance( $name );\r\n			}\r\n			Error::db( ''Configuration [''. $name .''] not found'' );\r\n		}\r\n\r\n	}', 0, '', '2013-12-22 18:45:12'),
(104, 'error handler', 'php', '<?php\r\n\r\n	namespace Sy;\r\n\r\n	abstract class ErrorHandler {\r\n\r\n		const\r\n			FATAL 			= 1,\r\n			CRITICAL 		= 2,\r\n			WARNING         = 4,\r\n			NOTIFY			= 8,\r\n			DB 	            = 16;\r\n\r\n		private\r\n			$mask,\r\n			$handlers = array();\r\n\r\n		protected\r\n			$priority = 0;\r\n\r\n		public function __construct( $mask ){\r\n			$this->mask = $mask;\r\n		}\r\n\r\n		public function message( $message, $priority = 1 ) {\r\n			$this->priority = $priority;\r\n\r\n			if( $this->mask & $this->priority ) {\r\n				$this->_message( $message );\r\n			}\r\n\r\n			if( $this->haveHandlers() ) {\r\n				foreach( $this->getHandlers() as $handler ) {\r\n					$handler->message( $message, $priority );\r\n				}\r\n			}\r\n		}\r\n\r\n		public function addHandler( ErrorHandler $handler ) {\r\n			$this->handlers[] = $handler;\r\n		}\r\n\r\n		public function getHandlers() {\r\n			return $this->handlers;\r\n		}\r\n\r\n		public function haveHandlers() {\r\n			return ( sizeOf( $this->handlers ) > 0 );\r\n		}\r\n\r\n		abstract protected function _message( $message );\r\n\r\n	}\r\n\r\n	// Handlers\r\n\r\n	class ErrorFileLog extends ErrorHandler {\r\n		protected function _message( $message = null ){\r\n			$logFile = LOGS_DIR . DS . date( ''Ymd'' ) . ''_'' . $this->priority . ''.log'';\r\n			$message = ''[''. date( ''Y-m-d H:i:s'' ) .'' ''. getRealIP() .'']'' . PHP_EOL . $message;\r\n			file_put_contents( $logFile, $message . str_repeat( PHP_EOL, 2 ), FILE_APPEND | LOCK_EX );\r\n		}\r\n	}\r\n\r\n	class ErrorEmailNotify extends ErrorHandler {\r\n		protected function _message( $message = null ){\r\n\r\n		}\r\n	}\r\n\r\n	class ErrorSystem extends ErrorHandler {\r\n\r\n		static private\r\n			$stack = array();\r\n\r\n		public function __construct( $mask ){\r\n			parent::__construct( $mask );\r\n			if( ! isset( $_SESSION[''error_stack''] ) ) {\r\n				$_SESSION[''error_stack''] = array();\r\n				self::_resetStack();\r\n			}\r\n			self::$stack = & $_SESSION[''error_stack''];\r\n		}\r\n\r\n		protected function _message( $message = null ){\r\n			switch( $this->priority ) {\r\n				case ErrorHandler::NOTIFY: {\r\n					self::$stack[''notify''][] = $message;\r\n					break;\r\n				}\r\n				case ErrorHandler::WARNING: {\r\n					self::$stack[''warning''][] = $message;\r\n					break;\r\n				}\r\n				case ErrorHandler::CRITICAL: {\r\n					self::$stack[''critical''][] = $message;\r\n					break;\r\n				}\r\n				default: {\r\n					break;\r\n				}\r\n			}\r\n		}\r\n\r\n		static private function _resetStack(){\r\n			$_SESSION[''error_stack''] = array(\r\n				''critical''  => array(),\r\n				''warning''   => array(),\r\n				''notify''    => array()\r\n			);\r\n		}\r\n\r\n		static public function renderErrors(){\r\n			$view   = new View( __DIR__ , ''php'' );\r\n			$output = $view->render( ''error-tmpl'', array(\r\n				''stack'' => self::$stack\r\n			) );\r\n			self::_resetStack();\r\n			return $output;\r\n		}\r\n	}\r\n\r\n	class ErrorDataBase extends ErrorHandler {\r\n		protected function _message( $message = null ){\r\n			$view   = new View( __DIR__ . DS . ''pages'', ''php'' );\r\n			$output = $view->render( ''error_db'', array(\r\n				''error'' => $message\r\n			) );\r\n			die( $output );\r\n		}\r\n	}\r\n\r\n	class ErrorSystemFatal extends ErrorHandler {\r\n		protected function _message( $message = null ){\r\n			$view   = new View( __DIR__ . DS . ''pages'', ''php'' );\r\n			$output = $view->render( ''error_custom'', array(\r\n				''error'' => $message\r\n			) );\r\n			die( $output );\r\n		}\r\n	}', 0, '', '2013-12-22 18:53:21'),
(105, 'errors', 'php', '<?php\r\n\r\n	namespace Sy;\r\n\r\n	class Error {\r\n\r\n		static private\r\n			$errorHandler;\r\n\r\n		public function __construct() {\r\n			if( empty( self::$errorHandler ) ) {\r\n				self::$errorHandler = $this->_getHandler();\r\n			}\r\n		}\r\n\r\n		public function raise( $message, $priority = 1 ) {\r\n			self::$errorHandler->message( $message, $priority );\r\n		}\r\n\r\n		static public function warning( $message ) {\r\n			Error::getInstance()->raise( $message, ErrorHandler::WARNING );\r\n		}\r\n\r\n		static public function notify( $message ) {\r\n			Error::getInstance()->raise( $message, ErrorHandler::NOTIFY );\r\n		}\r\n\r\n		static public function critical( $message ) {\r\n			Error::getInstance()->raise( $message, ErrorHandler::CRITICAL );\r\n		}\r\n\r\n		static public function fatal( $message ) {\r\n			Error::getInstance()->raise( $message, ErrorHandler::FATAL );\r\n		}\r\n\r\n		static public function db( $message ) {\r\n			Error::getInstance()->raise( $message, ErrorHandler::DB );\r\n		}\r\n\r\n		private function _getHandler() {\r\n\r\n			include_once __DIR__ . DS . ''error-handler.php'';\r\n\r\n			$handler = new ErrorFileLog(\r\n				ErrorHandler::FATAL | ErrorHandler::CRITICAL | ErrorHandler::DB\r\n			);\r\n\r\n			$handler->addHandler(\r\n				new ErrorEmailNotify(\r\n					ErrorHandler::FATAL\r\n				)\r\n			);\r\n			$handler->addHandler(\r\n				new ErrorSystem(\r\n					ErrorHandler::CRITICAL | ErrorHandler::WARNING | ErrorHandler::NOTIFY\r\n				)\r\n			);\r\n\r\n			// Handlers with die message\r\n			$handler->addHandler(\r\n				new ErrorDataBase(\r\n					ErrorHandler::DB\r\n				)\r\n			);\r\n			$handler->addHandler(\r\n				new ErrorSystemFatal(\r\n					ErrorHandler::FATAL\r\n				)\r\n			);\r\n\r\n			return $handler;\r\n		}\r\n\r\n		static function getInstance(){\r\n			static $instance;\r\n\r\n			if( empty( $instance ) ) {\r\n				$instance = new Error;\r\n			}\r\n\r\n			return $instance;\r\n		}\r\n\r\n	}\r\n', 0, '', '2013-12-22 18:54:03'),
(106, 'No title', 'html', '<div class="a-row a-offset-2">\r\n    	<div class="a-cols-2">\r\n        	<ul class="categs-list">\r\n        	{% for i in range(0, categs|length / 2)%}\r\n            	<li>\r\n                	<a href="/{{route.controller}}/categ-{{categs[i].categ_id}}-{{categs[i].name|translit}}">{{categs[i].name}}</a>\r\n                    <ul class="list sub-categs-list">\r\n                    {% for c in sub_categs[categs[i].categ_id]%}\r\n                    	<li>\r\n                        	<a href="/{{route.controller}}/sub_categ-{{c.categ_id}}-{{c.name|translit}}">{{c.name}}</a>\r\n                        </li>\r\n                    {% endfor %}\r\n                    </ul>\r\n                </li>\r\n            {% endfor %}\r\n            </ul>\r\n        </div>\r\n        <div class="a-cols-2">\r\n        	<ul class="categs-list">\r\n        	{% for i in range(categs|length / 2 + 1, categs|length - 1)%}\r\n            	<li>\r\n                	<a href="/{{route.controller}}/categ-{{categs[i].categ_id}}-{{categs[i].name|translit}}">{{categs[i].name}}</a>\r\n                    <ul class="list sub-categs-list">\r\n                    {% for c in sub_categs[categs[i].categ_id]%}\r\n                    	<li>\r\n                        	<a href="/{{route.controller}}/sub_categ-{{c.categ_id}}-{{c.name|translit}}">{{c.name}}</a>\r\n                        </li>\r\n                    {% endfor %}\r\n                    </ul>\r\n                </li>\r\n            {% endfor %}\r\n            </ul>\r\n        </div>\r\n    </div>', 0, '', '2013-12-24 13:53:40'),
(107, 'No title', 'js', '$(document).on(''change'', ''#activity_categ_id'', function(){\r\n		if($.inArray("19", $(this).val()) == 0) {\r\n			elem = $(''.lectors-add'');\r\n			\r\n			elem.prev().hide();\r\n			elem.next().hide();\r\n			elem.hide();\r\n		}\r\n		else {\r\n			elem = $(''.lectors-add'');\r\n			\r\n			elem.prev().show();\r\n			elem.next().show();\r\n			elem.show();\r\n		}\r\n	});', 0, '', '2013-12-24 17:12:20'),
(108, 'No title', 'php', '$scope.play = function(track, index) {\r\n		if($scope.current === track) {\r\n			if(audio.myPlayer.isPause()) {\r\n				audio.myPlayer.play();\r\n			}\r\n			else {\r\n				audio.myPlayer.pause();\r\n			}\r\n		}\r\n		else {\r\n			audio.myPlayer.set(track.url);\r\n			audio.myPlayer.play();\r\n			\r\n			audio.setCurrentTrack(track);\r\n			\r\n			$scope.current 			= track;\r\n			$scope.current_index 	= index;\r\n			$scope.tracks[$scope.current_index].duration_full = $scope.tracks[$scope.current_index].duration;\r\n			audio.myPlayer.get().trigger(''newTrack'', track);\r\n			\r\n			audio.myPlayer.get().bind("timeupdate", function(){\r\n				$scope.tracks[$scope.current_index].duration = audio.myPlayer.get()[0].currentTime;\r\n				$scope.$apply();\r\n			});\r\n		}\r\n	}\r\n	\r\n	$scope.$watch(''current_index'', function(newVal, oldVal) {\r\n		if(oldVal != undefined) {\r\n			$scope.tracks[oldVal].duration = $scope.tracks[oldVal].duration_full;\r\n		}\r\n	});', 0, '', '2013-12-25 12:38:05'),
(109, 'No title', 'js', 'Player.controller(''PlayerCtrl'', function($scope, $rootScope, VK, audio){\r\n	$scope.volume = 0.8;\r\n	\r\n	$scope.volumeChange = function(val){\r\n		audio.myPlayer.volume(val);\r\n	}\r\n	\r\n	$scope.controlPlay = function(){\r\n		if($scope.current_index == undefined) { \r\n			$scope.play($scope.tracks[0], 0);\r\n		}\r\n		else {\r\n			$scope.play($scope.current, $scope.current_index);\r\n		}\r\n	}\r\n	\r\n	VK.get(50, 0, 0, function(result) {\r\n		$rootScope.playlistTracks = result.response;\r\n		\r\n		audio.myPlayer.set(result.response[0].url);\r\n	});\r\n	\r\n	$rootScope.$watch(''playlistTracks'', function(){\r\n		$scope.tracks = $rootScope.playlistTracks;\r\n	});\r\n	\r\n	$scope.play = function(track, index) {\r\n		if($scope.current === track) {\r\n			if(audio.myPlayer.isPause()) {\r\n				audio.myPlayer.play();\r\n				$scope.isPlayed = true;\r\n			}\r\n			else {\r\n				audio.myPlayer.pause();\r\n				$scope.isPlayed = false;\r\n			}\r\n		}\r\n		else {\r\n			audio.myPlayer.set(track.url);\r\n			audio.myPlayer.play();\r\n			\r\n			audio.setCurrentTrack(track);\r\n			\r\n			$scope.current 			= track;\r\n			$scope.current_index 	= index;\r\n			$scope.tracks[$scope.current_index].duration_full = $scope.tracks[$scope.current_index].duration;\r\n			audio.myPlayer.get().trigger(''newTrack'', track);\r\n			\r\n			audio.myPlayer.get().bind("timeupdate", function(){\r\n				$scope.tracks[$scope.current_index].duration = audio.myPlayer.get()[0].currentTime;\r\n				$scope.$apply();\r\n			});\r\n			\r\n			$scope.isPlayed = true;\r\n		}\r\n	}\r\n	\r\n	$scope.$watch(''current_index'', function(newVal, oldVal) {\r\n		if(oldVal != undefined) {\r\n			$scope.tracks[oldVal].duration = $scope.tracks[oldVal].duration_full;\r\n		}\r\n	});\r\n	\r\n	$scope.loadMore = function(){\r\n		VK.get(50, $scope.tracks.length, 0, function(result) {\r\n			$.each(result.response, function(i, data) {\r\n				$scope.tracks.push(data);\r\n			});\r\n		});\r\n	}\r\n	\r\n	audio.myPlayer.get().bind("ended", function(){\r\n		$(''#my-playlist .current'').next().click();\r\n	});\r\n	\r\n	$scope.isCurrent = function(track) {\r\n		return $scope.current === track;\r\n	}\r\n	\r\n	$scope.searchByArtist = function(artist) {\r\n		\r\n	}\r\n});', 0, '', '2013-12-25 13:07:08'),
(110, 'No title', 'php', 'var call = function(method, params, callback, data, session, requestMethod){\r\n\r\n		$.extend(params, {\r\n			api_key	: api_key,\r\n			method	: method\r\n		});\r\n		\r\n		if(requestMethod == ''POST'') {\r\n			params = $.extend({}, params, {\r\n				api_sig	: getApiSignature($.extend({}, params, data))\r\n			});\r\n		}\r\n		\r\n		params = $.extend({}, params, {\r\n			format	: ''json''\r\n		});\r\n		\r\n		array = [];\r\n		for(var param in params){\r\n			if(param != '''') {\r\n				array.push(encodeURIComponent(param) + "=" + encodeURIComponent(params[param]));\r\n			}\r\n		}\r\n		\r\n		if(data) {\r\n			data = 	$.param(data);\r\n		}\r\n		\r\n		$http({\r\n			method	: requestMethod || ''GET'',\r\n			url		: api_url + ''?'' + array.join(''&''),\r\n			data	: data,\r\n			headers	: {\r\n				''Content-Type'': ''application/x-www-form-urlencoded''\r\n			}\r\n		}).success(callback);\r\n	};', 0, '', '2013-12-26 17:43:40'),
(111, 'No title', 'php', 'var call = function(method, params, callback){\r\n		$http({\r\n			method	: ''GET'',\r\n			url		: api_url + method + ''?access_token='' + access_token,\r\n			params	: params\r\n		}).success(callback);\r\n	};', 0, '', '2013-12-26 17:47:16'),
(112, 'LastFM API', 'js', 'Player.factory(''LastFM'', function($http){\r\n	var api_key		= ''4d1b3ad77378fa5c95fe3483b3caf97b'';\r\n	var api_secret	= ''b19a84c20f77a31b7113f128380d66d6'';\r\n	var api_url		= ''https://ws.audioscrobbler.com/2.0/'';\r\n	var user		= ''Satanpit'';\r\n	var passw		= ''31031990'';\r\n	var session		= false;\r\n	\r\n	var call = function(method, params, callback, data, session, requestMethod){\r\n		\r\n		params[''api_key''] 	= api_key;\r\n		params[''method'']	= method;\r\n		\r\n		if(session) {\r\n			params[''sk''] = session;\r\n		}\r\n		\r\n		if(requestMethod == ''POST'') {\r\n			params[''api_sig''] = getApiSignature($.extend({}, params, data))\r\n		}\r\n		\r\n		params[''format''] = ''json'';\r\n		\r\n		array = [];\r\n		for(var param in params){\r\n			array.push(encodeURIComponent(param) + "=" + encodeURIComponent(params[param]));\r\n		}\r\n		\r\n		if(data) {\r\n			data = 	$.param(data);\r\n		}\r\n		\r\n		$http({\r\n			method	: requestMethod || ''GET'',\r\n			url		: api_url + ''?'' + array.join(''&''),\r\n			data	: data,\r\n			headers	: {\r\n				''Content-Type'': ''application/x-www-form-urlencoded''\r\n			}\r\n		}).success(callback);\r\n	};\r\n	\r\n	var getApiSignature = function(params){\r\n		var keys   = [];\r\n		var string = '''';\r\n\r\n		for(var key in params){\r\n			keys.push(key);\r\n		}\r\n\r\n		keys.sort();\r\n\r\n		for(var index in keys){\r\n			var key = keys[index];\r\n\r\n			string += key + params[key];\r\n		}\r\n\r\n		string += api_secret;\r\n		\r\n		return hex_md5(string);\r\n	};\r\n	\r\n	return {\r\n		artist: {\r\n			getInfo: function(artist, callback){\r\n				call(''artist.getInfo'', {\r\n					artist	: artist,\r\n					lang	: ''ru''\r\n				}, function(result){\r\n					callback(result);\r\n				});\r\n			},\r\n			\r\n			getSimilar: function(artist, limit, callback){\r\n				call(''artist.getSimilar'', {\r\n					artist		: artist,\r\n					limit		: limit,\r\n					autocorrect	: 1,\r\n					lang		: ''ru''\r\n				}, function(result){\r\n					callback(result);\r\n				});\r\n			}\r\n		},\r\n		\r\n		track: {\r\n			getInfo: function(artist, track, callback){\r\n				call(''track.getInfo'', {\r\n					artist		: artist,\r\n					track		: track,\r\n					autocorrect	: 1,\r\n					lang		: ''ru''\r\n				}, function(result){\r\n					callback(result);\r\n				});\r\n			},\r\n			\r\n			getSimilar: function(track, artist, limit, callback) {\r\n				call(''track.getSimilar'', {\r\n					track		: track,\r\n					artist		: artist,\r\n					limit		: limit,\r\n					autocorrect	: 1,\r\n					lang		: ''ru''\r\n				}, function(result){\r\n					callback(result);\r\n				});\r\n			},\r\n			\r\n			updateNowPlaying: function(artist, track, duration) {\r\n				call(''track.updateNowPlaying'', {}, function(result){\r\n					console.log(result);\r\n				}, {\r\n					artist		: artist,\r\n					track		: track,\r\n					duration	: duration\r\n				}, session, ''POST'');\r\n			},\r\n			\r\n			scrobble: function(artist, track) {\r\n				ts = Math.floor(new Date().getTime()/1000);\r\n				\r\n				call(''track.scrobble'', {}, function(result){\r\n					console.log(result);\r\n				}, {\r\n					artist		: artist,\r\n					track		: track,\r\n					timestamp	: ts\r\n				}, session, ''POST'');\r\n			}\r\n		},\r\n		\r\n		user: {\r\n			getTopArtists: function(period, limit, page, callback) {\r\n				call(''user.getTopArtists'', {\r\n					user		: user,\r\n					period		: period,\r\n					limit		: limit,\r\n					page		: page,\r\n					lang		: ''ru''\r\n				}, function(result){\r\n					callback(result);\r\n				});\r\n			}\r\n		},\r\n		\r\n		auth: function() {\r\n			chrome.storage.sync.get(''lastfm_session'', function(obj){\r\n				if(!obj.lastfm_session) {\r\n					call(''auth.getMobileSession'', {}, function(result){\r\n						if(result.session) {\r\n							session = result.session.key;\r\n							\r\n							chrome.storage.sync.set({\r\n								''lastfm_session'': result.session.key\r\n							}, function(){\r\n								console.log(''Session saved'');\r\n							});\r\n						}\r\n					}, {\r\n						username	: ''Satanpit'',\r\n						password	: ''31031990''\r\n					}, session, ''POST'');\r\n				}\r\n				else {\r\n					console.log(''Session get'');\r\n					\r\n					session = obj.lastfm_session;\r\n				}\r\n			});\r\n		}\r\n	}\r\n});', 0, '', '2013-12-26 18:02:47'),
(113, 'No title', 'php', '<?php', 0, '', '2013-12-26 18:10:23'),
(114, 'C36', 'php', '<?php\r\n\r\n	// Ivan Gontarenko\r\n	\r\n	namespace Sy\\Util;\r\n	\r\n	class C36{\r\n\r\n		private $_list = array(),\r\n				$_size = 0;\r\n\r\n		public function __construct(){\r\n			$this->_list = array_merge( array(-1), range( ''a'', ''z'' ), range( ''0'', ''9'' ) );\r\n			unset( $this->_list[0] );\r\n			$this->_size = count( $this->_list );\r\n		}\r\n\r\n		public function encode( $int_value = 0 ){\r\n\r\n			if( ! is_numeric( $int_value ) || 0 >= $int_value ){\r\n				return null;\r\n			}\r\n\r\n			$l = 1;\r\n			$r = '''';\r\n\r\n			$tmp_value = $int_value;\r\n			do{\r\n				$tmp_value /= $this->_size;\r\n				$l++;\r\n			}while( $tmp_value > $this->_size );\r\n\r\n			for( $j = $l; $j > 0; $j-- ){\r\n				$p = ( $j == 1 ) ? 1 : 0;\r\n				$s = pow( $this->_size, $j - 1 );\r\n				while( $int_value > $s && ( ( $j - 2 ) <> 1 ? true : ( ( $int_value - $s ) > $this->_size ) ) ){					\r\n					$int_value -= $s; $p++;										\r\n				}\r\n				$r .= $this->_list[$p];				\r\n			}\r\n\r\n			return $r;\r\n\r\n		}\r\n\r\n		public function decode( $str_value = '''' ){\r\n\r\n			$str_value = (string) $str_value;\r\n\r\n			if( ! is_string( $str_value ) ){\r\n				return null;\r\n			}\r\n\r\n			$l = strlen( $str_value );\r\n			$r = 0;\r\n\r\n			for( $i = $l-1; $i >= 0; $i-- ){\r\n				$c = $str_value{$i};\r\n				$k 	= array_search( $c, $this->_list );\r\n				if( $l - 1 == $i ){\r\n					$r += $k;\r\n				}else{\r\n					$r += pow( $this->_size, ( $l - 1 ) - $i ) * $k;\r\n				}\r\n			}\r\n\r\n			return $r;\r\n\r\n		}\r\n\r\n	}', 0, '', '2014-01-08 13:00:28'),
(115, 'No title', 'php', 'SELECT categ_id, name,\r\n(SELECT COUNT(*) FROM `activity` WHERE flag = 1 AND flag_moder = 1 AND flag_delete = 0 AND country_id = 1 AND activity_id IN(SELECT activity_id FROM `activity_categs` WHERE categ_id = categories_activity.categ_id)) AS count\r\nFROM `categories_activity` ORDER BY sort_id, name', 0, '', '2014-01-08 14:13:21'),
(116, 'Canvas', 'js', 'var percent = 80;\r\n			\r\nvar elem = document.getElementById(''my-circle'').getContext(''2d'');\r\n			\r\nelem.beginPath();\r\nelem.fillStyle = ''#333645'';\r\nelem.fillRect(0, 0, 250, 250);\r\nelem.closePath();\r\n			\r\n_start = (Math.PI * 3) / 2;\r\n			\r\nelem.beginPath();\r\nelem.strokeStyle = ''#fd797b'';\r\nelem.lineWidth = 20;\r\nelem.arc(120, 120, 100, _start, (percent * ((Math.PI * 2))) / 99 + _start);\r\nelem.stroke();\r\nelem.closePath();', 0, '', '2014-01-08 18:17:54'),
(117, 'SyDb', 'php', '<?php\r\n\r\n	namespace Sy;\r\n\r\n	class DB {\r\n\r\n		protected\r\n			$driver             = ''mysql'',\r\n			$connectionName     = ''default'',\r\n			$connectionId       = null,\r\n			$resultId           = null,\r\n			$query              = null,\r\n			$queries            = array(),\r\n			$lastQuery          = null,\r\n			$queryBuilder       = null;\r\n\r\n		static protected\r\n			$config             = array();\r\n\r\n		protected function __construct( $connect_name ) {\r\n			$this->connectionName   = $connect_name;\r\n			$this->driverName       = self::$config[$this->connectionName][''driver''];\r\n			$this->_loadQueryBuilder();\r\n		}\r\n\r\n		public function __call( $name, $args ) {\r\n\r\n			switch( $name ) {\r\n\r\n				case ''select'':\r\n				case ''update'':\r\n				case ''insert'':\r\n				case ''replace'':\r\n				case ''delete'':{\r\n\r\n					if( method_exists( $this->queryBuilder, $name ) ) {\r\n						return call_user_func_array( array( $this->queryBuilder, $name ), $args );\r\n					} else {\r\n						return false;\r\n					}\r\n\r\n					break;\r\n				}\r\n\r\n				case ''getObjectList'':\r\n				case ''getArrayList'':\r\n				case ''getNumRows'':{\r\n\r\n					$this->query( array_shift( $args ) );\r\n					$result = $this->getResult( $this->_query() );\r\n\r\n					if( is_object( $result ) && method_exists( $result, $name ) ) {\r\n						return call_user_func_array( array( $result, $name ), $args );\r\n					} else {\r\n						return $result;\r\n					}\r\n\r\n					break;\r\n				}\r\n\r\n				default:{\r\n					Error::db( ''Not defined method [''. $name .'']'' );\r\n					break;\r\n				}\r\n			}\r\n		}\r\n\r\n		public function query( $query ){\r\n			if( empty( $this->query ) ) {\r\n				$this->_setQuery( $query );\r\n			}\r\n			$queryResult = $this->_query();\r\n			return $this->getResult( $queryResult );\r\n		}\r\n\r\n        protected function getResult( $queryResult = false ) {\r\n	        $this->resultId = $queryResult;\r\n            if( $queryResult == false ) {\r\n                Error::db( ''Query [''. $this->query .''] Error[''. $this->_getError() .'']'' );\r\n            } else if ( is_bool( $queryResult ) && $queryResult == true ) {\r\n                return true;\r\n            } else {\r\n	            $resultClass = $this->_loadResult();\r\n                return new $resultClass( $this );\r\n            }\r\n        }\r\n\r\n		public function getConnectionId(){\r\n			return $this->connectionId;\r\n		}\r\n\r\n		public function getResultId(){\r\n			return $this->resultId;\r\n		}\r\n\r\n		private function _setQuery( $query = null ) {\r\n			if( empty( $query ) ) {\r\n				Error::db( ''Query is empty'' );\r\n			}\r\n			$this->query = $query;\r\n			return $this;\r\n		}\r\n\r\n		private function _loadQueryBuilder() {\r\n			$queryBuilderFile    = __DIR__ . DS . $this->driver . DS . ''query_builder_'' . $this->driver . ''.php'';\r\n			if( ! file_exists( $queryBuilderFile ) ) {\r\n				Error::db( ''Query builder not found [''. $queryBuilderFile .'']'' );\r\n			}\r\n			include_once $queryBuilderFile;\r\n\r\n			$queryBuilderClass   = __NAMESPACE__ . ''\\\\QueryBuilder_''. $this->driver;\r\n			if( ! class_exists( $queryBuilderClass ) ) {\r\n				Error::db( ''Query builder class not found [''. $queryBuilderClass .'']'' );\r\n			}\r\n			$this->queryBuilder = new $queryBuilderClass;\r\n		}\r\n\r\n        private function _loadResult() {\r\n            $result_file     = __DIR__ . DS . $this->driverName . DS .''db_result_''. $this->driverName .''.php'';\r\n            if( ! file_exists( $result_file ) ) {\r\n                Error::db( ''Result driver file not found [''. $this->driverName .'']'' );\r\n            }\r\n            include_once $result_file;\r\n\r\n            $result_class    = __NAMESPACE__ . ''\\\\DB_''. $this->driverName .''_Result'';\r\n            if( ! class_exists( $result_class ) ) {\r\n                Error::db( ''Result class not found [''. $result_class .'']'' );\r\n            }\r\n            return $result_class;\r\n        }\r\n\r\n		static protected function getInstance( $connect_name ){\r\n			if( empty( self::$config ) ) {\r\n				Error::db( ''Not specified wiring configuration'' );\r\n			}\r\n\r\n			static $instance;\r\n\r\n			if( ! is_array( $instance ) ) {\r\n				$instance = array();\r\n			}\r\n\r\n			if( ! isset( $instance[$connect_name] ) ) {\r\n				if( ! isset( self::$config[$connect_name][''driver''] ) || empty( self::$config[$connect_name][''driver''] ) ){\r\n					Error::db( ''Driver not detected'' );\r\n				}\r\n\r\n                $driver_file    = __DIR__ . DS . self::$config[$connect_name][''driver''] . DS . ''db_'' . self::$config[$connect_name][''driver''] . ''.php'';\r\n				if( ! file_exists( $driver_file ) ) {\r\n					Error::db( ''Driver file not found [Connection: ''. $connect_name .'']'' );\r\n				}\r\n				include_once $driver_file;\r\n\r\n				$driver_class   = __NAMESPACE__ . ''\\\\DB_'' . self::$config[$connect_name][''driver''];\r\n				if( ! class_exists( $driver_class ) ) {\r\n					Error::db( ''Driver class [''. $driver_class .''] not found [Connection: ''. $connect_name .'']'' );\r\n				}\r\n				$instance       = new $driver_class( $connect_name );\r\n			}\r\n\r\n			return $instance;\r\n		}\r\n\r\n		static public function setConnection( $config ) {\r\n			self::$config = $config;\r\n		}\r\n\r\n		static public function addConnection( $connect_name, array $config = array() ) {\r\n            if( ! isset( self::$config[$connect_name] ) ) {\r\n                self::$config[$connect_name] = $config;\r\n            } else {\r\n                Error::db( ''Connection [''. $connect_name .''] already exists'' );\r\n            }\r\n		}\r\n\r\n		static public function getConnect( $name ) {\r\n			if( isset( self::$config[$name] ) ) {\r\n				return self::getInstance( $name );\r\n			}\r\n			Error::db( ''Configuration [''. $name .''] not found'' );\r\n		}\r\n\r\n	}\r\n\r\n\r\n', 0, '', '2014-01-08 18:55:46'),
(118, 'No title', 'php', '<?php\r\n\r\n    if( Sy::app()->auth->get( ''id'' ) <= 0 ) {\r\n        Sy::app()->redirect( \\Sy\\URI::base() . ''login/'' );\r\n    }\r\n', 0, '', '2014-01-08 19:14:24'),
(119, 'аткое', 'php', 'Start [Time: 0 +0s | Memory: 241.05kB +241.05kB]\r\nAfter includes [Time: 0 +0s | Memory: 297.51kB +56.46kB]\r\nAfter connection to DB [Time: 0 +0s | Memory: 357.25kB +59.74kB]\r\nBefore creating module [Time: 0 +0s | Memory: 407.71kB +50.46kB]\r\nAfter creating module [Time: 0 +0s | Memory: 456.83kB +49.12kB]\r\n----- TRANS STAT ----- [Time: 0.81 +0.81s | Memory: 527.88kB +71.05kB]\r\nDATE RANGE [2014-01-02 - 2014-01-12] [Time: 0.81 +0s | Memory: 528.12kB +0.24000000000001kB]\r\nQUERY [2014-01-02] [Time: 2.64 +1.83s | Memory: 597.82kB +69.7kB]\r\nQUERY [2014-01-03] [Time: 4.05 +1.41s | Memory: 670.54kB +72.72kB]\r\nGET FROM CACHE [2014-01-04] [Time: 4.06 +0.0099999999999998s | Memory: 672.08kB +1.5400000000001kB]\r\nGET FROM CACHE [2014-01-05] [Time: 4.06 +0s | Memory: 668.64kB +-3.4400000000001kB]\r\nGET FROM CACHE [2014-01-06] [Time: 4.06 +0s | Memory: 664.56kB +-4.08kB]\r\nGET FROM CACHE [2014-01-07] [Time: 4.06 +0s | Memory: 671.71kB +7.1500000000001kB]\r\nGET FROM CACHE [2014-01-08] [Time: 4.06 +0s | Memory: 671.63kB +-0.080000000000041kB]\r\nGET FROM CACHE [2014-01-09] [Time: 4.06 +0s | Memory: 670.35kB +-1.28kB]\r\nQUERY [2014-01-10] [Time: 4.65 +0.59s | Memory: 670.55kB +0.19999999999993kB]\r\nGET FROM CACHE [2014-01-11] [Time: 4.65 +0s | Memory: 606.65kB +-63.9kB]\r\n----- END TRANS STAT ----- [Time: 4.65 +0s | Memory: 606.61kB +-0.039999999999964kB]\r\nAfter module run [Time: 4.65 +0s | Memory: 601.69kB +-4.92kB]\r\nProfiling finish [Time: 4.66 +0.0099999999999998s | Memory: 713.3kB +111.61kB]', 0, '', '2014-01-10 12:40:59'),
(120, 'profiler)', 'php', 'Start [Time: 0 0s | Memory: 238.09kB +238.09kB]\r\nAfter includes [Time: 0 0s | Memory: 294.55kB +56.46kB]\r\nAfter connection to DB [Time: 0 0s | Memory: 354.29kB +59.74kB]\r\nBefore creating module [Time: 0.01 +0.01s | Memory: 408.02kB +53.73kB]\r\nAfter creating module [Time: 0.01 0s | Memory: 457.31kB +49.29kB]\r\n----- TRANS STAT ----- [Time: 0.05 +0.04s | Memory: 525.3kB +67.99kB]\r\nDATE RANGE [2014-01-06 - 2014-01-12] [Time: 0.05 0s | Memory: 525.54kB +0.24kB]\r\nGET FROM CACHE [2014-01-06] [Time: 0.05 0s | Memory: 589.7kB +64.16kB]\r\nGET FROM CACHE [2014-01-07] [Time: 0.06 +0.01s | Memory: 660.31kB +70.61kB]\r\nGET FROM CACHE [2014-01-08] [Time: 0.06 0s | Memory: 659.58kB -0.73kB]\r\nGET FROM CACHE [2014-01-09] [Time: 0.06 0s | Memory: 661.02kB +1.44kB]\r\nQUERY [2014-01-10] [Time: 0.62 +0.56s | Memory: 661.25kB +0.23kB]\r\nGET FROM CACHE [2014-01-11] [Time: 0.62 0s | Memory: 597.11kB -64.14kB]\r\n----- END TRANS STAT ----- [Time: 0.62 0s | Memory: 596.94kB -0.17kB]\r\nAfter module run [Time: 0.63 +0.01s | Memory: 593.91kB -3.03kB]\r\nProfiling finish [Time: 0.64 +0.01s | Memory: 697.67kB +103.76kB]', 0, '', '2014-01-10 12:45:59'),
(121, 'No title', 'php', '123123', 0, '', '2014-01-13 12:17:31'),
(122, 'lol', 'php', 'Call Stack\r\n#	Time	Memory	Function	Location\r\n1	0.0002	129640	{main}( )	../index.php:0\r\n2	0.0016	183244	Sy\\Base::newWebApplication( )	../index.php:8\r\n3	0.0022	219828	Sy\\WebApplication->__construct( )	../base.php:25\r\n4	0.0036	263972	Sy\\WebApplication->addMainObjects( )	../web.php:24\r\n5	0.0042	281980	Sy\\View::getInstance( )	../web.php:169\r\n6	0.0046	287008	Sy\\WebApplication->Sy\\{closure}( )	../web.php:0\r\n7	0.0054	320088	Sy\\Error::fatal( )	../web.php:137\r\n8	0.0054	320176	Sy\\Error->raise( )	../error.php:33\r\n9	0.0054	320200	Sy\\ErrorHandler->message( )	../error.php:17\r\n10	0.0056	320860	Sy\\ErrorHandler->message( )	../error-handler.php:34\r\n11	0.0056	320924	Sy\\ErrorSystemFatal->_message( )	../error-handler.php:29\r\n12	0.0056	321056	Sy\\View::getInstance( )	../error-handler.php:135\r\n13	0.0056	321316	Sy\\Error::fatal( )	../view.php:57\r\n14	0.0056	321372	Sy\\Error->raise( )	../error.php:33\r\n15	0.0056	321372	Sy\\ErrorHandler->message( )	../error.php:17\r\n16	0.0057	321664	Sy\\ErrorHandler->message( )	../error-handler.php:34\r\n17	0.0057	321664	Sy\\ErrorSystemFatal->_message( )	../error-handler.php:29\r\n18	0.0057	321768	Sy\\View::getInstance( )	../error-handler.php:135\r\n19	0.0057	322028	Sy\\Error::fatal( )	../view.php:57\r\n20	0.0057	322084	Sy\\Error->raise( )	../error.php:33\r\n21	0.0057	322084	Sy\\ErrorHandler->message( )	../error.php:17\r\n22	0.0057	322376	Sy\\ErrorHandler->message( )	../error-handler.php:34\r\n23	0.0057	322376	Sy\\ErrorSystemFatal->_message( )	../error-handler.php:29\r\n24	0.0057	322480	Sy\\View::getInstance( )	../error-handler.php:135\r\n25	0.0058	322740	Sy\\Error::fatal( )	../view.php:57\r\n26	0.0058	322796	Sy\\Error->raise( )	../error.php:33\r\n27	0.0058	322796	Sy\\ErrorHandler->message( )	../error.php:17\r\n28	0.0058	323088	Sy\\ErrorHandler->message( )	../error-handler.php:34\r\n29	0.0058	323088	Sy\\ErrorSystemFatal->_message( )	../error-handler.php:29\r\n30	0.0058	323192	Sy\\View::getInstance( )	../error-handler.php:135\r\n31	0.0058	323452	Sy\\Error::fatal( )	../view.php:57\r\n32	0.0058	323508	Sy\\Error->raise( )	../error.php:33\r\n33	0.0058	323508	Sy\\ErrorHandler->message( )	../error.php:17\r\n34	0.0059	323800	Sy\\ErrorHandler->message( )	../error-handler.php:34\r\n35	0.0059	323800	Sy\\ErrorSystemFatal->_message( )	../error-handler.php:29\r\n36	0.0059	323904	Sy\\View::getInstance( )	../error-handler.php:135\r\n37	0.0059	324164	Sy\\Error::fatal( )	../view.php:57\r\n38	0.0059	324220	Sy\\Error->raise( )	../error.php:33\r\n39	0.0059	324220	Sy\\ErrorHandler->message( )	../error.php:17\r\n40	0.0060	324512	Sy\\ErrorHandler->message( )	../error-handler.php:34\r\n41	0.0060	324512	Sy\\ErrorSystemFatal->_message( )	../error-handler.php:29\r\n42	0.0060	324616	Sy\\View::getInstance( )	../error-handler.php:135\r\n43	0.0060	324876	Sy\\Error::fatal( )	../view.php:57\r\n44	0.0060	324932	Sy\\Error->raise( )	../error.php:33\r\n45	0.0060	324932	Sy\\ErrorHandler->message( )	../error.php:17\r\n46	0.0061	325224	Sy\\ErrorHandler->message( )	../error-handler.php:34\r\n47	0.0061	325224	Sy\\ErrorSystemFatal->_message( )	../error-handler.php:29\r\n48	0.0061	325328	Sy\\View::getInstance( )	../error-handler.php:135\r\n49	0.0061	325588	Sy\\Error::fatal( )	../view.php:57\r\n50	0.0061	325644	Sy\\Error->raise( )	../error.php:33\r\n51	0.0061	325644	Sy\\ErrorHandler->message( )	../error.php:17\r\n52	0.0062	325936	Sy\\ErrorHandler->message( )	../error-handler.php:34\r\n53	0.0062	325936	Sy\\ErrorSystemFatal->_message( )	../error-handler.php:29\r\n54	0.0062	326040	Sy\\View::getInstance( )	../error-handler.php:135\r\n55	0.0062	326300	Sy\\Error::fatal( )	../view.php:57\r\n56	0.0062	326356	Sy\\Error->raise( )	../error.php:33\r\n57	0.0062	326356	Sy\\ErrorHandler->message( )	../error.php:17\r\n58	0.0062	326648	Sy\\ErrorHandler->message( )	../error-handler.php:34\r\n59	0.0062	326648	Sy\\ErrorSystemFatal->_message( )	../error-handler.php:29\r\n60	0.0062	326752	Sy\\View::getInstance( )	../error-handler.php:135\r\n61	0.0062	327012	Sy\\Error::fatal( )	../view.php:57\r\n62	0.0062	327068	Sy\\Error->raise( )	../error.php:33\r\n63	0.0062	327068	Sy\\ErrorHandler->message( )	../error.php:17\r\n64	0.0063	327360	Sy\\ErrorHandler->message( )	../error-handler.php:34\r\n65	0.0063	327360	Sy\\ErrorSystemFatal->_message( )	../error-handler.php:29\r\n66	0.0063	327464	Sy\\View::getInstance( )	../error-handler.php:135\r\n67	0.0063	327724	Sy\\Error::fatal( )	../view.php:57\r\n68	0.0063	327780	Sy\\Error->raise( )	../error.php:33\r\n69	0.0063	327780	Sy\\ErrorHandler->message( )	../error.php:17\r\n70	0.0064	328072	Sy\\ErrorHandler->message( )	../error-handler.php:34\r\n71	0.0064	328072	Sy\\ErrorSystemFatal->_message( )	../error-handler.php:29\r\n72	0.0064	328176	Sy\\View::getInstance( )	../error-handler.php:135\r\n73	0.0064	328436	Sy\\Error::fatal( )	../view.php:57\r\n74	0.0064	328492	Sy\\Error->raise( )	../error.php:33\r\n75	0.0064	328492	Sy\\ErrorHandler->message( )	../error.php:17\r\n76	0.0065	328784	Sy\\ErrorHandler->message( )	../error-handler.php:34\r\n77	0.0065	328784	Sy\\ErrorSystemFatal->_message( )	../error-handler.php:29\r\n78	0.0065	328888	Sy\\View::getInstance( )	../error-handler.php:135\r\n79	0.0065	329148	Sy\\Error::fatal( )	../view.php:57\r\n80	0.0066	329208	Sy\\Error->raise( )	../error.php:33\r\n81	0.0066	329208	Sy\\ErrorHandler->message( )	../error.php:17\r\n82	0.0066	329500	Sy\\ErrorHandler->message( )	../error-handler.php:34\r\n83	0.0066	329500	Sy\\ErrorSystemFatal->_message( )	../error-handler.php:29\r\n84	0.0066	329604	Sy\\View::getInstance( )	../error-handler.php:135\r\n85	0.0066	329864	Sy\\Error::fatal( )	../view.php:57\r\n86	0.0066	329920	Sy\\Error->raise( )	../error.php:33\r\n87	0.0066	329920	Sy\\ErrorHandler->message( )	../error.php:17\r\n88	0.0067	330212	Sy\\ErrorHandler->message( )	../error-handler.php:34\r\n89	0.0067	330212	Sy\\ErrorSystemFatal->_message( )	../error-handler.php:29\r\n90	0.0067	330316	Sy\\View::getInstance( )	../error-handler.php:135\r\n91	0.0067	330576	Sy\\Error::fatal( )	../view.php:57\r\n92	0.0067	330632	Sy\\Error->raise( )	../error.php:33\r\n93	0.0067	330632	Sy\\ErrorHandler->message( )	../error.php:17\r\n94	0.0068	330924	Sy\\ErrorHandler->message( )	../error-handler.php:34\r\n95	0.0068	330924	Sy\\ErrorSystemFatal->_message( )	../error-handler.php:29\r\n96	0.0068	331028	Sy\\View::getInstance( )	../error-handler.php:135\r\n97	0.0068	331288	Sy\\Error::fatal( )	../view.php:57\r\n98	0.0068	331344	Sy\\Error->raise( )	../error.php:33\r\n99	0.0068	331344	Sy\\ErrorHandler->message( )	../error.php:17', 0, '', '2014-01-13 13:27:26'),
(123, 'mytop', 'php', '<?php\r\n\r\n	session_name( ''mytop'' );\r\n\r\n	session_id() || session_start();\r\n\r\n	$isLogged = ( isset( $_SESSION[''logged''] ) );\r\n\r\n	include_once ''./../global_config.php'';\r\n	$config = globalConfig( ''wl'' );\r\n\r\n	$mysqli = new MySQLi( $config[''db_host''], $config[''db_user''], $config[''db_password''], $config[''db_name''] );\r\n\r\n	if( isset( $_GET[''kill''] ) && is_numeric( $_GET[''kill''] ) ) {\r\n		$mysqli->query( ''KILL ''. preg_replace( ''/[^\\d]+/'', '''', $_GET[''kill''] ) );\r\n		header( ''Location: ./mytop.php'' ); die;\r\n	}\r\n\r\n	$result = $mysqli->query( ''SHOW FULL PROCESSLIST;'' );\r\n\r\n	$rows   = [];\r\n\r\n	while( $row = $result->fetch_array( MYSQL_ASSOC ) ) {\r\n		if( isset( $row[''Command''] ) && $row[''Command''] == ''Query'' && $row[''Time''] >= 1 ) {\r\n			$rows[] = $row;\r\n		}\r\n	}\r\n\r\n	if( $isLogged == true ):\r\n\r\n?>\r\n<html>\r\n	<head>\r\n		<title>\r\n			MyTOP PHP v .1\r\n		</title>\r\n		<style>\r\n			table{\r\n				width: 100%;\r\n			}\r\n			td{\r\n				border-right: 1px solid rgb(216, 216, 216);\r\n				font-family: courier new;\r\n				font-size: 11px;\r\n				padding: 2px 5px;\r\n				text-align: left;\r\n			}\r\n			.pre{\r\n				text-align: left;\r\n				border: 1px solid #AFAFAF;\r\n				background: #EEE;\r\n				padding: 7px 2px;\r\n				margin: 8px;\r\n			}\r\n		</style>\r\n	</head>\r\n	<body>\r\n		<table>\r\n			<tr>\r\n				<td style="width: 9%;">\r\n					Time (sec)\r\n				</td>\r\n				<td style="width: 80%;">\r\n					Query\r\n				</td>\r\n				<td style="width: 9%;">\r\n					Action\r\n				</td>\r\n			</tr>\r\n			<?php if( ! empty( $rows ) ) : ?>\r\n				<?php foreach( $rows as $row ): ?>\r\n					<tr>\r\n						<td>\r\n							<?php print $row[''Time'']; ?>\r\n						</td>\r\n						<td class="pre">\r\n							<?php print trim( $row[''Info''] ); ?>\r\n						</td>\r\n						<td>\r\n							<a href="/mytop.php?kill=<?php print $row[''Id'']; ?>">\r\n								Kill #<?php print $row[''Id'']; ?>\r\n							</a>\r\n						</td>\r\n					</tr>\r\n				<?php endforeach; ?>\r\n			<?php endif; ?>\r\n		</table>\r\n	</body>\r\n</html>\r\n<?php\r\n	else:\r\n\r\n		$login      = ''login'';\r\n		$passwd     = ''passwd'';\r\n\r\n		if( isset( $_POST[''login''] ) ) {\r\n			if( $_POST[''login''] == $login && $_POST[''passwd''] == $passwd ) {\r\n				$_SESSION[''logged''] = true;\r\n				header( ''Location: ./mytop.php'' ); die;\r\n			} else {\r\n				die( ''Login or password incorrect'' );\r\n			}\r\n		}\r\n\r\n?>\r\n<html>\r\n	<head>\r\n		<title>\r\n			MyTOP PHP v .1\r\n		</title>\r\n		<style>\r\n			table{\r\n				width: 30%;\r\n				display: block;\r\n				margin: 10px auto;\r\n				border: 1px solid rgb(216, 216, 216);\r\n			}\r\n			td{\r\n\r\n				font-family: courier new;\r\n				font-size: 11px;\r\n				padding: 2px 5px;\r\n				text-align: center;\r\n			}\r\n\r\n		</style>\r\n	</head>\r\n	<body>\r\n		<form action="./mytop.php" method="post">\r\n			<table>\r\n				<tr>\r\n					<td>Логин</td>\r\n					<td>\r\n						<input type="text" name="login" />\r\n					</td>\r\n				</tr>\r\n				<tr>\r\n					<td>Пароль</td>\r\n					<td>\r\n						<input type="password" name="passwd" />\r\n					</td>\r\n				</tr>\r\n				<tr>\r\n					<td colspan="2" style="text-align: center;">\r\n						<input type="submit" value="Login" />\r\n					</td>\r\n				</tr>\r\n			</table>\r\n		</form>\r\n	</body>\r\n</html>\r\n<?php endif; ?>', 0, '', '2014-01-15 15:20:51');
INSERT INTO `codes` (`id`, `title`, `language`, `source`, `author_id`, `password`, `added_at`) VALUES
(124, 'C36', 'php', '<?php\r\n\r\n	// Ivan Gontarenko\r\n\r\n	class C36{\r\n\r\n		private $_list = array(),\r\n				$_size = 0;\r\n\r\n		public function __construct(){\r\n			$this->_list = array_merge( array(-1), range( ''a'', ''z'' ), range( ''0'', ''9'' ) );\r\n			unset( $this->_list[0] );\r\n			$this->_size = count( $this->_list );\r\n		}\r\n\r\n		public function encode( $int_value = 0 ){\r\n\r\n			if( ! is_numeric( $int_value ) || 0 >= $int_value ){\r\n				return null;\r\n			}\r\n\r\n			$l = 1;\r\n			$r = '''';\r\n\r\n			$tmp_value = $int_value;\r\n			do{\r\n				$tmp_value = bcdiv( $tmp_value, $this->_size );\r\n				$l++;\r\n			}while( $tmp_value > $this->_size );\r\n\r\n			for( $j = $l; $j > 0; $j-- ){				\r\n				$p = ( $j == 1 ) ? 1 : 0;\r\n				$s = bcpow( $this->_size, $j - 1 );\r\n				while( $int_value > $s && ( ( $j - 2 ) <> 1 ? true : ( ( $int_value - $s ) > $this->_size ) ) ){\r\n					if( $int_value - $s < bcpow( $this->_size, $j - 2 ) ) break;\r\n					$int_value = bcsub( $int_value, $s ); $p++;\r\n				}\r\n				$r .= $this->_list[$p];				\r\n			}\r\n			\r\n			return $r;\r\n\r\n		}\r\n\r\n		public function decode( $str_value = '''' ){\r\n\r\n			$str_value = (string) $str_value;\r\n\r\n			if( ! is_string( $str_value ) ){\r\n				return null;\r\n			}\r\n\r\n			$l = strlen( $str_value );\r\n			$r = ''0'';\r\n\r\n			for( $i = $l-1; $i >= 0; $i-- ){\r\n				$c      = $str_value[$i];\r\n				$k 	    = array_search( $c, $this->_list );\r\n				if( $l - 1 == $i ){\r\n					$r = bcadd( $r, $k );\r\n				}else{\r\n					$r = bcadd( $r, bcmul( bcpow( $this->_size, ( $l - 1 ) - $i ), $k ) );\r\n				}\r\n			}\r\n			\r\n			return $r;\r\n\r\n		}\r\n\r\n	}', 0, '', '2014-01-16 16:58:39'),
(125, 'No title', 'php', 'function rusDate($string) {\r\n	return Str::get($string)->getRusDate();\r\n}\r\n\r\nfunction translit($string) {\r\n	return Str::get($string)->truncate(60)->translitURL();\r\n}\r\n\r\n$twig->addFilter(''rusDate'', new Twig_Filter_Function(''rusDate''));\r\n$twig->addFilter(''translit'', new Twig_Filter_Function(''translit''));', 0, '', '2014-01-17 16:06:46'),
(126, 'twig', 'php', '$twig->addFilter( ''rusDate'', new Twig_Filter_Function( function(){\r\n	return Str::get($string)->getRusDate();\r\n} ) );', 0, '', '2014-01-17 16:09:13'),
(127, 'Sy-Frm (must have)', 'php', '// DB\r\n$result = Sy::app()->db->query( ''query...'' );\r\n$rows = $result->getObjectList();\r\n', 0, '', '2014-01-24 13:54:09'),
(128, 'Sy-Frm miniDoc part-1', 'php', '// db\r\n$db 	= Sy::app()->db;\r\n$dbDev	= $db->getConnection( ''remote_db_connect'' );\r\n\r\n$result = $db->query( ''query...'' );\r\n\r\n$rows 	= $result->getObjectList(); \r\n\r\n$db->select( ''users'', array( ''id'' => 9081 ) );\r\n$db->insert( ''users'', array( \r\n	''name''	=> ''John Smith'',\r\n	''email''	=> ''john.smith@mail.com''\r\n ) );\r\n\r\n$db->lastInsertId();\r\n\r\n\r\n// in dev\r\n// sy-frm mvc\r\n\r\n// model\r\n\r\nuse \\Sy\\Validator as Valid;\r\nuse \\Sy\\Validator\\Rule as Rule;\r\n\r\nclass UsersModel extends \\Sy\\Model {\r\n	\r\n	public function getUserById( $user_id = 0 ) {\r\n		if( $user_id > 0 ) {\r\n			$user = $this->db->getObjectRow( ''SELECT * FROM `users` WHERE `id` = ''. $this->db->escape( $user_id ) );\r\n			// or\r\n			$user = $this->db->select( ''users'', array( ''id'' => $user_id ) );\r\n			// or\r\n			$userTable 	= $this->getTable( ''users'' );\r\n			$user 		= $userTable->get( $user_id );\r\n			// or\r\n			$user 		= $userTable->get( array( \r\n				''id'' 		=> $user_id,\r\n				''status''	=> ''active'',\r\n				''type''		=> ''admin''\r\n			) );\r\n			return $user;\r\n		}\r\n		return false;\r\n		// or\r\n		Error::fatal( ''User #''. $user_id .'' not found'' );\r\n		// or\r\n		new \\Exception( ''User #''. $user_id .'' not found'' );\r\n	}\r\n\r\n	public function saveUser( array $user_data = array() ) {\r\n		\r\n		Sy::app()->load( ''validator'' );\r\n\r\n		$validator = new \\Sy\\Valid;\r\n\r\n		if( ! $validator->checkToken() ) {\r\n			Error::warning( ''Form data must have corrent SF_TOKEN'' );\r\n			return false;\r\n		}\r\n\r\n		$validator->attachData( $user_data );\r\n		$validator->addRule( \r\n			new Rule( ''user_name'', \r\n				array( ''strlen'', ''regexp'' ), \r\n				array( ''5-32'', ''/[-_\\.\\w]+/'' ), \r\n				array( ''Name must len from 5 to 32 symbols'' ) \r\n			) \r\n		);\r\n		$validator->addRule( new Rule( ''email'', ''user_email'', false, ''Email is incorrect'' ) );\r\n		$validator->addRule( new Rule( ''password'', ''eq'', ''confirm_password'', ''Passwords not eq'' ) );\r\n		$validator->filterFields( $user_data );\r\n		\r\n		$validator->run();\r\n\r\n		if( $validator->isError() ) {\r\n			Error::warning( ''Data Errors:<br />''. join( ''<br />'', $validator->getErrors() ) );\r\n			return false;\r\n		}\r\n\r\n		$table = $this->getTable( ''users'' );\r\n\r\n		$table->bind( $user_data );\r\n\r\n		if( ! $table->save() ) {\r\n			Error::warning( ''Saving was fail:<br />''. join( ''<br />'', $table->getErrors() ) );\r\n			return false;\r\n		}\r\n\r\n		return true;		\r\n\r\n	}\r\n\r\n}\r\n\r\n// controller\r\n\r\nclass UsersController extends \\Sy\\Controller {\r\n	\r\n	public function userPageAction( $user_id ){\r\n		\r\n		$model 	= $this->getModel( ''users'' );\r\n		$user	= $model->getUserById( $user_id );\r\n\r\n		if( Request::isPost() ) {\r\n			$post = Request::post( ''user_data'', array() );\r\n			$model->saveUser( $post );\r\n			$this->redirect( ''/user/profile/''. $user_id );\r\n		}\r\n\r\n		Sy::app()->view->setHandler( ''twig'' );\r\n		$twig = Sy::app()->view->getHandler();		\r\n\r\n		$twig->addFilter( ''dateFormat'', new Twig_Filter_Function( function( $value ) {\r\n			return date( ''d M, Y H:i:s'', strtotime( $value ) );\r\n		} ) );\r\n\r\n		return $this->render( ''user/profile'', array(\r\n			''user_data''	=> $user		\r\n		) );\r\n\r\n	}\r\n\r\n}', 0, '', '2014-01-24 15:10:35'),
(129, 'Sy-Frm miniDoc work with cache', 'php', '<?php\r\n\r\n	// cache\r\n\r\n	$cache 		= \\Sy\\CacheFactory::instance( ''apc'' /* ''file'', ''db'', ''memcached'' etc */ );\r\n	$cacheKey 	= $cache->createKey( ''stat/referrer/2014_01_24_day'' );\r\n	if( $cache->check( $cacheKey ) ) {\r\n		$data = $cache->get();\r\n	} else {\r\n		$cache->set( $cacheKey, $data );\r\n	}\r\n	$cache->remove( $cacheKey );', 0, '', '2014-01-24 16:48:38'),
(130, 'Sy-Frm Docs / routing setting', 'html', '<?xml version="1.0" ?>\r\n<root>\r\n\r\n	<routes>\r\n		\r\n		<route match="user" controller="user" action="my_page">\r\n\r\n			<!-- Auth page -->\r\n			<route match="auth" controller="user" action="auth" />\r\n\r\n			<!-- Logout page with 302 redirect -->\r\n			<route match="logout" controller="user" action="logout" />\r\n\r\n			<!-- User profile page -->\r\n			<route match="my" controller="user" action="profile" />\r\n\r\n			<!-- User list page -->\r\n			<route match="all" controller="user" action="user_list" />\r\n\r\n			<!-- User profile -->\r\n\r\n			<!-- Example -->\r\n			<!-- http://site.com/user/profile/ -> Error 404 -->\r\n			<route match="profile" controller="system" action="error404">\r\n\r\n				<!-- Example -->\r\n				<!-- http://site.com/user/profile/9081/ -> UserController::user_profileAction( $user_id ); -->\r\n				<route match="{user_id|num}" controller="user" action="user_profile">\r\n\r\n					<!-- Example -->\r\n					<!-- http://site.com/user/profile/9081/comments/ -> CommentsController::user_commentsAction( $user_id ); -->\r\n					<route match="comments" controller="comments" action="user_comments">\r\n\r\n						<!-- Example -->\r\n						<!-- http://site.com/user/profile/9081/comments/ -> CommentsController::comment_itemAction( $user_id, $comment_id ); -->\r\n						<route match="{comment_id|num}" controller="comments" action="comment_item">\r\n							\r\n							<!-- Example -->\r\n							<!-- http://site.com/user/profile/9081/comments/rate_up/ -> CommentsController::rate_upAction( $user_id, $comment_id ); -->\r\n							<route match="rate_up" controller="comments" action="rate_up" />\r\n\r\n							<!-- Example -->\r\n							<!-- http://site.com/user/profile/9081/comments/rate_down/ -> CommentsController::rate_downAction( $user_id, $comment_id ); -->\r\n							<route match="rate_down" controller="comments" action="rate_down" />\r\n						</route>\r\n					</route>\r\n				</route>\r\n			</route>\r\n\r\n		</route>\r\n\r\n		<route match="system" controller="system" action="error404">\r\n		<route match="settings" controller="system" action="settings" />\r\n		</route>\r\n\r\n	</routes>\r\n	\r\n	<system>\r\n		<route match="index" controller="system" action="index" />\r\n		<route match="error404" controller="system" action="error404" />\r\n	</system>\r\n	\r\n</root>', 0, '', '2014-01-24 17:34:59'),
(131, 'My app', 'php', '<script src="app/vendor/jquery.min.js"></script>\r\n    <script src="app/vendor/jquery-ui.min.js"></script>\r\n    <script src="app/vendor/angular.min.js"></script>\r\n    <script src="app/vendor/angular.slider.js"></script>\r\n    <script src="app/vendor/md5.min.js"></script>\r\n    \r\n    <script src="app/app.js"></script>\r\n    \r\n    <script src="app/services/audio.service.js"></script>\r\n    <script src="app/services/lastfm.api.service.js"></script>\r\n    <script src="app/services/vk.api.service.js"></script>\r\n    \r\n    <script src="app/directives/autoscrolling.directive.js"></script>\r\n    <script src="app/directives/image.directive.js"></script>\r\n    <script src="app/directives/scroll.directive.js"></script>\r\n    \r\n    <script src="app/filters/secToDec.filter.js"></script>\r\n    \r\n    <script src="app/controllers/window.controller.js"></script>\r\n    <script src="app/controllers/app.controller.js"></script>', 0, '', '2014-01-25 19:59:45'),
(132, 'Sy-Frm Docs / db', 'php', '<?php\r\n\r\n	// Db Object\r\n	\r\n	DbFactory::attachDbConfig( Sy::app()->config->path( ''base/db/connections'' ) );\r\n	$db_dev = DbFactory::getInstance( ''dev_connection'' );\r\n	\r\n	$db_dev->query( ''query...'' );\r\n	\r\n	$db 	= $db_dev->getConnection( ''production'' );\r\n	$result = $db->query( ''query...'' );\r\n	// bind params\r\n	$result = $db->query( ''SELECT * FROM `table_name` WHERE `id` = ?d AND `name` = ?s AND ( `group` IN ?l OR `status` = ?b )'', \r\n	array( 9081, ''test'', array( 1, 2, 3 ), true ) );\r\n	// fetching data\r\n	$value 	= $result->getValue();\r\n	$rows	= $result->getAssocRows();\r\n	$rows	= $result->getObject();\r\n	$rows	= $result->getObjectList();\r\n	$rows	= $result->getArray();\r\n	$rows	= $result->getArrayList();', 0, '', '2014-01-27 11:02:55'),
(133, 'Sy-Frm Docs / request array', 'php', '<?php\r\n\r\n	$request 	= Sy::app()->request;\r\n	$postData	= $request->post( ''user_data'', array() );\r\n	$getData	= $request->get( ''user_data'', array() );\r\n	$cookieData	= $request->cookie( ''user_data'', array() );\r\n\r\n	$userData 	= ArrayHelper::merge( $postData, $getData );\r\n	\r\n	$tmpData 	= array(\r\n		''user_name''	=> ArrayHelper::custom( ''name'', $userData, ''Default Name'' ),\r\n		''user_email''	=> ArrayHelper::custom( ''email'', $userData, ''default@mail.com'' ),\r\n		''password''	=> ArrayHelper::custom( ''password'', $userData, ''default_qwerty'' )	\r\n	);', 0, '', '2014-01-27 12:04:56'),
(134, 'Sy-Frm Docs / view', 'php', '<?php\r\n	\r\n	class ArticlesController extends \\Sy\\Controller {\r\n		\r\n		public function viewArticleAction( $article_id ) {\r\n				\r\n			$model 		= $this->getModel( ''article'' );\r\n			$article 	= $model->getArticleById( $article_id );\r\n			\r\n			if( Sy::app()->request->get( ''test_mode'', -1 ) > 0 ) {\r\n				\r\n				$view       = new View( ''../pages'', ''html'' );\r\n				// or\r\n				$view       = Sy::app()->view;\r\n\r\n				$view->setHandler( ViewFactory::getHandler( ''smarty'' ) );\r\n				$view->setStack( ViewFactory::getStack( ''module'' ) );\r\n\r\n				$view->assign( ''item'', $article );\r\n\r\n				$output = $view->render( ''news/item'', array(\r\n					''errors''    => $validator->getErrors()\r\n				) );\r\n\r\n			} else {\r\n				Sy::app()->view->setHandler( ''smarty'' );			\r\n				return $this->render( ''news/item'', array(\r\n					''item''	=> $article		\r\n				) );			\r\n			}\r\n\r\n			return $output;\r\n	\r\n		}\r\n	\r\n	}', 0, '', '2014-01-27 12:29:12'),
(135, 'Sy-Frm Docs / action object', 'php', '<?php\r\n	\r\n	class ArticlesController extends \\Sy\\Controller {\r\n		\r\n		public function viewArticleAction( $article_id ) {\r\n				\r\n			$action 	= Sy::app()->action;\r\n			\r\n			$name 		= $action->getControllerName(); // Articles\r\n			$actionName 	= $action->getActionName(); // viewArticle\r\n	\r\n		}\r\n	\r\n	}', 0, '', '2014-01-27 13:18:05'),
(136, 'Sy-Frm Docs / table fields generator', 'php', '<?php\r\n\r\n	class Table {\r\n		\r\n		private function _loadTableFields( $table_name ) {\r\n			\r\n			$cache 	= CacheFactory::instance( ''files'' );\r\n			$key	= ''system/db/tables/''. $table_name;\r\n			\r\n			if( $cache->check( $key ) == false ) {\r\n				import( ''datebase.table:table_generator'' );\r\n				$fields = \\Sy\\DB\\TableGenerator::generateFields( $table_name );\r\n				$cache->set( $key, $fields );\r\n			} else {\r\n				$fields = $cache->get( $key );\r\n			}\r\n\r\n			$this->_fields = $fields;\r\n\r\n		}\r\n\r\n	}', 0, '', '2014-01-27 15:05:22'),
(137, 'Sy-Frm Docs / admin page', 'php', '<?php\r\n	\r\n	class AdminController extends \\Sy\\Controller {\r\n		\r\n		public function dbStatusAction() {\r\n				\r\n			$this->render( ''admin/db_status'', array(\r\n				''rows''	=> Sy::app()->db->query( ''SHOW STATUS'' )->getAssocArray()			\r\n			) );\r\n	\r\n		}\r\n	\r\n	}', 0, '', '2014-01-27 16:12:01'),
(138, 'Sy-Frm Docs / admin page', 'php', '<?php\r\n	\r\n	class AdminController extends \\Sy\\Controller {\r\n\r\n		public function __construct() {\r\n			parent::_construct();\r\n			if( Sy::app()->action->getActionName() != ''login'' && Sy::app()->auth->get( ''group'' ) != -1 ) {\r\n				\\Error::notify( ''You must be authoraized'' );		\r\n				Sy::app()->redirect( ''/admin/login/'' );	\r\n			}\r\n		}\r\n		\r\n		public function dbStatusAction() {\r\n				\r\n			$this->render( ''admin/db_status'', array(\r\n				''rows''	=> Sy::app()->db->query( ''SHOW STATUS'' )->getAssocArray()			\r\n			) );\r\n	\r\n		}\r\n\r\n		public function loginAction(){\r\n			Sy::app()->response->setLayout( ''auth_page'' );\r\n			return $this->render( ''admin/login'' );\r\n		}\r\n	\r\n	}', 0, '', '2014-01-27 16:18:35'),
(139, 'Sy-Frm Docs / render block (calling custom controller action)', 'php', '<?php\r\n	\r\n	class AdminController extends \\Sy\\Controller {\r\n\r\n		public function __construct() {\r\n			parent::_construct();\r\n			if( Sy::app()->action->getActionName() != ''login'' && Sy::app()->auth->get( ''group'' ) != -1 ) {\r\n				\\Error::notify( ''You must be authoraized'' );		\r\n				Sy::app()->redirect( ''/admin/login/'' );	\r\n			}\r\n		}\r\n		\r\n		public function dbStatusAction() {\r\n			\r\n			$this->setHandler( ''twig'' );\r\n			$twig = $this->getHandler();\r\n\r\n			$twig->addFilter( ''render_block'', new Twig_Filter_Function( function( $route ) {\r\n				$requestClone            = clone Sy::app()->request;\r\n				$requestClone->get[''r'']  = $route;\r\n				try {\r\n					$output = Sy::app()->action->execute( $requestClone );				\r\n				} catch( Exception $e ) {\r\n					$output = $e->getMessage();\r\n				}\r\n				print $output;\r\n			} ) );\r\n\r\n			$this->render( ''admin/db_status'', array(\r\n				''rows''	=> Sy::app()->db->query( ''SHOW STATUS'' )->getAssocArray()			\r\n			) );\r\n	\r\n		}\r\n\r\n		public function loginAction(){\r\n			Sy::app()->response->setLayout( ''auth_page'' );\r\n			return $this->render( ''admin/login'' );\r\n		}\r\n	\r\n	}\r\n', 0, '', '2014-01-27 18:17:13'),
(140, 'No title', 'js', 'Player.controller(''PlayerCtrl'', function($scope, $rootScope, VK, LastFM, audio, sortage, $http){\r\n	\r\n	// Загрузка всех аудиозаписей ВК при инициализации плеера\r\n	// Устанавливаем глобальный список треков соответственно выборке\r\n	$scope.MyPlaylistInit = function() {\r\n		$scope.album_id 		= 0;\r\n		$scope.is_my_playlist 	= true;\r\n		\r\n		VK.get(50, 0, $scope.album_id, function(result) {\r\n			$scope.playlistTracks 	= result.response;\r\n			$scope.tracks			= result.response;\r\n		});\r\n	}\r\n});', 0, '', '2014-01-30 18:17:23'),
(141, 'cMusic Player 1.4 начало...', 'js', 'Player.controller(''PlayerCtrl'', function($scope, $rootScope, $filter, VK, LastFM, audio, sortage){\r\n	/**\r\n	 * cMusic Player ver 1.4\r\n	 * Глобальный контроллер приложения\r\n	 * \r\n	 * Не пытайтесь тут что-то понять, \r\n	 * я сам не понимаю как это все работает\r\n	 *\r\n	 * @author Alex Hyrenko\r\n	 * @email alex.hyrenko@gmai.com\r\n	 * @ver 1.4 \r\n	 */\r\n	 \r\n	// Устанавливаем плеер по умолчанию\r\n	audio.setCurrentPlayer(''my-player'');\r\n	\r\n	// Установка громкости при инициализации\r\n	sortage.get(''volume'', function(obj) {\r\n		$scope.volume =  obj.volume || 0.8;\r\n	});\r\n	\r\n	// Загрузка всех аудиозаписей ВК при инициализации плеера\r\n	// Устанавливаем глобальный список треков соответственно выборке\r\n	// Загрузка плейлистов ВК пользователя \r\n	$scope.MyPlaylistInit = function() {\r\n		$scope.load_palylist	= true;\r\n		$scope.album_id 		= 0;\r\n		$scope.is_my_playlist 	= true;\r\n		\r\n		$scope.playlistTracks	= [];\r\n		$scope.tracks			= [];\r\n		$scope.playlists		= [];\r\n		\r\n		VK.get(50, 0, $scope.album_id, function(result) {\r\n			angular.forEach(result.response, function(item) {\r\n				item.duration = $filter(''secToDec'')(item.duration);\r\n				$scope.playlistTracks.push(item);\r\n			});\r\n			\r\n			$scope.load_palylist	= false;\r\n			$scope.tracks 			= $scope.playlistTracks;\r\n			\r\n			VK.getAlbums(30, 0, function(result) {\r\n				$scope.playlists = result.response.splice(1, 30);\r\n			});\r\n		});\r\n	}\r\n	\r\n	// Добавление аудиозаписей при скроле плейлиста\r\n	var is_load = true;\r\n	$scope.loadMoreTracksMyPlaylist = function() {\r\n		if(is_load) {\r\n			is_load = false;\r\n			\r\n			VK.get(30, $scope.playlistTracks.length, $scope.album_id, function(result) {\r\n				console.log($scope.playlistTracks.length);\r\n				angular.forEach(result.response, function(item) {\r\n					item.duration = $filter(''secToDec'')(item.duration);\r\n					$scope.playlistTracks.push(item);\r\n				});\r\n				\r\n				is_load = true;\r\n			});\r\n		}\r\n	}\r\n	\r\n	// Следим за изменением плейлиста ВК\r\n	$scope.$watch(''album_id'', function(new_playlist, old_playlist) {\r\n		console.log(new_playlist, old_playlist);\r\n		if(new_playlist != old_playlist) {\r\n			$scope.load_palylist	= true;\r\n			$scope.playlistTracks	= [];\r\n			\r\n			VK.get(50, 0, $scope.album_id, function(result) {\r\n				angular.forEach(result.response, function(item) {\r\n					item.duration = $filter(''secToDec'')(item.duration);\r\n					$scope.playlistTracks.push(item);\r\n				});\r\n				\r\n				$scope.load_palylist	= false;\r\n			});\r\n		}\r\n	});\r\n	\r\n	// Устанавливаем плейлист по умолчанию\r\n	$scope.setDefaultAlbum = function() {\r\n		$scope.album_id = 0;\r\n	}\r\n	\r\n	\r\n	/**\r\n	 * Управление глобальными функциями плеера\r\n	 */\r\n	\r\n	// Установка громкости\r\n	$scope.volumeChange = function(val){\r\n		audio.volume(val);\r\n		$rootScope.volume = val;\r\n	}\r\n	\r\n	// Воспроизведение/пауза текущего трека\r\n	// type param\r\n	// 		1 - воспроизведение из плейлиста\r\n	// 		2 - воспроизведение из результатов поиска\r\n	// 		3 - воспроизведение из дискографии\r\n	$scope.Play = function(track, index, type) {\r\n		\r\n	}\r\n});', 0, '', '2014-01-31 12:34:49'),
(142, 'No title', 'js', 'Player.controller(''PlayerCtrl'', function($scope, $rootScope, $filter, VK, LastFM, audio, sortage){\r\n	/**\r\n	 * cMusic Player ver 1.4\r\n	 * Глобальный контроллер приложения\r\n	 * \r\n	 * Не пытайтесь тут что-то понять, \r\n	 * я сам не понимаю как это все работает\r\n	 *\r\n	 * @author Alex Hyrenko\r\n	 * @email alex.hyrenko@gmail.com\r\n	 * @ver 1.4 \r\n	 */\r\n	 \r\n	// Устанавливаем плеер по умолчанию\r\n	audio.setCurrentPlayer(''my-player'');\r\n	\r\n	// Проверяем, авторизирован ли пользователь на Last FM\r\n	if(LastFM.user.isAuth()) {\r\n		$scope.is_lastfm_auth = true;\r\n	}\r\n	\r\n	// Установка громкости при инициализации\r\n	sortage.get(''volume'', function(obj) {\r\n		$scope.volume =  obj.volume || 0.8;\r\n	});\r\n	\r\n	// Загрузка всех аудиозаписей ВК при инициализации плеера\r\n	// Устанавливаем глобальный список треков соответственно выборке\r\n	// Загрузка плейлистов ВК пользователя \r\n	$scope.MyPlaylistInit = function() {\r\n		$scope.load_palylist	= true;\r\n		$scope.album_id 		= 0;\r\n		$scope.is_my_playlist 	= true;\r\n		\r\n		$scope.playlistTracks	= [];\r\n		$scope.tracks			= [];\r\n		$scope.playlists		= [];\r\n		\r\n		VK.get(50, 0, $scope.album_id, function(result) {\r\n			angular.forEach(result.response, function(item) {\r\n				item.duration = $filter(''secToDec'')(item.duration);\r\n				$scope.playlistTracks.push(item);\r\n			});\r\n			\r\n			$scope.load_palylist	= false;\r\n			$scope.tracks 			= $scope.playlistTracks;\r\n			\r\n			VK.getAlbums(30, 0, function(result) {\r\n				$scope.playlists = result.response.splice(1, 30);\r\n			});\r\n		});\r\n	}\r\n	\r\n	// Добавление аудиозаписей при скроле плейлиста\r\n	var is_load = true;\r\n	$scope.loadMoreTracksMyPlaylist = function() {\r\n		if(is_load) {\r\n			is_load = false;\r\n			\r\n			VK.get(30, $scope.playlistTracks.length, $scope.album_id, function(result) {\r\n				console.log($scope.playlistTracks.length);\r\n				angular.forEach(result.response, function(item) {\r\n					item.duration = $filter(''secToDec'')(item.duration);\r\n					$scope.playlistTracks.push(item);\r\n				});\r\n				\r\n				is_load = true;\r\n			});\r\n		}\r\n	}\r\n	\r\n	// Следим за изменением плейлиста ВК\r\n	$scope.$watch(''album_id'', function(new_playlist, old_playlist) {\r\n		if(new_playlist != old_playlist) {\r\n			$scope.load_palylist	= true;\r\n			$scope.playlistTracks	= [];\r\n			\r\n			VK.get(50, 0, $scope.album_id, function(result) {\r\n				angular.forEach(result.response, function(item) {\r\n					item.duration = $filter(''secToDec'')(item.duration);\r\n					$scope.playlistTracks.push(item);\r\n				});\r\n				\r\n				$scope.load_palylist	= false;\r\n			});\r\n		}\r\n	});\r\n	\r\n	// Устанавливаем плейлист по умолчанию\r\n	$scope.setDefaultAlbum = function() {\r\n		$scope.album_id = 0;\r\n	}\r\n	\r\n	\r\n	/**\r\n	 * Управление глобальными функциями плеера\r\n	 */\r\n	\r\n	// Установка громкости\r\n	$scope.volumeChange = function(val){\r\n		audio.volume(val);\r\n		$rootScope.volume = val;\r\n	}\r\n	\r\n	// Воспроизводится ли текущий трек\r\n	$scope.isCurrentTrack = function(track) {\r\n		return $scope.currentTrack === track;\r\n	}\r\n	\r\n	// Воспроизведение/пауза текущего трека\r\n	// type param\r\n	// 		1 - воспроизведение из плейлиста\r\n	// 		2 - воспроизведение из результатов поиска\r\n	// 		3 - воспроизведение из дискографии\r\n	$scope.Play = function(track, index, type) {\r\n		if($scope.isCurrentTrack(track)) {\r\n			audio.isPause() ? audio.play() : audio.pause();\r\n		}\r\n		else {\r\n			if(audio.getDuration() > 0) {\r\n				$scope.tracks[$scope.current_index].duration = $filter(''secToDec'')(Math.round(audio.getDuration()));\r\n			}\r\n			\r\n			$scope.playType = type;\r\n			\r\n			switch(type) {\r\n				case 1:\r\n					$scope.is_my_playlist = true;\r\n				break;\r\n				case 2: \r\n					if($scope.is_my_playlist) {\r\n						audio.pause();\r\n						$scope.tracks = $scope.search_tracks;\r\n						$scope.is_my_playlist = false;\r\n					}\r\n					else {\r\n						if($scope.tracks !== $scope.search_tracks) {\r\n							$scope.tracks = $scope.search_tracks;\r\n						}\r\n					}\r\n				break;\r\n				case 3:\r\n					$scope.is_my_playlist = false;\r\n					audio.pause();\r\n					$scope.tracks = [track];\r\n				break;\r\n			}\r\n			$scope.buffered = 0;\r\n			\r\n			audio.set(track.url);\r\n			audio.play();\r\n			\r\n			$scope.currentTrack 	= track;\r\n			$scope.current_index 	= index;\r\n			\r\n			audio.get().bind("timeupdate", function(){\r\n				$scope.tracks[$scope.current_index].duration = $filter(''secToDec'')(Math.round(audio.get()[0].currentTime).toFixed(2));\r\n				$scope.played_progress = ((audio.get()[0].currentTime / audio.get()[0].duration) * 100).toFixed(3);\r\n				\r\n				$scope.$apply();\r\n			});\r\n		}\r\n	}\r\n	\r\n	// Следим за текущим состоянием воспроизведени\r\n	audio.get().bind("play", function() {\r\n		$scope.isPlay = true;\r\n		$scope.$apply();\r\n	}).bind(''pause'', function() {\r\n		$scope.isPlay = false;\r\n		$scope.$apply();\r\n	})\r\n	\r\n	// Переключение трека на следующий\r\n	$scope.controlNext = function(){\r\n		if($.inArray($scope.current_index + 1, $scope.tracks) && $scope.current_index != undefined) {\r\n			$scope.Play($scope.tracks[$scope.current_index + 1], $scope.current_index + 1, $scope.playType);\r\n		}\r\n		else {\r\n			$scope.Play($scope.tracks[0], 0);\r\n		}\r\n	}\r\n	\r\n	// Переключение трека на предидущий\r\n	$scope.controlPrev = function(){\r\n		if($scope.current_index > 0) {\r\n			$scope.Play($scope.tracks[$scope.current_index - 1], $scope.current_index - 1, $scope.playType);\r\n		}\r\n	}\r\n	\r\n	// Воспроизведение/пауза текущего трека\r\n	$scope.controlPlay = function(){\r\n		if($scope.current_index == undefined) { \r\n			$scope.Play($scope.tracks[0], 0, 1);\r\n		}\r\n		else {\r\n			audio.isPause() ? audio.play() : audio.pause();\r\n		}\r\n	}\r\n	\r\n	// Остановка воспроизведения\r\n	$scope.controlStop = function(){\r\n		if($scope.current_index != undefined) {\r\n			audio.stop();\r\n			\r\n			$scope.current 			= undefined;\r\n			$scope.current_index 	= undefined;\r\n		}\r\n	}\r\n	\r\n	// Установка времени воспроизведения\r\n	$scope.setProgress = function(event) {\r\n		audio.get()[0].currentTime = ((event.offsetX / event.currentTarget.clientWidth) * Math.round(audio.get()[0].duration)).toFixed(2);\r\n	}\r\n	\r\n	// Выполняем нужные функции в конце воспроизведения\r\n	audio.get().bind("ended", function(){\r\n		if($scope.isScrobble) {\r\n			LastFM.track.scrobble($scope.current.artist, $scope.current.title);\r\n		}\r\n		\r\n		$scope.controlNext();\r\n	});\r\n	\r\n	// Отображаем процес буферизации\r\n	audio.get().bind("progress", function(){\r\n		for(var i = 0; i < audio.get()[0].buffered.length; i++){\r\n			$scope.buffered = ((audio.get()[0].buffered.end(i) / audio.get()[0].duration) * 100).toFixed(0);\r\n			$scope.$apply();\r\n		}\r\n	});\r\n	\r\n	/**\r\n	 * Управление контентной часью приложения\r\n	 */\r\n	 \r\n	$scope.ContentInit = function() {\r\n		$scope.content_template = ''views/my-library.html'';\r\n		$scope.load_content		= true;\r\n		\r\n		if($scope.is_lastfm_auth) {\r\n			$scope.content_title = ''Моя библиотека'';\r\n		}\r\n		else {\r\n			$scope.content_title = ''Популярные артисты на Last FM'';\r\n			\r\n			LastFM.chart.getTopArtists(0, 36, function(result) {\r\n				$scope.artists 		= result.artists.artist;\r\n				$scope.load_content = false;\r\n			});\r\n		}\r\n	}\r\n	\r\n	// Отслеживаем авторизацию пользователя на LastFM\r\n	$scope.$watch(''is_lastfm_auth'', function(new_val, old_val) {\r\n		if(new_val) {\r\n			$scope.content_title = ''Моя библиотека'';\r\n			\r\n			LastFM.user.getTopArtists('''', 36, 0, function(result){\r\n				$scope.artists = result.topartists.artist;\r\n			})\r\n		}\r\n	});\r\n	\r\n	// Вызов формы авторизации на LastFM\r\n	$scope.GetLastfmAuthForm = function() {\r\n		$scope.modal_content_template = ''views/lastfm-auth.html'';\r\n	}\r\n	\r\n	// Авторизация на LastFM\r\n	$scope.LastfmAuth = function() {\r\n		if(this.login != undefined && this.passw != undefined) {\r\n			LastFM.user.auth(this.login, this.passw, function(result) {\r\n				if(result.session) {\r\n					$scope.modal_content_template 	= '''';\r\n					$scope.is_lastfm_auth			= true;\r\n				}\r\n				else {\r\n					this.message = ''Неверный логин или пароль'';	\r\n				}\r\n			});\r\n		}\r\n	}\r\n	\r\n});', 0, '', '2014-01-31 17:09:35'),
(143, 'Sy-Frm Docs / view 2', 'php', '<?php\r\n\r\n	class MuzikController extends \\Sy\\Controller {\r\n		\r\n		public function searchAction( $q ) {\r\n			return Sy::app()->view[''smarty'']->render( ''muzik/search_list'', array() );	\r\n			return Sy::app()->view[''twig'']->render( ''muzik/search_list'', array() );	\r\n			return $this->render( ''muzik/search_list'', array(), ''smarty'' );	\r\n		}\r\n	\r\n	}', 0, '', '2014-02-03 11:14:48');
INSERT INTO `codes` (`id`, `title`, `language`, `source`, `author_id`, `password`, `added_at`) VALUES
(144, 'cMusic Controller', 'js', 'Player.controller(''PlayerCtrl'', function($scope, $rootScope, $filter, VK, LastFM, audio, sortage){\r\n	/**\r\n	 * cMusic Player ver 1.0\r\n	 * Глобальный контроллер приложения\r\n	 * \r\n	 * Не пытайтесь тут что-то понять, \r\n	 * я сам не понимаю как это все работает\r\n	 *\r\n	 * @author Alex Hyrenko\r\n	 * @email alex.hyrenko@gmail.com\r\n	 * @ver 1.0\r\n	 */\r\n	 \r\n	// Устанавливаем плеер по умолчанию\r\n	audio.setCurrentPlayer(''my-player'');\r\n	\r\n	// Проверяем, авторизирован ли пользователь на Last FM\r\n	LastFM.user.isAuth(function(is_auth) {\r\n		$scope.is_lastfm_auth = is_auth;\r\n	});\r\n	\r\n	// Установка громкости при инициализации\r\n	sortage.get(''volume'', function(obj) {\r\n		$scope.volume = obj.volume || 0.8;\r\n	});\r\n	\r\n	// Установка флага трансляции статуса при инициализации\r\n	sortage.get(''translation'', function(obj) {\r\n		$rootScope.isTranslation = obj.translation || false;\r\n	});\r\n	\r\n	// Установка флага скроллинга при инициализации\r\n	sortage.get(''scrobble'', function(obj) {\r\n		$rootScope.isScrobble = obj.scrobble || false;\r\n	});\r\n	\r\n	// Загрузка всех аудиозаписей ВК при инициализации плеера\r\n	// Устанавливаем глобальный список треков соответственно выборке\r\n	// Загрузка плейлистов ВК пользователя \r\n	$scope.MyPlaylistInit = function() {\r\n		$scope.load_palylist	= true;\r\n		$scope.album_id 		= $scope.album_id || 0;\r\n		$scope.is_my_playlist 	= true;\r\n		\r\n		$scope.playlistTracks	= [];\r\n		$scope.tracks			= [];\r\n		$scope.playlists		= [];\r\n		\r\n		if($scope.isShuffle) {\r\n			if($scope.trackCounts > 50) {\r\n				var offset = (Math.random() * (($scope.trackCounts - 50) - 1) + 1).toFixed(0);\r\n			}\r\n			else {\r\n				var offset = 0;\r\n			}\r\n		}\r\n		else {\r\n			var offset = 0;\r\n		}\r\n		\r\n		console.log($scope.album_id)\r\n		\r\n		VK.get(50, offset, $scope.album_id, function(result) {\r\n			angular.forEach(result.response, function(item, index) {\r\n				if(index > 0) {\r\n					item.duration_sec 	= item.duration;\r\n					item.duration 		= $filter(''secToDec'')(item.duration);\r\n					$scope.playlistTracks.push(item);\r\n				}\r\n				else {\r\n					$scope.trackCounts = item;\r\n				}\r\n			});\r\n			\r\n			if($scope.isShuffle) {\r\n				$scope.playlistTracks.sort(function() {return 0.5 - Math.random()});\r\n				\r\n				if($scope.currentTrack) {\r\n					$scope.playlistTracks.unshift($scope.currentTrack);\r\n				}\r\n			}\r\n			\r\n			$scope.load_palylist	= false;\r\n			$scope.tracks 			= $scope.playlistTracks;\r\n			\r\n			VK.getAlbums(30, 0, function(result) {\r\n				$scope.playlists = result.response.splice(1, 30);\r\n			});\r\n		});\r\n	}\r\n	\r\n	// Добавление аудиозаписей при скроле плейлиста\r\n	var is_load = true;\r\n	$scope.loadMoreTracksMyPlaylist = function() {\r\n		if(is_load) {\r\n			is_load = false;\r\n			\r\n			if($scope.isShuffle) {\r\n				var offset = (Math.random() * (($scope.trackCounts - 50) - 1) + 1).toFixed(0);\r\n			}\r\n			else {\r\n				var offset = $scope.playlistTracks.length;\r\n			}\r\n			\r\n			VK.get(30, offset, $scope.album_id, function(result) {\r\n				angular.forEach(result.response, function(item, index) {\r\n					if(index > 0) {\r\n						item.duration_sec 	= item.duration;\r\n						item.duration 		= $filter(''secToDec'')(item.duration);\r\n						$scope.playlistTracks.push(item);\r\n					}\r\n				});\r\n				\r\n				is_load = true;\r\n			});\r\n		}\r\n	}\r\n	\r\n	// Следим за изменением плейлиста ВК\r\n	$scope.$watch(''album_id'', function(new_playlist, old_playlist) {\r\n		if(new_playlist != old_playlist) {\r\n			$scope.load_palylist	= true;\r\n			$scope.playlistTracks	= [];\r\n			\r\n			VK.get(50, 0, $scope.album_id, function(result) {\r\n				angular.forEach(result.response, function(item, index) {\r\n					if(index > 0) {\r\n						item.duration_sec 	= item.duration;\r\n						item.duration 		= $filter(''secToDec'')(item.duration);\r\n						$scope.playlistTracks.push(item);\r\n					}\r\n					else {\r\n						$scope.trackCounts = item;\r\n					}\r\n				});\r\n				\r\n				$scope.tracks 			= $scope.playlistTracks;\r\n				$scope.load_palylist	= false;\r\n				$scope.album_id			= new_playlist;\r\n			});\r\n		}\r\n	});\r\n	\r\n	// Устанавливаем плейлист по умолчанию\r\n	$scope.setDefaultAlbum = function() {\r\n		$scope.album_id = 0;\r\n	}\r\n	\r\n	// Удаление трека из моих аудиозаписей\r\n	$scope.deleteMyTrack = function(aid, owner_id, index, type) {\r\n		VK.delete(aid, owner_id, function(result) {\r\n			if(result.response == 1) {\r\n				switch(type) {\r\n					case 1: \r\n						$scope.playlistTracks.splice(index, 1);\r\n					break;\r\n				}\r\n			}\r\n		})\r\n	}\r\n	\r\n	// Получаем все жанры ВК \r\n	$scope.getGenreList = function() {\r\n		return VK.genreList;\r\n	}\r\n	\r\n	// Редактирование трека из моих аудиозаписей\r\n	$scope.editMyTrack = function(track, index, type) {\r\n		$scope.modal_content_template 	= ''views/edit-my-track.html'';\r\n		$scope.editableTrack 			= track;\r\n		$scope.editableTrack.genre 		= String($scope.editableTrack.genre);\r\n	}\r\n	\r\n	// Сохраняем трек после редактирования\r\n	$scope.saveTrackInfo = function() {\r\n		VK.edit(\r\n			$scope.editableTrack.aid, \r\n			$scope.editableTrack.owner_id, \r\n			$scope.editableTrack.artist, \r\n			$scope.editableTrack.title, \r\n			parseInt($scope.editableTrack.genre), \r\n			function(result){\r\n				$scope.modal_content_template = '''';	\r\n		});\r\n	}\r\n	\r\n	// Добавляем трек из результатов поиска \r\n	$scope.addToMyPlaylist = function(track) {\r\n		if(track.owner_id != $scope.owner_id) {\r\n			VK.add(track.aid, track.owner_id, function(result) {\r\n				console.log(result)\r\n				if(result.response > 0) {\r\n					$scope.playlistTracks.unshift(track);\r\n				}\r\n			});\r\n		}\r\n	}\r\n	\r\n	/**\r\n	 * Управление глобальными функциями плеера\r\n	 */\r\n	\r\n	// Установка громкости\r\n	$scope.volumeChange = function(val){\r\n		audio.volume(val);\r\n		$rootScope.volume = val;\r\n	}\r\n	\r\n	// Воспроизводится ли текущий трек\r\n	$scope.isCurrentTrack = function(track) {\r\n		return $scope.currentTrack === track;\r\n	}\r\n	\r\n	// Воспроизведение/пауза текущего трека\r\n	// type param\r\n	// 		1 - воспроизведение из плейлиста\r\n	// 		2 - воспроизведение из результатов поиска\r\n	// 		3 - воспроизведение из дискографии\r\n	$scope.Play = function(track, index, type) {\r\n		if($scope.isCurrentTrack(track)) {\r\n			audio.isPause() ? audio.play() : audio.pause();\r\n		}\r\n		else {\r\n			if(audio.getDuration() > 0 && $scope.tracks[$scope.current_index]) {\r\n				$scope.tracks[$scope.current_index].duration = $filter(''secToDec'')(Math.round(audio.getDuration()));\r\n			}\r\n			\r\n			$scope.playType = type;\r\n			\r\n			switch(type) {\r\n				case 1:\r\n					$scope.is_my_playlist 	= true;\r\n					$scope.tracks 			= $scope.playlistTracks;\r\n				break;\r\n				case 2: \r\n					if($scope.is_my_playlist) {\r\n						audio.pause();\r\n						$scope.tracks 			= $scope.search_tracks;\r\n						$scope.is_my_playlist 	= false;\r\n					}\r\n					else {\r\n						if($scope.tracks !== $scope.search_tracks) {\r\n							$scope.tracks = $scope.search_tracks;\r\n						}\r\n					}\r\n				break;\r\n				case 3:\r\n					$scope.is_my_playlist = false;\r\n					audio.pause();\r\n					$scope.tracks = [track];\r\n				break;\r\n			}\r\n			$scope.buffered = 0;\r\n			\r\n			audio.set(track.url);\r\n			audio.play();\r\n			\r\n			$scope.currentTrack 	= track;\r\n			$scope.current_index 	= index;\r\n\r\n			audio.get().bind("timeupdate", function(){\r\n				$scope.tracks[$scope.current_index].duration = $filter(''secToDec'')(Math.round(audio.get()[0].currentTime).toFixed(2));\r\n				$scope.played_progress = ((audio.get()[0].currentTime / audio.get()[0].duration) * 100).toFixed(3);\r\n				\r\n				$scope.$apply();\r\n			});\r\n		}\r\n	}\r\n	\r\n	// Следим за изменением текущего трека\r\n	$scope.$watch(''currentTrack'', function(new_track, old_track) {\r\n		if(new_track) {\r\n			if($scope.isTranslation) {\r\n				VK.setBroadcast(new_track.aid);\r\n			}\r\n			\r\n			if($scope.isScrobble) {\r\n				LastFM.track.updateNowPlaying(new_track.artist, new_track.title, new_track.duration_sec);\r\n			}\r\n			\r\n			LastFM.track.getInfo(new_track.artist, new_track.title, function(data){\r\n				if(!data.error) {\r\n					if(data.track.album) {\r\n						$scope.current_image = data.track.album.image;\r\n					}\r\n					else {\r\n						$scope.current_image = 0;\r\n					}\r\n				}\r\n			});\r\n			\r\n			if($scope.is_my_playlist) {\r\n				$scope.artists = [];\r\n				\r\n				if(!old_track || new_track.artist != old_track.artist) {\r\n					$scope.playedSimilar	= [];\r\n					$scope.artistTopAlbums 	= [];\r\n					$scope.artistEvents		= [];\r\n					$scope.playedInfoType	= ''bio'';\r\n						\r\n					LastFM.artist.getInfo(new_track.artist, function(result){\r\n						$scope.content_template = ''views/played-info.html'';\r\n						\r\n						$scope.biography = result.artist;\r\n					});\r\n				}\r\n			}\r\n		}\r\n	});\r\n	\r\n	// Следим за текущим состоянием воспроизведени\r\n	audio.get().bind("play", function() {\r\n		$scope.isPlay = true;\r\n		$scope.$apply();\r\n	}).bind(''pause'', function() {\r\n		$scope.isPlay = false;\r\n		$scope.$apply();\r\n	})\r\n	\r\n	// Переключение трека на следующий\r\n	$scope.controlNext = function(){\r\n		if($.inArray($scope.current_index + 1, $scope.tracks) && $scope.current_index != undefined) {\r\n			$scope.Play($scope.tracks[$scope.current_index + 1], $scope.current_index + 1, $scope.playType);\r\n		}\r\n		else {\r\n			$scope.Play($scope.tracks[0], 0);\r\n		}\r\n	}\r\n	\r\n	// Переключение трека на предидущий\r\n	$scope.controlPrev = function(){\r\n		if($scope.current_index > 0) {\r\n			$scope.Play($scope.tracks[$scope.current_index - 1], $scope.current_index - 1, $scope.playType);\r\n		}\r\n	}\r\n	\r\n	// Воспроизведение/пауза текущего трека\r\n	$scope.controlPlay = function(){\r\n		if($scope.current_index == undefined) { \r\n			$scope.Play($scope.tracks[0], 0, 1);\r\n		}\r\n		else {\r\n			audio.isPause() ? audio.play() : audio.pause();\r\n		}\r\n	}\r\n	\r\n	// Остановка воспроизведения\r\n	$scope.controlStop = function(){\r\n		if($scope.current_index != undefined) {\r\n			audio.stop();\r\n			\r\n			$scope.current 			= undefined;\r\n			$scope.current_index 	= undefined;\r\n		}\r\n	}\r\n	\r\n	// Установка трека на повторение\r\n	$scope.repeatTrack = function() {\r\n		$scope.isRepeatTrack = !$scope.isRepeatTrack;\r\n	}\r\n	\r\n	// Режим случайного выбора трека\r\n	$scope.shuffle = function() {\r\n		$scope.isShuffle = !$scope.isShuffle;\r\n		\r\n		$scope.MyPlaylistInit();\r\n	}\r\n	\r\n	// Установка времени воспроизведения\r\n	$scope.setProgress = function(event) {\r\n		audio.get()[0].currentTime = ((event.offsetX / event.currentTarget.clientWidth) * $scope.currentTrack.duration_sec).toFixed(2);\r\n	}\r\n	\r\n	// Выполняем нужные функции в конце воспроизведения\r\n	audio.get().bind("ended", function(){\r\n		if($scope.isScrobble) {\r\n			LastFM.track.scrobble($scope.currentTrack.artist, $scope.currentTrack.title);\r\n		}\r\n		if($scope.isRepeatTrack) {\r\n			audio.get()[0].currentTime = 0;\r\n			audio.play();\r\n		}\r\n		else {\r\n			$scope.controlNext();\r\n		}\r\n	});\r\n	\r\n	// Отображаем процес буферизации\r\n	audio.get().bind("progress", function(){\r\n		for(var i = 0; i < audio.get()[0].buffered.length; i++){\r\n			$scope.buffered = ((audio.get()[0].buffered.end(i) / audio.get()[0].duration) * 100).toFixed(0);\r\n			$scope.$apply();\r\n		}\r\n	});\r\n	\r\n	/**\r\n	 * Управление контентной часью приложения\r\n	 */\r\n	 \r\n	// Загружаем библиотеку пользователя или популярных артистов из Last FM\r\n	$scope.ContentInit = function(is_new) {\r\n		if(!is_new) {\r\n			$scope.content_template = ''views/my-library.html'';\r\n			$scope.load_content		= true;\r\n		}\r\n		\r\n		LastFM.user.isAuth(function(is_auth) {\r\n			if(is_auth)	 {\r\n				$scope.content_title = ''Моя библиотека'';\r\n			\r\n				LastFM.user.getTopArtists('''', 36, 0, function(result){\r\n					$scope.artists 		= result.topartists.artist;\r\n					$scope.artistsPages	= result.topartists[''@attr''].totalPages;\r\n					\r\n					$scope.load_content = false;\r\n				})\r\n			}\r\n			else {\r\n				$scope.content_title = ''Популярные артисты на Last FM'';\r\n			\r\n				LastFM.chart.getTopArtists(0, 36, function(result) {\r\n					$scope.artists 		= result.artists.artist;\r\n					$scope.artistsPages	= result.artists[''@attr''].totalPages;\r\n					\r\n					$scope.load_content = false;\r\n				});\r\n			}\r\n		});\r\n	}\r\n	\r\n	// Следим за состоянием просмотра информации об исполнителе\r\n	$scope.$watch(''playedInfoType'', function(new_val, old_val) {\r\n		if(new_val != old_val) {\r\n			switch(new_val) {\r\n				case ''similar'':\r\n					if($scope.playedSimilar.length == 0) {\r\n						LastFM.artist.getSimilar($scope.biography.name, 36, function(result){\r\n							$scope.playedSimilar 	= result.similarartists.artist;\r\n						});\r\n					}\r\n				break;\r\n				case ''albums'':\r\n					if($scope.artistTopAlbums.length == 0) {\r\n						LastFM.artist.getTopAlbums($scope.biography.name, 15, 0, function(result) {\r\n							angular.forEach(result.topalbums.album, function(item) {\r\n								LastFM.album.getInfo($scope.biography.name, item.name, function(tracks) {\r\n									if(tracks.album.tracks.track.length > 0) {\r\n										$scope.artistTopAlbums.push({\r\n											name	: item.name,\r\n											image	: item.image,\r\n											tracks	: tracks.album.tracks.track\r\n										});\r\n									}\r\n								});\r\n							});\r\n						});\r\n					}\r\n				break;\r\n				case ''events'':\r\n					if($scope.artistEvents && $scope.artistEvents.length == 0) {\r\n						LastFM.artist.getEvents($scope.biography.name, 50, 0, function(result) {\r\n							if(result.events.event && result.events.event.length > 0) {\r\n								angular.forEach(result.events.event, function(item) {\r\n									item.startDate 		= LastFM.parseDate(item.startDate);\r\n									item.artists.artist = angular.isArray(item.artists.artist) ? item.artists.artist.join('', '') : item.artists.artist;\r\n								});\r\n								\r\n								$scope.artistEvents = result.events.event;\r\n							}\r\n							else {\r\n								$scope.artistEvents = undefined;\r\n							}\r\n						});\r\n					}\r\n				break;\r\n			}\r\n		}\r\n	});\r\n	\r\n	// Добавляем артистов при скроле библиотеки\r\n	var isLoad = true;\r\n	$scope.loadMoreArtists = function() {\r\n		isLoad = false;\r\n		if($scope.is_lastfm_auth) {\r\n			if((($scope.artists.length / 36) + 1) <= $scope.artistsPages) {\r\n				LastFM.user.getTopArtists('''', 36, ($scope.artists.length / 36) + 1, function(result){\r\n					angular.forEach(result.topartists.artist, function(item) {\r\n						$scope.artists.push(item);\r\n					});\r\n					\r\n					isLoad = true;\r\n				});\r\n			}\r\n		}\r\n		else {\r\n			if((($scope.artists.length / 36) + 1) <= $scope.artistsPages) {\r\n				LastFM.chart.getTopArtists(($scope.artists.length / 36) + 1, 36, function(result){\r\n					angular.forEach(result.artists.artist, function(item) {\r\n						$scope.artists.push(item);\r\n					});\r\n					\r\n					isLoad = true;\r\n				});\r\n			}\r\n		}\r\n	}\r\n	\r\n	// Отслеживаем авторизацию пользователя на LastFM\r\n	$scope.$watch(''is_lastfm_auth'', function(new_val, old_val) {\r\n		if(new_val) {\r\n			$scope.content_title = ''Моя библиотека'';\r\n			\r\n			LastFM.user.getTopArtists('''', 36, 0, function(result){\r\n				$scope.artists = result.topartists.artist;\r\n			})\r\n		}\r\n	});\r\n	\r\n	// Вызов формы авторизации на LastFM\r\n	$scope.GetLastfmAuthForm = function() {\r\n		$scope.modal_content_template = ''views/lastfm-auth.html'';\r\n	}\r\n	\r\n	// Авторизация на LastFM\r\n	$scope.LastfmAuth = function() {\r\n		if(this.login != undefined && this.passw != undefined) {\r\n			LastFM.user.auth(this.login, this.passw, function(result) {\r\n				if(result.session) {\r\n					$scope.modal_content_template 	= '''';\r\n					$scope.is_lastfm_auth			= true;\r\n				}\r\n				else {\r\n					$scope.message = ''Неверный логин или пароль'';	\r\n				}\r\n			});\r\n		}\r\n	}\r\n	\r\n	// Установка скроблинга\r\n	$scope.scrobble = function() {\r\n		$rootScope.isScrobble 	= !$rootScope.isScrobble;\r\n		\r\n		if($rootScope.isScrobble) {\r\n			LastFM.track.updateNowPlaying($scope.currentTrack.artist, $scope.currentTrack.title, $scope.currentTrack.duration_sec);\r\n		}\r\n	}\r\n	\r\n	// Установка трансляции трека в статусе пользователя\r\n	$scope.translation = function() {\r\n		$rootScope.isTranslation = !$rootScope.isTranslation;\r\n		\r\n		if($rootScope.isTranslation) {\r\n			VK.setBroadcast($scope.currentTrack.aid);\r\n		}\r\n		else {\r\n			VK.setBroadcast('''');\r\n		}\r\n	}\r\n	\r\n	/**\r\n	 * Поиск еби его мать \r\n	 * жрать хочу, но эту херь надо доделать\r\n	 */\r\n	\r\n	// Вызываем окно поиска\r\n	$scope.showSearch = function() {\r\n		$scope.search_template 	= ''views/search.html'';\r\n		$scope.isSearchShow		= true;\r\n		this.q 					= '''';\r\n		\r\n		\r\n		if($scope.search_tracks && $scope.search_tracks.length > 0) {\r\n			\r\n		}\r\n		else {\r\n			VK.getRecommendations(0, 50, 0, function(result){\r\n				angular.forEach(result.response, function(item) {\r\n					item.duration_sec 	= item.duration;\r\n					item.duration 		= $filter(''secToDec'')(item.duration);\r\n				});\r\n				\r\n				$scope.search_tracks 		= result.response;\r\n				\r\n				$scope.isContentShow 		= true;\r\n				$scope.isVkRecomendations	= true;\r\n			});\r\n		}\r\n	}\r\n	\r\n	// Поиск трека/исполнителя\r\n	$scope.search = function(q) {\r\n		$scope.isVkRecomendations	= false;\r\n		\r\n		if(q) {\r\n			this.q = q;\r\n			angular.element(''#search-input'').val(q);\r\n		}\r\n		\r\n		//$scope.search_query = this.q;\r\n		\r\n		VK.search(q || this.q, 50, 0, $scope.performer_only, function(result){\r\n			$scope.search_tracks = [];\r\n			\r\n			angular.forEach(result.response, function(item) {\r\n				if(item.duration) {\r\n					item.duration_sec 	= item.duration;\r\n					item.duration 		= $filter(''secToDec'')(item.duration);\r\n					$scope.search_tracks.push(item);\r\n				}\r\n			});\r\n		});\r\n	}\r\n	\r\n	// Подгружаем результаты поиска при скроле\r\n	var is_load = true;\r\n	$scope.loadMoreSearchResult = function(){\r\n		if(is_load) {\r\n			is_load = false;\r\n			\r\n			if($scope.isVkRecomendations) {\r\n				VK.getRecommendations(0, 50, $scope.search_tracks.length, function(result){\r\n					$.each(result.response, function(index, data) {\r\n						$scope.search_tracks.push(data);\r\n					});\r\n					\r\n					is_load = true;\r\n				});\r\n			}\r\n			else {\r\n				VK.search(this.q, 50, $scope.search_tracks.length, $scope.performer_only, function(result){\r\n					$.each(result.response, function(index, data) {\r\n						if(index > 0) {\r\n							$scope.search_tracks.push(data);\r\n						}\r\n					});\r\n					\r\n					is_load = true;\r\n				});\r\n			}\r\n		}\r\n	}\r\n	\r\n	// Закрываем окно поиска\r\n	$scope.closeSearch = function() {\r\n		$scope.isSearchShow		= false;\r\n		//$scope.search_tracks	= [];\r\n		$scope.search_template 	= '''';\r\n	}\r\n	\r\n	// Вызываем окно с подробной информацией об исполнителе\r\n	$scope.artistMoreInfo = function(artist) {\r\n		$scope.isArtistMoreInfoShow 		= true;\r\n		$scope.artist_more_info_template 	= ''views/artist-more-info.html'';\r\n		$scope.performer_only				= 1;\r\n		$scope.moreInfoSimilar 				= [];\r\n		$scope.moreInfoArtistTopAlbums		= [];\r\n		$scope.moreInfoArtistEvents			= [];\r\n		$scope.moreInfoType					= ''tracks'';\r\n		\r\n		LastFM.artist.getInfo(artist, function(result) {\r\n			$scope.artist_min_info = {\r\n				name	: artist,\r\n				image 	: result.artist.image[1],\r\n				tags	: result.artist.tags.tag\r\n			}\r\n		});\r\n		\r\n		$scope.search(artist);\r\n	}\r\n	\r\n	// Следим за вкладками инфы об осполнителе\r\n	$scope.$watch(''moreInfoType'', function(new_val, old_val) {\r\n		if(new_val != old_val) {\r\n			switch(new_val) {\r\n				case ''similar'':\r\n					if(!$scope.moreInfoSimilar || $scope.moreInfoSimilar.length == 0) {\r\n						LastFM.artist.getSimilar($scope.artist_min_info.name, 36, function(result){\r\n							$scope.moreInfoSimilar 	= result.similarartists.artist;\r\n						});\r\n					}\r\n				break;\r\n				case ''albums'':\r\n					if(!$scope.moreInfoArtistTopAlbums || $scope.moreInfoArtistTopAlbums.length == 0) {\r\n						$scope.moreInfoArtistTopAlbums = [];\r\n						LastFM.artist.getTopAlbums($scope.artist_min_info.name, 15, 0, function(result) {\r\n							if(result.topalbums.album && result.topalbums.album.length > 0) {\r\n								angular.forEach(result.topalbums.album, function(item) {\r\n									LastFM.album.getInfo($scope.artist_min_info.name, item.name, function(tracks) {\r\n										if(tracks.album.tracks.track.length > 0) {\r\n											$scope.moreInfoArtistTopAlbums.push({\r\n												name	: item.name,\r\n												image	: item.image,\r\n												tracks	: tracks.album.tracks.track\r\n											});\r\n										}\r\n									});\r\n								});\r\n							}\r\n						});\r\n					}\r\n				break;\r\n				case ''events'':\r\n					if($scope.moreInfoArtistEvents && $scope.moreInfoArtistEvents.length == 0) {\r\n						LastFM.artist.getEvents($scope.artist_min_info.name, 50, 0, function(result) {\r\n							if(result.events.event && result.events.event.length > 0) {\r\n								angular.forEach(result.events.event, function(item) {\r\n									item.startDate 		= LastFM.parseDate(item.startDate);\r\n									item.artists.artist = angular.isArray(item.artists.artist) ? item.artists.artist.slice(0, 4).join('', '') : item.artists.artist;\r\n								});\r\n								\r\n								$scope.moreInfoArtistEvents = result.events.event;\r\n							}\r\n							else {\r\n								$scope.moreInfoArtistEvents = undefined;\r\n							}\r\n						});\r\n					}\r\n				break;\r\n			}\r\n		}\r\n	});\r\n	\r\n	// Закрываем инфу об исполнителе\r\n	$scope.closeArtistMoreInfo = function() {\r\n		$scope.isArtistMoreInfoShow			= false;\r\n		$scope.search_tracks				= [];\r\n		$scope.artist_more_info_template 	= '''';\r\n	}\r\n	\r\n	// Вызываем окно с событиями \r\n	$scope.showEvents = function() {\r\n		$scope.isEventsShow 	= true;\r\n		$scope.events_template	= ''views/events.html'';\r\n		\r\n		LastFM.geo.getEvents(30, 0, '''', function(result) {\r\n			angular.forEach(result.events.event, function(item) {\r\n				item.startDate 		= LastFM.parseDate(item.startDate);\r\n				item.artists.artist = angular.isArray(item.artists.artist) ? item.artists.artist.slice(0, 4).join('', '') : item.artists.artist;\r\n			});\r\n			\r\n			$scope.geoEvents 		= result.events.event;\r\n			$scope.geoEventsPages 	= result.events[''@attr''].totalPages;\r\n		});\r\n	}\r\n	\r\n	// Подгружаем события при скроле\r\n	var is_load = true;\r\n	$scope.loadMoreEvents = function() {\r\n		is_load = false;\r\n		switch($scope.eventType) {\r\n			case ''all'':\r\n				if((($scope.geoEvents.length / 30) + 1) <= $scope.geoEventsPages) {\r\n					LastFM.geo.getEvents(30, ($scope.geoEvents.length / 30) + 1, '''', function(result) {\r\n						angular.forEach(result.events.event, function(item) {\r\n							item.startDate 		= LastFM.parseDate(item.startDate);\r\n							item.artists.artist = angular.isArray(item.artists.artist) ? item.artists.artist.slice(0, 4).join('', '') : item.artists.artist;\r\n							\r\n							$scope.geoEvents.push(item);\r\n						});\r\n						\r\n						console.log(result);\r\n						\r\n						is_load = true;\r\n					});\r\n				}\r\n			break;\r\n			case ''recommends'':\r\n				if((($scope.recommendEventsPages.length / 30) + 1) <= $scope.recommendEventsPages) {\r\n					LastFM.user.getRecommendedEvents(30, ($scope.recommendEvents.length / 30) + 1, function(result) {\r\n						angular.forEach(result.events.event, function(item) {\r\n							item.startDate 		= LastFM.parseDate(item.startDate);\r\n							item.artists.artist = angular.isArray(item.artists.artist) ? item.artists.artist.slice(0, 4).join('', '') : item.artists.artist;\r\n							\r\n							$scope.recommendEvents.push(item);\r\n						});\r\n						\r\n						is_load = true;\r\n					});\r\n				}\r\n			break;\r\n			case ''my'':\r\n				if((($scope.myEvents.length / 30) + 1) <= $scope.myEventsPages) {\r\n					LastFM.user.getEvents(30, ($scope.myEvents.length / 30) + 1, function(result) {\r\n						angular.forEach(result.events.event, function(item) {\r\n							item.startDate 		= LastFM.parseDate(item.startDate);\r\n							item.artists.artist = angular.isArray(item.artists.artist) ? item.artists.artist.slice(0, 4).join('', '') : item.artists.artist;\r\n							\r\n							$scope.myEvents.push(item);\r\n						});\r\n						\r\n						is_load = true;\r\n					});\r\n				}\r\n			break;\r\n		}\r\n	}\r\n	\r\n	$scope.$watch(''eventType'', function(new_val, old_val) {\r\n		if(new_val != old_val) {\r\n			switch(new_val) {\r\n				case ''recommends'':\r\n					if(!$scope.recommendEvents || $scope.recommendEvents.length == 0) {\r\n						LastFM.user.getRecommendedEvents(30, 0, function(result) {\r\n							angular.forEach(result.events.event, function(item) {\r\n								item.startDate 		= LastFM.parseDate(item.startDate);\r\n								item.artists.artist = angular.isArray(item.artists.artist) ? item.artists.artist.slice(0, 4).join('', '') : item.artists.artist;\r\n							});\r\n							$scope.recommendEvents 		= result.events.event;\r\n							$scope.recommendEventsPages = result.events[''@attr''].totalPages;\r\n						});\r\n					}\r\n				break;\r\n				case ''my'':\r\n					if(!$scope.myEvents || $scope.myEvents.length == 0) {\r\n						LastFM.user.getEvents(30, 0, function(result) {\r\n							angular.forEach(result.events.event, function(item) {\r\n								item.startDate 		= LastFM.parseDate(item.startDate);\r\n								item.artists.artist = angular.isArray(item.artists.artist) ? item.artists.artist.slice(0, 4).join('', '') : item.artists.artist;\r\n							});\r\n						\r\n							$scope.myEvents 		= result.events.event;\r\n							$scope.myEventsPages 	= result.events[''@attr''].totalPages;\r\n						});\r\n					}\r\n				break;\r\n			}\r\n		}\r\n	});\r\n	\r\n	// Закрываем окно событий\r\n	$scope.closeEvents = function() {\r\n		$scope.isEventsShow 	= false;\r\n		$scope.events_template	= '''';\r\n		$scope.geoEvents		= [];\r\n	}\r\n	\r\n	// Открываем окно библиотеки\r\n	$scope.showMyLib = function() {\r\n		$scope.isLibShow	= !$scope.isLibShow;\r\n		\r\n		if($scope.isLibShow) {\r\n			$scope.lib_template = ''views/my-library.html'';\r\n			$scope.ContentInit(true);\r\n		}\r\n		else {\r\n			//$scope.lib_template = '''';\r\n			//$scope.artists = [];\r\n		}\r\n		\r\n	}\r\n});', 0, '', '2014-02-03 16:29:41'),
(145, 'my old Mini-Clock plugin', 'php', '// Mini-Clock plugin\r\n			jQuery(document).ready(function($){\r\n				\r\n				var span 	= $(''span.fle-date'');\r\n				\r\n				var month 	= new Array( \r\n					"Янв", "Фев", "Мар", "Апр", \r\n					"Май", "Июн", "Июл", "Авг", \r\n					"Сен", "Окт", "Ноя", "Дек" \r\n				);\r\n				\r\n				var addZero = function( number ){\r\n					if( number.toString().length == 1 ){\r\n						number = ''0'' + number;\r\n					}\r\n					return number;\r\n				}\r\n				\r\n				var interval = setInterval(function(){\r\n				\r\n					var date 		= new Date(),\r\n						dataString 	= new String();\r\n						\r\n					dataString += addZero( date.getDate() );\r\n					dataString += '', '';\r\n					dataString += month[date.getUTCMonth()];\r\n					dataString += '' '';\r\n					dataString += date.getFullYear();\r\n					dataString += '' '';\r\n					dataString += addZero( date.getHours() );\r\n					dataString += '':'';\r\n					dataString += addZero( date.getMinutes() );\r\n					dataString += '':'';\r\n					dataString += addZero( date.getSeconds() );\r\n					\r\n					span.html( dataString );\r\n					\r\n				}, 1000);\r\n				\r\n			});', 0, '', '2014-02-05 16:33:42'),
(146, 'Sy-Frm Docs / table fields sctructure', 'php', '<?php\r\n\r\n    $table_data = array(\r\n        ''pri''       => ''id'',\r\n        ''fields''    => array(\r\n            ''project_id''    => array(\r\n                ''data''      => null,\r\n                ''default''   => 1,\r\n                ''data_type'' => ''INT'',\r\n                ''data_cond'' => ''8''\r\n            )\r\n        )\r\n    );\r\n', 0, '', '2014-02-06 13:30:37'),
(147, 'No title', 'js', 'var code = ''return [''+\r\n		''API.audio.search({"q": "Poets of the Fall - Fire", "count": 1}),''+\r\n		''API.audio.search({"q": "Poets of the Fall - Sorry Go Round", "count": 1}),''+\r\n		''API.audio.search({"q": "Poets of the Fall - Carnival of Rust", "count": 1}),''+\r\n		''API.audio.search({"q": "Poets of the Fall - Locking Up the Sun", "count": 1}),''+\r\n		''API.audio.search({"q": "Poets of the Fall - Gravity", "count": 1})''+\r\n	''];'';\r\n	\r\n	VK.execute(code, function(result) {\r\n		console.log(result)\r\n	})', 0, '', '2014-02-07 18:13:03'),
(148, 'No title', 'js', 'parseDate: function(date) {\r\n			date 	= new Date(date);\r\n			now		= new Date();\r\n			\r\n			var months 	= new Array("Января", "Февраля", "Марта", "Апреля", "Мая", "Июня", "Июля", "Августа", "Сентября", "Октября", "Ноября", "Декабря");\r\n			var days	= new Array(''Воскресенье'', ''Понедельник'', ''Вторник'', ''Среда'', ''Четверг'', ''Пятница'', ''Суббота'');\r\n			\r\n			return {\r\n				date	: date.getDate(),\r\n				day		: days[date.getDay()],\r\n				month	: months[date.getMonth()],\r\n				year	: date.getFullYear(),\r\n				time	: (date.getMinutes() == 0 ? ''00'' : date.getMinutes()),\r\n				diff	: Math.round((date - now)/1000/60/60/24)\r\n			}\r\n		}', 0, '', '2014-02-10 14:44:55'),
(149, 'No title', 'php', '    $view = new View( ''../html'', ''tpl'' );\r\n\r\n    $view->attachHandler( ''twig_default'', ViewHelper::getHandler( ''twig'' ) );\r\n    $view->setStack( ViewHelper::getStack( ''main_data'' ) );\r\n    $view->activeHandler( ''twig_default'' );\r\n\r\n    $view->render( ''inner/user_box'', array(\r\n        ''user_data'' => $user_table->load( 9801 )\r\n    ) );', 0, '', '2014-02-10 18:16:29'),
(150, 'Sy-Frm Docs / view v.2', 'php', '<?php\r\n\r\n    $view = new View( ''../html'', ''tpl'' );        \r\n    $view->useTmpl( View::TMPL_USE_SMARTY );\r\n    $view->render( ''inner/user_box'', array( \r\n        ''user_data'' => $user_table->load( \\Sy::app()->auth->get( ''id'' ) ) ) \r\n    );', 0, '', '2014-02-12 15:53:02'),
(151, 'view v.100500', 'php', '<?php\r\n\r\n    namespace Sy;\r\n\r\n    class View {\r\n\r\n        private\r\n            $driver             = array(),\r\n            $driverName         = ''default'',\r\n            $templateDirectory  = null,\r\n            $templateExt        = null;\r\n\r\n        public function __construct( $templateDirectory, $templateExt = ''php'' ) {\r\n            $this->templateDirectory    = $templateDirectory;\r\n            $this->templateExt          = $templateExt;\r\n            $this->driverName           = ''default'';\r\n            $this->driver[''default''] = new ViewDefault( $this->templateDirectory, $this->templateExt );\r\n        }\r\n\r\n        public function setDriver( $driver_name = ''default'' ) {\r\n            $this->driverName = $driver_name;\r\n            if( ! isset( $this->driver[$driver_name] ) ) {\r\n                $className = ''View''. ucfirst( strtolower( $driver_name ) );\r\n                $this->driver[$driver_name] = new $className( $this->templateDirectory, $this->templateExt );\r\n            }\r\n        }\r\n\r\n        public function getDriver( $driver_name = ''default'' ) {\r\n            if( isset( $this->driver[$driver_name] ) ) {\r\n                return $this->driver[$driver_name];\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        public function render( $templateFile = null, array $templateData = array() ) {\r\n            return $this->driver[$this->driverName]->render( $templateFile, $templateData );\r\n        }\r\n\r\n    }', 0, '', '2014-02-28 18:05:00'),
(152, 'lol', 'php', '<?php\r\n\r\n    namespace Sy;\r\n\r\n    class ViewDefault extends ViewAbstract {\r\n\r\n        public function render( $templateFile = null, array $templateData = array() ) {\r\n            try {\r\n                $file = $this->makeTemplateFile( $templateFile );\r\n            } catch ( \\Exception $e ) {\r\n                return $e->getMessage();\r\n            }\r\n            return self::_render( $file, $templateData );\r\n        }\r\n\r\n        static private function _render( $file = null, array $data = array() ) {\r\n            ob_start();\r\n                extract( $data );\r\n                include $file;\r\n            return ob_get_clean();\r\n        }\r\n\r\n    }', 0, '', '2014-02-28 18:37:14'),
(153, 'Sy-Frm Access system', 'php', '// save access\r\n$access = array( 13, 81, 56, 171, 78, 99, 3, 1, 66, 34, 130, 256 );\r\n$rows = array_fill( 0, floor( max( $access ) / 32 ) + 1, 0 );\r\nforeach( $access as $a ) {\r\n    $rowNum         = floor( $a / 32 );\r\n    $a              = $a - ( 32 * floor( $a / 32 ) );\r\n    $rows[$rowNum]  |= ( 1 << $a );\r\n}\r\n$accessStr = join( ''.'', $rows );\r\n\r\n// check access\r\n$chkAccess  = 99;\r\n$groupNum   = floor( $chkAccess / 32 );\r\n$chkAccess  = $chkAccess - ( 32 * $groupNum );\r\n$accessRows = array_map( ''intval'', explode( ''.'', $accessStr ) );\r\n\r\n$accessResult = (bool) ( $accessRows[$groupNum] & ( 1 << $chkAccess ) );\r\n\r\ndie(var_dump( $accessStr, $accessResult ));\r\n\r\n//\r\n// string ''8202.16777220.147460.8.4.2048.0.0.1'' (length=35)\r\n// boolean true\r\n//', 0, '', '2014-03-03 14:13:13'),
(154, 'No title', 'js', 'if($rootScope.isNotifications) {\r\n						LastFM.getImage($scope.current_image, function(image) {\r\n							chrome.notifications.getAll(function(result) {\r\n								if(result[1]) {\r\n									chrome.notifications.clear(''1'', function() {});\r\n								}\r\n								\r\n								chrome.notifications.create(''1'', {\r\n									type	: ''basic'',\r\n									title	: track.artist,\r\n									message	: track.title,\r\n									iconUrl	: image || ''icons/no-image.png'',\r\n									buttons	: [\r\n										{''title'' : ''Следующий трек'' },\r\n										{''title'' : ''Предидущый трек'' }\r\n									]\r\n								}, function() {\r\n									\r\n								});\r\n							});\r\n						});\r\n					}', 0, '', '2014-03-04 13:28:53'),
(155, 'No title', 'php', 'Player.factory(''stateManager'', function($rootScope) {\r\n	$rootScope.state = [];\r\n	\r\n	return {\r\n		set: function(name) {\r\n			$rootScope.state[name] = true;\r\n		},\r\n		\r\n		get: function(name) {\r\n			return $rootScope.state[name];\r\n		},\r\n		\r\n		remove: function(name) {\r\n			$rootScope.state[name] = undefined;\r\n		}\r\n	}\r\n});', 0, '', '2014-03-05 12:47:46'),
(156, 'No title', 'js', 'Player.directive(''image'', function($http, $rootScope, storage){\r\n	return {\r\n		restrict:''A'',\r\n		\r\n		link: function(scope, elem, attr) {\r\n			attr.$observe(''image'', function() {\r\n				if(attr.image) {\r\n					storage.local.get(attr.image, function(result) {\r\n						if(result[attr.image]) {\r\n							elem[0].src = result[attr.image];\r\n						}\r\n						else {\r\n							var xhr = new XMLHttpRequest();\r\n							xhr.responseType = ''blob'';\r\n							xhr.onload = function() {\r\n								elem[0].src = window.webkitURL.createObjectURL(xhr.response);\r\n								\r\n								tmp = {};\r\n								tmp[attr.image] = elem[0].src;\r\n								\r\n								storage.local.set(tmp);\r\n							}\r\n							xhr.open(''GET'', attr.image.replace(''/126/'', ''/126s/'').replace(''/64/'', ''/64s/''), true);\r\n							xhr.send();\r\n						}\r\n					});\r\n				}\r\n				else {\r\n					elem[0].src = ''icons/no-image.png''\r\n				}\r\n			});\r\n		}\r\n	}\r\n})', 0, '', '2014-03-05 15:17:05'),
(157, 'No title', 'js', 'Player.factory(''utils'', function(){\r\n	return {\r\n		loadImage : function(url, callback) {\r\n			var xhr = new XMLHttpRequest();\r\n			xhr.responseType = ''blob'';\r\n			xhr.onload = function() {\r\n				callback(window.webkitURL.createObjectURL(xhr.response), xhr.response);\r\n			}\r\n			xhr.open(''GET'', url, true);\r\n			xhr.send();\r\n		},\r\n		\r\n		saveLocalImage: function(fileName, data, callback) {\r\n			window.webkitRequestFileSystem(window.PERSISTENT, 0, function(fs) {\r\n				fs.root.getFile(fileName, {\r\n					create: true\r\n				}, function(fileEntry) {\r\n					fileEntry.createWriter(function(fileWriter) {\r\n						fileWriter.onwriteend = function(e) {\r\n							callback(true);\r\n						};\r\n						\r\n						fileWriter.onerror = function(e) {\r\n							callback(false)\r\n						};\r\n						\r\n						fileWriter.write(data);\r\n					});\r\n				});\r\n			});\r\n		},\r\n		\r\n		getLocalImage: function(name, callback) {\r\n			window.webkitRequestFileSystem(window.PERSISTENT, 0, function(fs) {\r\n				fs.root.getFile(name, {}, function(fileEntery) {\r\n					callback(fileEntery.toURL());\r\n				});\r\n			});\r\n		}\r\n	}\r\n});', 0, '', '2014-03-05 16:12:53'),
(158, 'ProjectModel', 'php', '<?php\r\n\r\n    use Sy\\Util\\SimpleValidator as Valid;\r\n    use Sy\\Util\\Rule;\r\n\r\n    class ProjectModel extends \\Sy\\Model {\r\n\r\n        public function getProjectList() {\r\n            return $this->db->select( ''projects'' );\r\n        }\r\n\r\n        public function saveProject( array $data = array() ) {\r\n\r\n            $valid = new Valid;\r\n            $valid->attachData( $data );\r\n            $valid\r\n                ->addRule( new Rule( ''short_code'', ''len'', ''2-4'', ''Символ-код проекта должен иметь длину от 2-х до 4-х символов'' ) )\r\n//                ->addRule( new Rule( ''name'', ''regex'', ''/^[a-z0-9]+$/sui'', ''Не допустимый символ-код'' ) )\r\n                ->addRule( new Rule( ''name'', ''len'', ''10-32'', ''Название проекта должено иметь длину от 10-х до 32-х символов'' ) );\r\n//                ->addRule( new Rule( ''name'', ''regex'', ''/^[\\w\\d_-]*$/sui'', ''Не допустимые символы в названии проекта'' ) );\r\n\r\n            $valid->run();\r\n\r\n            if( $valid->isError() ) {\r\n                \\Sy\\Error::warning( join( ''<br />'', $valid->getErrors() ) );\r\n                return false;\r\n            } else {\r\n                $insertQuery = ''\r\n                    INSERT INTO `projects`\r\n                    ( `name`, `short_code`, `description`, `created` )\r\n                    VALUES(\r\n                        \\''''. $this->db->escape( $data[''name''] ) .''\\'',\r\n                        \\''''. $this->db->escape( $data[''short_code''] ) .''\\'',\r\n                        \\''''. $this->db->escape( $data[''description''] ) .''\\'',\r\n                        \\''''. date( ''Y-m-d H:i:s'' ) .''\\''\r\n                    ) ON DUPLICATE KEY UPDATE\r\n                    `name`\r\n                        = \\''''. $this->db->escape( $data[''name''] ) .''\\'',\r\n                    `description`\r\n                        = \\''''. $this->db->escape( $data[''description''] ) .''\\''\r\n                '';\r\n                $this->db->query( $insertQuery );\r\n                $lastId = $this->db->lastId();\r\n                return $lastId;\r\n            }\r\n\r\n        }\r\n\r\n        public function getProject( $id = 0 ) {\r\n            $item = $this->db->select( ''projects'', array(), array(\r\n                ''id''    => $id\r\n            ) );\r\n            return isset( $item[0] ) ? $item[0] : null;\r\n        }\r\n\r\n    }', 0, '', '2014-03-14 14:09:27'),
(159, 'hexColor', 'php', '    function hexColor( $data ) {\r\n        $hexColor       = base_convert( substr( md5( $data ), 6, 6 ), 16, 10 );\r\n        \r\n        if( 0x0000AA >= ( 0x0000FF & $hexColor ) ) {\r\n            $hexColor += 0x000044;\r\n        }\r\n        if( 0x00AA00 >= ( 0x00FF00 & $hexColor ) ) {\r\n            $hexColor += 0x004400;\r\n        }\r\n        if( 0xAA0000 >= ( 0xFF0000 & $hexColor ) ) {\r\n            $hexColor += 0x440000;\r\n        }\r\n        \r\n        $hexColor = base_convert( $hexColor, 10, 16 );\r\n        if( strlen( $hexColor ) < 6 ) {\r\n            $hexColor .= str_repeat( 0, 6 - strlen( $hexColor ) ) . $hexColor;\r\n        }\r\n        \r\n        return $hexColor;\r\n    }', 0, '', '2014-03-26 22:04:10'),
(160, 'TaskController', 'php', '<?php\r\n\r\n    use Sy\\Helper\\Widget as HelperWidget;\r\n\r\n    class TaskController extends \\Sy\\Controller{\r\n\r\n        public function __construct() {\r\n            parent::__construct();\r\n            $auth = new \\Sy\\Auth();\r\n            if( ! $auth->isLogged() ) {\r\n                $this->redirect( ''/user/login/'' );\r\n            }\r\n        }\r\n\r\n        public function myDashboardAction() {\r\n            return $this->render( ''task/dashboard'', array(\r\n\r\n            ) );\r\n        }\r\n\r\n        public function ajaxAction( $method ) {\r\n            if( $this->request->isAjax() ) {\r\n                $this->response->setType( ''ajax'' );\r\n                $this->response->setHeader( ''Content-Type'', ''application/json'' );\r\n\r\n                $taskModel  = $this->getModel( ''task'' );\r\n                $projectID  = $this->request->get( ''id'', 0 );\r\n                $items      = $taskModel->getTaskListByProjectID( $projectID );\r\n                return json_encode( $items );\r\n            } else {\r\n                return ''Access denied'';\r\n            }\r\n        }\r\n\r\n        public function addAction() {\r\n\r\n            $projectModel   = $this->getModel( ''project'' );\r\n            $userModel      = $this->getModel( ''users'' );\r\n            $taskModel      = $this->getModel( ''task'' );\r\n\r\n            if( $this->request->isPost() ) {\r\n                $postData   = $this->request->post( ''task'', array() );\r\n                $membersIDs = $this->request->post( ''members'', array() );\r\n                $taskModel->saveTask( $postData, $membersIDs );\r\n            }\r\n\r\n            return $this->render( ''task/add'', array(\r\n                ''projects''  => $projectModel->getProjectList(),\r\n                ''users''     => $userModel->getUserList()\r\n            ) );\r\n        }\r\n\r\n        public function itemAction( $taskCode, $taskId ) {\r\n            return $this->render( ''task/item'', array() );\r\n        }\r\n\r\n        public function listAction() {\r\n            $auth           = new \\Sy\\Auth();\r\n            $projectModel   = $this->getModel( ''project'' );\r\n            $userModel      = $this->getModel( ''users'' );\r\n            $taskModel      = $this->getModel( ''task'' );\r\n\r\n            $items      = $taskModel->getTaskList( array(\r\n                ''users'' => array( $auth->get( ''id'' ) )\r\n            ) );\r\n\r\n            HelperWidget::addLink( \\Sy\\URI::base() .''task/add/'', ''+ Новая задача'', ''green'' );\r\n            $this->response->addTitle( ''Мои задачи'' );\r\n            return $this->render( ''task/my_list'', array(\r\n                ''users''     => $userModel->getUserList(),\r\n                ''projects''  => $projectModel->getProjectList(),\r\n                ''items''     => $items,\r\n                ''tags_list'' => $taskModel->getTags(),\r\n                ''task_tags'' => $taskModel->getTaskTags()\r\n            ) );\r\n        }\r\n\r\n        public function redirectToListAction(){\r\n            $this->redirect( ''task/list/'' );\r\n        }\r\n\r\n    }', 0, '', '2014-03-28 12:15:01'),
(161, 'index', 'php', '<?php\r\n\r\n	include_once ''./../../sy-frm/sy.php'';\r\n\r\n	Sy::newWebApplication(\r\n		Sy::createConfig( APP_PATH . DS .''conf''. DS .''app.ini'' )\r\n	);\r\n\r\n	$app = Sy::app();\r\n\r\n    // как же я обожаю костыли :-/\r\n    $app->attachObject( ''auth'', new \\Sy\\Auth() );\r\n    $app->attachObject( ''user'', $app->auth );\r\n\r\n    $app->get( ''server_test'', function(){\r\n        die( phpinfo() );\r\n    });\r\n\r\n    include_once ''constans.php'';\r\n\r\n	print $app->run();\r\n', 0, '', '2014-03-30 00:34:04'),
(162, 'Sy\\Helper\\HTML (begin)', 'php', '<?php\r\n\r\n    namespace Sy\\Helper;\r\n\r\n    class HTML extends HelperAbstract {\r\n\r\n        static public function tag( $name, $options = array(), $data, $standAlone = false ) {\r\n            if( $standAlone == true ) {\r\n                return ''<''. $name . ( ! empty( $options ) ? '' ''. self::renderAttributes( $options ) : null ) .'' />'';\r\n            } else {\r\n                return self::openTag( $name, $options ) . $data . self::closeTag( $name );\r\n            }\r\n        }\r\n\r\n        static public function openTag( $name, $options = array() ) {\r\n            return ''<''. $name . ( ! empty( $options ) ? '' ''. self::renderAttributes( $options ) : null ) . ''>'';\r\n        }\r\n\r\n        static public function closeTag( $name ) {\r\n            return ''</ ''. $name .''>'';\r\n        }\r\n\r\n        static public function renderAttributes( array $attrs = array() ) {\r\n            $output = array();\r\n            if( ! empty( $attrs ) ) {\r\n                foreach( $attrs as $key => $value ) {\r\n                    $output[] = $key . ''="''. self::encode( is_array( $value ) ? join( '','', $value ) : $value ) .''"'';\r\n                }\r\n            }\r\n            return join( '' '', $output );\r\n        }\r\n\r\n        static public function encode( $html ) {\r\n            return htmlspecialchars( $html );\r\n        }\r\n\r\n        static public function decode( $html ) {\r\n            return htmlspecialchars_decode( $html );\r\n        }\r\n\r\n    }', 0, '', '2014-03-31 11:31:18'),
(163, 'Language::translate', 'php', 'Language::translate( ''Hi, your status :status:'', array(\r\n    ''status''    => Language::translate( $auth->get( ''status'' ) )\r\n) );', 0, '', '2014-03-31 17:05:47'),
(164, 'VK auth', 'js', 'params = $.param({\r\n					client_id		: options.client_id,\r\n					scope			: options.scope,\r\n					redirect_uri	: options.redirect_url,\r\n					v				: options.v,\r\n					display			: "page",\r\n					response_type	: "token"\r\n				})\r\n\r\n				chrome.identity.launchWebAuthFlow({\r\n					url: "https://oauth.vk.com/authorize?" + params,\r\n					interactive: true\r\n				}, function (responseURL) {\r\n\r\n					if (!responseURL) {\r\n						console.log(''Error: '' + responseURL);\r\n						return;\r\n					}\r\n\r\n					var response = parseQuery(responseURL.replace(options.redirect_url + "#", ""));\r\n\r\n					storage.set({\r\n						''vk_token'' 		: response.access_token,\r\n						''vk_user_id''	: parseInt(response.user_id, 10)\r\n					});\r\n\r\n					options.access_token 	= response.access_token;\r\n					options.user_id			= parseInt(response.user_id, 10);\r\n\r\n					$rootScope.owner_id		= parseInt(response.user_id, 10);\r\n\r\n					callback(options.user_id);\r\n				});', 0, '', '2014-04-03 18:38:24'),
(165, 'Sy2 - !must have', 'php', '<?php\r\n\r\n// html helper\r\n// SyHTML or \\Sy\\HTML\r\n\r\nuse \\Sy\\HTML as SyHTML;\r\n\r\nSyHTML::checkbox( ''field_name'', ''field_value'', ''current_value'' );\r\nSyHTML::labelCheckbox( ''Remember me!'', ''field_name'', ''field_value'', ''current_value'' );\r\nSyHTML::labelCheckboxList( array(\r\n    ''value1'' => ''lol'',\r\n    ''value2'' => ''lol2'',\r\n), ''field_value'', ''current_value'' );', 0, '', '2014-04-08 15:46:53');
INSERT INTO `codes` (`id`, `title`, `language`, `source`, `author_id`, `password`, `added_at`) VALUES
(166, 'SyCrypt', 'php', '<?php\r\n\r\n	namespace Sy\\Util;\r\n\r\n    /**\r\n     * @package SyCrypt || \\Sy\\Utils\\Crypt\r\n     * @author Ivan Gontarenko\r\n     * @site http://my.kill.li/\r\n     * @version 1.0\r\n     */\r\n\r\n    class Crypt{\r\n\r\n        static private\r\n            $symbFrom   = ''1234567890'',\r\n            $symbTo     = ''0123456789'';\r\n\r\n        function setMask( $mask ){\r\n            $mask = (string) $mask;\r\n            if( !! $mask{9} && ! $mask{10} ){\r\n                self::$symbTo = $mask;\r\n            }\r\n        }\r\n\r\n        static function encrypt( $str, $key ){\r\n\r\n            $keyArray       = str_split( sha1( $key ) );\r\n            $strArray       = str_split( $str );\r\n            $keyCount       = 0;\r\n\r\n            $output         = null;\r\n\r\n            for( $i = 0, $c = strlen( $str ); $i < $c; $i++ ){\r\n\r\n                $strNums 	= ord( $strArray[$i] );\r\n                $keyNums 	= ord( $keyArray[$keyCount] );\r\n                $sum 		= $strNums + $keyNums;\r\n\r\n                $output 	.= ( 2 < strlen( $sum ) ) ? $sum : ''0'' . $sum;\r\n                $keyCount++;\r\n\r\n                $keyCount = ( count( $keyArray ) == $keyCount ) ? 0 : $keyCount;\r\n\r\n            }\r\n\r\n            return strtr( $output, self::$symbFrom, self::$symbTo );\r\n\r\n        }\r\n\r\n        static function decrypt( $str, $key ){\r\n\r\n            $keyArray   = str_split( sha1( $key ) );\r\n            $strArray   = str_split( strtr( $str, self::$symbTo, self::$symbFrom ), 3 );\r\n            $keyCount   = 0;\r\n\r\n            $strRes     = null;\r\n\r\n            for( $i = 0, $c = count( $strArray ); $i < $c; $i++ ){\r\n                $strArrayZeroCheck 	    = str_split( $strArray[$i] );\r\n                $strArrNext 		    = ( $strArrayZeroCheck[0] == 0 ) ? $strArrayZeroCheck[1] . $strArrayZeroCheck[2] : $strArray[$i];\r\n                $strRes 			    .= chr( $strArrNext - ord( $keyArray[$keyCount] ) );\r\n                $keyCount++;\r\n                $keyCount 			    = ( count( $keyArray ) == $keyCount ) ? 0 : $keyCount;\r\n            }\r\n\r\n            return $strRes;\r\n\r\n        }\r\n\r\n    }', 0, '', '2014-04-14 14:33:51'),
(167, 'No title', 'js', 'var app = app || {};\r\n\r\n(function() {\r\n	app.ViewerView = app.ModalView.extend({\r\n\r\n		template: Templates.viewer,\r\n\r\n		events: {\r\n			''click .viewer__close'': ''close'',\r\n			''click .viewer__option-show-previews'': ''showPreviews'',\r\n			''click .viewer__control-next'': ''next'',\r\n			''click .viewer__control-prev'': ''prev'',\r\n			''click .viewer__previews li'': ''setCurrent''\r\n		},\r\n\r\n		initialize: function(options) {\r\n            this.options = options || {};\r\n\r\n			//_.bindAll(this, ''setCurrent'');\r\n			this.on(''setCurrent next prev'', function() {\r\n				this.render();\r\n			});\r\n\r\n            this.render();\r\n\r\n			$(''body'').css(''overflow'', ''hidden'');\r\n			this.$el.width(document.body.clientWidth);\r\n			this.$el.height(document.body.clientHeight);\r\n\r\n			this.show();\r\n\r\n            return this;\r\n		},\r\n\r\n		render: function() {\r\n			this.$el.html(this.template({\r\n                name: this.options.current.name,\r\n                size: this.options.current.size,\r\n				id: this.options.current.id,\r\n				items: this.options.items\r\n            }));\r\n\r\n			console.log(this.options.items);\r\n		},\r\n\r\n		next: function() {\r\n			if(this.options.items.length >= this.options.current.id + 1) {\r\n				this.options.current = this.options.items[this.options.current.id].attributes;\r\n\r\n				this.trigger(''next'');\r\n			}\r\n		},\r\n\r\n		prev: function() {\r\n			if(this.options.current.id - 1 > 0) {\r\n				this.options.current = this.options.items[this.options.current.id - 2].attributes;\r\n\r\n				this.trigger(''prev'');\r\n			}\r\n		},\r\n\r\n		close: function() {\r\n			this.hide();\r\n			$(''body'').css(''overflow'', '''');\r\n		},\r\n\r\n		showPreviews:function() {\r\n			this.$el.find(''.viewer__option-show-previews'').toggleClass(''active'');\r\n			this.$el.find(''.viewer__previews'').slideToggle(200);\r\n		},\r\n\r\n		setCurrent: function() {\r\n			this.trigger(''setCurrent'');\r\n		}\r\n	});\r\n})();', 0, '', '2014-04-15 17:49:40'),
(168, 'No title', 'js', 'var app = app || {};\r\n\r\n(function() {\r\n	app.ViewerImagesView = Backbone.View.extend({\r\n		tagName: ''div'',\r\n\r\n		className: ''viewer__images-type'',\r\n\r\n		template: Templates.viewerImages,\r\n\r\n		events: {\r\n			''click .rotate-left'': ''rotateLeft'',\r\n			''click .rotate-right'': ''rotateRight'',\r\n			''click .zoom-in'': ''zoomIn'',\r\n			''click .zoom-out'': ''zoomOut'',\r\n			''click .full-screen'': ''fullScreen'',\r\n			''click .fullsize'': ''toggleFullSize''\r\n		},\r\n\r\n		initialize: function(options) {\r\n			this.options = options || {};\r\n\r\n			this.render();\r\n		},\r\n\r\n		render: function() {\r\n			this.$el.html(this.template({\r\n				current: this.options.item\r\n			}));\r\n		},\r\n\r\n		rotateLeft: function() {\r\n			this.rotate(-1);\r\n		},\r\n\r\n		rotateRight: function() {\r\n			this.rotate(1);\r\n		},\r\n\r\n		zoomIn: function() {\r\n			this.zoom(1);\r\n		},\r\n\r\n		zoomOut: function() {\r\n			this.zoom(-1);\r\n		},\r\n\r\n		fullScreen: function() {\r\n			this.toggleFullScreen();\r\n			this.$el.find(''.full-screen'').toggleClass(''active'');\r\n		},\r\n\r\n		rotate: function(k) {\r\n			var img = this.$el.find(''img'');\r\n\r\n			this.angle = this.angle != 270 && this.angle != -270 ? (this.angle !== undefined ? this.angle + (k * 90) : (k != -1 ? 90 : -90)) : 0;\r\n			this.imageDefaultWidth = this.imageDefaultWidth || img.width();\r\n\r\n			img.css({\r\n				''-webkit-transform'': ''rotate('' + this.angle + ''deg)'',\r\n				''-moz-transform'': ''rotate('' + this.angle + ''deg)'',\r\n				''-ms-transform'': ''rotate('' + this.angle + ''deg)'',\r\n				''transform'': ''rotate('' + this.angle + ''deg)'',\r\n				''filter'': ''progid:DXImageTransform.Microsoft.BasicImage(rotation='' + (this.angle / 90) + '')''\r\n			});\r\n\r\n			if ([90, -90, 270, -270].indexOf(this.angle) != -1) {\r\n				img.width(this.$el.parent().height() - 40);\r\n			}\r\n			else {\r\n				img.width(''auto'');\r\n			}\r\n		},\r\n\r\n		zoom: function(zoom) {\r\n			var img = this.$el.find(''img''),\r\n				kof	= (img[0].naturalWidth - this.imageDefaultWidth || img.width()) / 4;\r\n\r\n			this.zoomSize = (this.zoomSize + zoom) || (this.zoomSize === undefined ? 1 : 0);\r\n			this.imageDefaultWidth = this.imageDefaultWidth || img.width();\r\n			this.imageDefaultHeight = this.imageDefaultHeight || img.height();\r\n\r\n			if (this.zoomSize <= 4 && this.zoomSize >= 0) {\r\n				img.css({\r\n					''width'': this.imageDefaultWidth + (this.zoomSize * kof),\r\n					''height'': ''auto'',\r\n					''max-height'': ''inherit''\r\n				});\r\n\r\n				this.$el.find(''.zoom-out'').removeClass(''disabled'');\r\n				this.$el.find(''.zoom-in'').removeClass(''disabled'');\r\n			}\r\n			else {\r\n				this.zoomSize = zoom > 0 ? this.zoomSize - 1 : this.zoomSize + 1;\r\n			}\r\n\r\n			if (this.zoomSize == 4) {\r\n				this.$el.find(''.zoom-in'').addClass(''disabled'');\r\n			}\r\n			else if (this.zoomSize == 0) {\r\n				this.$el.find(''.zoom-out'').addClass(''disabled'');\r\n			}\r\n		},\r\n\r\n		toggleFullSize: function() {\r\n			var img = this.$el.find(''img'');\r\n\r\n			this.zoomSize = 0;\r\n\r\n			if (img.width() == img[0].naturalWidth) {\r\n				this.zoom(0);\r\n			}\r\n			else {\r\n				this.zoom(4);\r\n			}\r\n\r\n			this.$el.find(''.fullsize'').toggleClass(''active'');\r\n		},\r\n\r\n		toggleFullScreen: function() {\r\n			if (!document.fullscreenElement &&\r\n				!document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement ) {  // current working methods\r\n				if (document.documentElement.requestFullscreen) {\r\n					document.documentElement.requestFullscreen();\r\n				} else if (document.documentElement.msRequestFullscreen) {\r\n					document.documentElement.msRequestFullscreen();\r\n				} else if (document.documentElement.mozRequestFullScreen) {\r\n					document.documentElement.mozRequestFullScreen();\r\n				} else if (document.documentElement.webkitRequestFullscreen) {\r\n					document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\r\n				}\r\n			} else {\r\n				if (document.exitFullscreen) {\r\n					document.exitFullscreen();\r\n				} else if (document.msExitFullscreen) {\r\n					document.msExitFullscreen();\r\n				} else if (document.mozCancelFullScreen) {\r\n					document.mozCancelFullScreen();\r\n				} else if (document.webkitExitFullscreen) {\r\n					document.webkitExitFullscreen();\r\n				}\r\n			}\r\n		}\r\n	});\r\n})();', 0, '', '2014-04-17 13:39:40'),
(169, 'No title', 'php', '#!/usr/bin/env python\r\n\r\nfrom sys import argv as cliArgs\r\n\r\nprint ''Num args %d'' % ( len( cliArgs ) - 1 )\r\n\r\nfor a in cliArgs\r\n    print  a', 0, '', '2014-04-18 15:16:03'),
(170, ':D', 'php', '#!/usr/bin/env python\r\n\r\n# from sys import argv as cliArgs\r\n#\r\n# print ''Num args %d'' % ( len( cliArgs ) - 1 )\r\n#\r\n# for a in cliArgs\r\n#     print  a\r\n\r\nclass Default:\r\n\r\n    def __init__( self, state ):\r\n        self.state = state\r\n        self._test = ''self._test''\r\n        self.__test = ''self.__test''\r\n\r\n\r\n    def checkState( self ):\r\n        if self.state:\r\n            print ''State TRUE''\r\n        else:\r\n            print ''State false''\r\n\r\nclass ExtClass( Default ):\r\n\r\n    def __init__(self):\r\n        Default.__init__(self, False)\r\n\r\n    def checkState( self ):\r\n        print ''Hello from ExtClass. State is: '' + ( ''%d'' % self.state )\r\n\r\n\r\nInstanceOne = Default( False )\r\nInstanceTwo = Default( True )\r\nInstance3   = ExtClass()\r\n\r\nInstanceOne.checkState()\r\nInstanceTwo.checkState()\r\nInstance3.checkState()\r\n\r\n# print InstanceTwo._test\r\n# print InstanceTwo.__test #like private\r\n', 0, '', '2014-04-18 16:13:08'),
(171, 'No title', 'php', '#!/usr/bin/env python\n# db test\nimport MySQLdb as dbo\n\ntry:\n    connection = dbo.connect( ''localhost'', ''root'', ''root'', ''site'' )\nexcept dbo.Error, e:\n    print ''Python MySQLdb Error: [%s, %s]'' % ( e.args[0], e.args[1] )\n\nc = connection.cursor()\n\nc.execute( ''SELECT `id`, `name`, `email` FROM `users`'' )\nrows = c.fetchall()\n\nfor row in rows:\n    print ''UserID:%d | Name: %s | Email: %s'' % row', 0, '', '2014-04-18 17:12:49'),
(172, 'ViewerView', 'js', 'var app = app || {};\r\n\r\n(function() {\r\n	app.ViewerView = app.ModalView.extend({\r\n\r\n		template: Templates.viewer,\r\n\r\n		events: {\r\n			''click .viewer__close'': ''close'',\r\n			''click .viewer__option-show-previews'': ''showPreviews'',\r\n			''click .viewer__control-next'': ''next'',\r\n			''click .viewer__control-prev'': ''prev'',\r\n			''click .viewer__previews-link'': ''setCurrent'',\r\n			''click .viewer__option-disk'': ''showEdiskTree''\r\n		},\r\n\r\n		initialize: function(options) {\r\n            this.options = options || {};\r\n			var el = this.$el;\r\n\r\n			this.on(''viewerNewFile'', this.render);\r\n\r\n			$(window).on(''resize'', function(event) {\r\n				el.css({\r\n					''width'': document.body.clientWidth,\r\n					''height'': document.body.clientHeight,\r\n					''margin'': 0,\r\n					''left''	: 0\r\n				});\r\n			});\r\n\r\n            this.render();\r\n\r\n			$(''body'').css(''overflow'', ''hidden'');\r\n			el.width(document.body.clientWidth);\r\n			el.height(document.body.clientHeight);\r\n\r\n			this.show();\r\n\r\n            return this;\r\n		},\r\n\r\n		render: function() {\r\n			this.$el.html(this.template(this.options));\r\n\r\n			this.typeViewer = this.getTypeViewer(this.options.item.get(''type''));\r\n\r\n			this.$el.find(''.viewer__content'').html(this.typeViewer.$el);\r\n\r\n			if (this.isPreviews) {\r\n				this.showPreviews(0);\r\n			}\r\n		},\r\n\r\n		next: function() {\r\n			var id = this.options.item.get(''id'');\r\n\r\n			if (this.options.item.collection.length >= id + 1) {\r\n				this.options.item = this.options.item.collection.models[id];\r\n\r\n				this.trigger(''viewerNewFile'');\r\n			}\r\n		},\r\n\r\n		prev: function() {\r\n			var id = this.options.item.get(''id'');\r\n\r\n			if (id > 1) {\r\n				this.options.item = this.options.item.collection.models[id - 2];\r\n				this.trigger(''viewerNewFile'');\r\n			}\r\n		},\r\n\r\n		close: function() {\r\n			this.hide();\r\n			$(''body'').css(''overflow'', '''');\r\n		},\r\n\r\n		showPreviews:function(event) {\r\n			var previews = this.$el.find(''.viewer__previews'');\r\n\r\n			if (event) {\r\n				this.$el.find(''.viewer__option-show-previews'').toggleClass(''active'');\r\n				previews.slideToggle(200);\r\n\r\n				this.isPreviews = !this.isPreviews;\r\n			}\r\n			else {\r\n				previews.addClass(''active'').show().find(''ul'').css(''margin-left'', app.ViewerView.previewsMarginLeft);\r\n			}\r\n\r\n			if (previews.find(''ul'')[0].scrollWidth > document.body.clientWidth) {\r\n				previews.find(''.viewer__previews-scroll-to-right, .viewer__previews-scroll-to-left'').show();\r\n\r\n				previews.find(''.viewer__previews-scroll-to-right'').hover(this.previewsScrollToRight, this.previewsScrollToRight);\r\n				previews.find(''.viewer__previews-scroll-to-left'').hover(this.previewsScrollToLeft, this.previewsScrollToLeft);\r\n			}\r\n		},\r\n\r\n		previewsScrollToRight: function(event) {\r\n			var elem = $(''.viewer__previews ul'');\r\n\r\n			if (event.type == ''mouseenter'') {\r\n				elem.animate({\r\n					''margin-left'': document.body.clientWidth - elem[0].scrollWidth\r\n				}, 500);\r\n			}\r\n			else {\r\n				elem.stop();\r\n			}\r\n\r\n			app.ViewerView.previewsMarginLeft = elem.offset().left;\r\n		},\r\n\r\n		previewsScrollToLeft: function(event) {\r\n			var elem = $(''.viewer__previews ul'');\r\n\r\n			elem.animate({\r\n				''margin-left'': 0\r\n			}, 500);\r\n\r\n			if (event.type == ''mouseenter'') {\r\n\r\n			}\r\n			else {\r\n				elem.stop();\r\n			}\r\n\r\n			app.ViewerView.previewsMarginLeft = elem.offset().left;\r\n		},\r\n\r\n		setCurrent: function(event) {\r\n			var index = $(event.currentTarget).parent().index();\r\n\r\n			if ((index + 1) != this.options.item.get(''id'')) {\r\n				this.options.item = this.options.item.collection.models[index];\r\n				this.trigger(''viewerNewFile'');\r\n			}\r\n		},\r\n\r\n		showEdiskTree: function() {\r\n			if (!views.readmsg.attachments.ediskTree) {\r\n				views.readmsg.attachments.ediskTree =  new app.EdiskTreeView();\r\n				views.readmsg.attachments.ediskTree.on(''selected'', this.saveOnEdisk, this);\r\n			}\r\n\r\n			views.readmsg.attachments.ediskTree.show();\r\n		},\r\n\r\n		saveOnEdisk: function(folderId) {\r\n			views.readmsg.message.attachments.saveOnEdisk([this.options.item], folderId,\r\n				function() {\r\n					views.info.show(Lang(''edisk_files_saved''))\r\n				},\r\n				function(data) {\r\n					views.info.show(Lang(data.error));\r\n				});\r\n		},\r\n\r\n		getTypeViewer: function(type) {\r\n			switch (type) {\r\n				case ''image'':\r\n					return new app.ViewerImagesView(this.options);\r\n				break;\r\n				case ''pdf'':\r\n					return new app.ViewerPdfFilesView(this.options);\r\n				break;\r\n				case ''doc'':\r\n				case ''excel'':\r\n					return new app.ViewerDocFilesView(this.options);\r\n				break;\r\n				case ''text'':\r\n					return new app.ViewerTextFilesView(this.options);\r\n				break;\r\n				default:\r\n					return new app.ViewerDefaultView(this.options);\r\n				break;\r\n			}\r\n		}\r\n	});\r\n})();', 0, '', '2014-04-18 17:20:38'),
(173, 'No title', 'php', '$rewriteURLs = array(\r\n    ''/хуевый-url.html''       => ''/zbs-url.html'',\r\n    ''/хуевый-url2.html''      => ''/zbs-url2.html''\r\n);\r\n\r\nfunction redirectURL( & $urls ) {\r\n    if( isset( $_SERVER[''REQUEST_URI''] ) && isset( $urls[$_SERVER[''REQUEST_URI'']] ) ) {\r\n        ob_clean();\r\n        header( ''Location: ''. $urls[$_SERVER[''REQUEST_URI'']] ); die;\r\n    }\r\n}\r\n\r\nredirectURL( $rewriteURLs );', 0, '', '2014-04-24 18:44:59'),
(174, 'No title', 'php', '$rewriteURLs = array(\r\n    ''/test/лол.html''       => ''/zbs-url.html'',\r\n    ''/test/лол2.html''      => ''/zbs-url2.html''\r\n);\r\n\r\nfunction redirectURL( & $urls ) {\r\n    if( isset( $_SERVER[''REQUEST_URI''] ) && isset( $urls[urldecode( $_SERVER[''REQUEST_URI''] )] ) ) {\r\n        ob_clean();\r\n        header( ''Location: ''. $urls[urldecode( $_SERVER[''REQUEST_URI''] )] ); die;\r\n    }\r\n}\r\n\r\nredirectURL( $rewriteURLs );', 0, '', '2014-04-24 18:58:06'),
(175, 'No title', 'php', '$rewriteURLs = array(\r\n    ''/portalini_(украина).html''       => ''/wakewood.html'',\r\n    ''/0.html''      => ''/''\r\n);\r\n\r\nfunction redirectURL( & $urls ) {\r\n    if( isset( $_SERVER[''REQUEST_URI''] ) ) {\r\n        $scriptDir = dirname( $_SERVER[''SCRIPT_NAME''] );\r\n        $uri = str_replace( $scriptDir, '''', $_SERVER[''REQUEST_URI''] );\r\n        if( isset( $urls[urldecode( $uri )] ) ) {\r\n            ob_clean();\r\n            header( ''Location: '' . $scriptDir . $urls[urldecode( $uri )] ); die;\r\n        }\r\n    }\r\n}\r\n\r\nredirectURL( $rewriteURLs );', 0, '', '2014-04-24 19:07:32'),
(176, 'No title', 'js', 'previewScroll: function(k) {\r\n			var elem = $(''.viewer__previews ul'');\r\n\r\n			if (event.type == ''mouseover'') {\r\n				interval = setInterval(function() {\r\n					if(elem.offset().left >= (document.body.clientWidth - elem[0].scrollWidth - k) && (elem.offset().left + k) <= 0) {\r\n						elem.offset({\r\n							left: elem.offset().left + (k * 2)\r\n						});\r\n					}\r\n					else {\r\n						clearInterval(interval);\r\n					}\r\n				}, 10)\r\n			}\r\n			else {\r\n				clearInterval(interval);\r\n			}\r\n\r\n			this.previewsMarginLeft = elem.offset().left;\r\n		},', 0, '', '2014-04-28 12:02:28'),
(177, 'SimpleCrypt', 'php', '<?php\r\n\r\n    class SimpleCrypt {\r\n\r\n        private\r\n            $converter = null;\r\n\r\n        public function __construct( NumConv $converter ){\r\n            $this->converter = $converter;\r\n        }\r\n\r\n        public function encode( $data = null, $secretKey = null ){\r\n\r\n        }\r\n\r\n        public function decode( $data = null, $secretKey = null ){\r\n\r\n        }\r\n\r\n    }', 0, '', '2014-04-28 12:10:04'),
(178, 'SimpleCrypt', 'php', '<?php\r\n\r\n    class SimpleCrypt {\r\n\r\n        const\r\n            SIMPLECRYPT_CHECK_TOKEN = 1,\r\n            SIMPLECRYPT_RANDOM_SALT = 2;\r\n\r\n        private\r\n            $converter  = null,\r\n            $setting    = -1;\r\n\r\n        public function __construct( NumConv $converter, $setting = 0 ){\r\n            $this->converter    = $converter;\r\n            $this->setting      = $setting;\r\n        }\r\n\r\n        public function encode( $data = null, $secretKey = null ){\r\n\r\n            if( $this->setting & self::SIMPLECRYPT_CHECK_TOKEN ) {\r\n                $this->_tokenize( $data );\r\n            }\r\n\r\n            $secretKey  = str_pad( '''', strlen( $data ), $this->_hash( $secretKey ) );\r\n            $data       = $data ^ $secretKey;\r\n            $output     = array();\r\n\r\n            foreach( str_split( $data, 3 ) as $chunk ) {\r\n                $tmp        = unpack( ''H*'', $this->_randSymbol() . $chunk );\r\n                $tmp        = $this->converter->encode( base_convert( $tmp[1], 16, 10 ) );\r\n                $output[]   = str_pad( $tmp, 4, ''0'', STR_PAD_LEFT );\r\n                unset( $tmp );\r\n            }\r\n\r\n            return join( '''', $output );\r\n        }\r\n\r\n        public function decode( $data = null, $secretKey = null ){\r\n\r\n            $output = null;\r\n\r\n            foreach( str_split( $data, 6 ) as $chunk ) {\r\n                $chunk  = base_convert( $this->converter->decode( ltrim( $chunk, ''0'' ) ), 10, 16 );\r\n                $output .= substr( pack( ''H*'', $chunk ), 1 );\r\n            }\r\n\r\n            $secretKey  = $this->_hash( $secretKey );\r\n            $output     = $output ^ str_pad( '''', strlen( $output ) * 2, $secretKey );\r\n\r\n            return  ( $this->setting & self::SIMPLECRYPT_CHECK_TOKEN )\r\n                        ? ( $this->_checkString( $output ) ? substr( $output, 8 ) : false )\r\n                            : $output;\r\n        }\r\n\r\n        private function _tokenize( & $data ) {\r\n            $data = substr( md5( $data ), 0, 8 ) . $data;\r\n        }\r\n\r\n        private function _checkString( $data ) {\r\n            return ( substr( md5( $data ), 0, 8 ) == substr( $data, 0, 8 ) );\r\n        }\r\n\r\n        private function _hash( $data = null ) {\r\n            return md5( $data );\r\n        }\r\n\r\n        private function _randSymbol() {\r\n            return chr( rand( ord( ''A'' ), ord( ''z'' ) ) );\r\n        }\r\n\r\n    }', 0, '', '2014-04-28 15:26:35'),
(179, 'No title', 'js', 'previewsAutoPosition: function() {\r\n			var previews = this.$el.find(''.viewer__previews''),\r\n				current = previews.find(''.current'');\r\n\r\n			if (current.offset().left > (document.body.clientWidth - 134)) {\r\n				previews.find(''ul'').css({\r\n					''margin-left'': previews.find(''ul'').offset().left + (document.body.clientWidth - (current.offset().left + current.outerWidth())) - 10\r\n				});\r\n			}\r\n\r\n			if (previews.find(''.current'').offset().left < 0) {\r\n				previews.find(''ul'').css({\r\n					''margin-left'': previews.find(''ul'').offset().left - current.offset().left + 10\r\n				});\r\n			}\r\n		},', 0, '', '2014-04-29 13:47:55'),
(180, 'ЫЫыы', 'php', 'mL@ 6d4c0640 dPOkcZ \r\niFDE 69464445 dGCmhu \r\ntTKG 74544b47 efVoGI \r\ntAT 74124154 efqAdt \r\nj 6a171219 dIvCSK \r\njLWK 6a4c574b dIUtXI \r\nfF 66121946 dzjXZv \r\na\\M 615c114d dotRPe \r\nbA 62134104 dqblGp \r\nmD 6d164414 dPphgN \r\npE\\K 70455c4b dWFcqM \r\nrF 72171346 eaOfKH \r\ncBE 63014245 dsiidK \r\nuGW 75184757 ehIGHE \r\nuFED 75464544 eiedrB \r\ndPOkcZ__dGCmhu__efVoGI__efqAdt__dIvCSK__dIUtXI__dzjXZv__dotRPe__dqblGp__dPphgN__dWFcqM__eaOfKH__dsiidK__ehIGHE__eiedrB__\r\ntest test test test test test test test test', 0, '', '2014-05-28 15:42:49'),
(181, 'fuck', 'php', '��Ⲵ�������D������������������C��D��������FM]ALFMWJR \r\nx��Ⲵ� 78e8fce2b2b48f c4Gh44RtZ1 \r\nq������ 71e0b9e2b0e58f cTmr9UgIJI \r\neD����� 6544b6a3e88ce8 cAP7beV35t \r\nj����� 6adde8bd19b281 cI4wqOEv9f \r\ny����� 7913e5f3b580e5 c4ViPFuT3w \r\nh���C�� 68b0e8b743e38a cFREkrK55v \r\nsD����� 7344e1aee886e3 cVo3XTRhJN \r\nt���FM] 74b7e0eb464d5d cXwQwUHu96 \r\neALFMWJ 65414c464d574a cAOUhSvPkn \r\ngR 671619020752 Kd9TtJtj \r\n34033170038043791 78e8fce2b2b48f \r\n32053761345119631 71e0b9e2b0e58f \r\n28504523872439528 6544b6a3e88ce8 \r\n30080339206058625 6adde8bd19b281 \r\n34080350539186405 7913e5f3b580e5 \r\n29467911131489162 68b0e8b743e38a \r\n32445358414530275 7344e1aee886e3 \r\n32853273946246493 74b7e0eb464d5d \r\n28500768500569930 65414c464d574a \r\n113344606504786 671619020752 \r\n��Ⲵ�������D������������������C��D��������FM]ALFMWJR\r\nc4Gh44RtZ100cTmr9UgIJI00cAP7beV35t00cI4wqOEv9f00c4ViPFuT3w00cFREkrK55v00cVo3XTRhJN00cXwQwUHu9600cAOUhSvPkn00Kd9TtJtj0000\r\nПросто Коля и Вася и Петя test test 123', 0, '', '2014-05-29 18:22:58'),
(182, 'No title', 'js', 'globalHotkeys: function() {\r\n			$(document).bind(''keydown'', function(e) {\r\n				if (e.target.tagName.toLowerCase() != ''input'' && e.target.className != ''editor__area'' && e.target.tagName.toLowerCase() != ''textarea'') {\r\n					switch (e.keyCode) {\r\n						case 78:\r\n							e.preventDefault();\r\n\r\n							app.page.navigate(''#sendmsg'', {trigger: true});\r\n							break;\r\n						case 67:\r\n							e.preventDefault();\r\n\r\n							if ($(''.contacts'').hasClass(''show'')) {\r\n								views.contacts.hide();\r\n							}\r\n							else {\r\n								views.contacts.show();\r\n							}\r\n							break;\r\n						case 82:\r\n							if (Backbone.history.fragment.indexOf(''readmsg'') !== -1 && $(''.readmsg__reply-content'').css(''display'') == ''none'') {\r\n								$(''.readmsg__reply-hint'').click();\r\n							}\r\n							break;\r\n						case 70:\r\n							if (Backbone.history.fragment.indexOf(''readmsg'') !== -1) {\r\n								if (e.shiftKey) {\r\n									app.page.navigate(''#sendmsg/mforward/'' + views.readmsg.id, {trigger: true});\r\n								}\r\n								else {\r\n									app.page.navigate(''#sendmsg/forward/'' + views.readmsg.id, {trigger: true});\r\n								}\r\n							}\r\n							break;\r\n						case 51:\r\n							var link = $(''.controls-link.remove'');\r\n							if (e.shiftKey && link.length && !link.hasClass(''disabled'')) {\r\n								e.preventDefault();\r\n\r\n								link.click();\r\n							}\r\n							break;\r\n						case 49:\r\n							var link = $(''.controls-link.spam'');\r\n							if (e.shiftKey && link.length && !link.hasClass(''disabled'')) {\r\n								e.preventDefault();\r\n\r\n								link.click();\r\n							}\r\n							break;\r\n						case 77:\r\n							// Доработать\r\n							if (Backbone.history.fragment.indexOf(''readmsg'') !== -1) {\r\n								$(''.controls-link.move'').click();\r\n							}\r\n							break;\r\n						case 85:\r\n							if (Backbone.history.fragment.indexOf(''readmsg'') !== -1) {\r\n								$(''.readmsg__head-unread'').click();\r\n							}\r\n							else if (Backbone.history.fragment.indexOf(''msglist'') !== -1) {\r\n								var index = $(''#msglist'').find(''a:focus'').parents(''.msglist__row'').index();\r\n								index = index > 0 ? index : 0;\r\n\r\n								$(''.msglist__row'').eq(index).find(''.msglist__row-unread span'').click();\r\n							}\r\n							break;\r\n						case 106:\r\n							if (Backbone.history.fragment.indexOf(''readmsg'') !== -1) {\r\n								if (views.readmsg.message.get(''icon'') > 0) {\r\n									views.readmsg.mark(0);\r\n								}\r\n								else {\r\n									views.readmsg.mark(1);\r\n								}\r\n							}\r\n							else if (Backbone.history.fragment.indexOf(''msglist'') !== -1) {\r\n								var index = $(''#msglist'').find(''a:focus'').parents(''.msglist__row'').index();\r\n								index = index > 0 ? index : 0;\r\n\r\n								if (views.msglist.messages.models[index].get(''icon'') > 0) {\r\n									views.msglist.messages.models[index].mark(0);\r\n								}\r\n								else {\r\n									views.msglist.messages.models[index].mark(1);\r\n								}\r\n							}\r\n							break;\r\n						case 190:\r\n							var link = $(''.controls-link.more'');\r\n							if (link.length && !link.hasClass(''disabled'')) {\r\n								link.click();\r\n							}\r\n							break;\r\n						case 88:\r\n							var elem = $(''#msglist'').find(''a:focus'');\r\n\r\n							if (elem.length) {\r\n								var checkbox = elem.parents(''.msglist__row'').find(''.checkbox input'');\r\n								checkbox.click();\r\n							}\r\n							else {\r\n								var checkbox = $(''#msglist'').find(''.msglist__row'').eq(0).find(''.checkbox input'');\r\n\r\n								$(''.msglist__row'').removeClass(''this'').eq(0).addClass(''this'').find(''.msglist__row-address a'').focus();\r\n								checkbox.click();\r\n							}\r\n							break;\r\n						case 111:\r\n						case 191:\r\n							e.preventDefault();\r\n\r\n							if (e.shiftKey) {\r\n								$(''.search__more'').click();\r\n							}\r\n							else {\r\n								$(''.search input'').focus();\r\n							}\r\n							break;\r\n						case 39:\r\n						case 37:\r\n							if (e.shiftKey) {\r\n								if (Backbone.history.fragment.indexOf(''msglist'') !== -1 || Backbone.history.fragment.indexOf(''readmsg'') !== -1) {\r\n									var link = $(e.keyCode == 39 ? ''.pager__right'' : ''.pager__left'');\r\n\r\n									if (!link.hasClass(''disabled'')) {\r\n										link.click();\r\n									}\r\n								}\r\n							}\r\n							break;\r\n					}\r\n\r\n					//console.log(e.keyCode);\r\n				}\r\n			}.bind(this));', 0, '', '2014-06-03 11:02:27'),
(183, 'SimpleCrypt', 'php', '<?php\r\n\r\n    class SimpleCrypt {\r\n\r\n        const\r\n            SIMPLECRYPT_CHECK_TOKEN         = 1,\r\n            SIMPLECRYPT_RANDOM_SALT         = 2,\r\n            SIMPLECRYPT_SPLIT_SIZE          = 3,\r\n            SIMPLECRYPT_CHUNKPAD_SYMBOL     = ''0'';\r\n\r\n        private\r\n            $converter  = null,\r\n            $setting    = -1;\r\n\r\n        public function __construct( NumConv $converter, $setting = 0 ){\r\n            $this->converter    = $converter;\r\n            $this->setting      = $setting;\r\n        }\r\n\r\n        public function encode( $data = null, $secretKey = null ){\r\n\r\n            if( $this->setting & self::SIMPLECRYPT_CHECK_TOKEN ) {\r\n                $this->_tokenize( $data );\r\n            }\r\n\r\n            $secretKey  = str_pad( '''', strlen( $data ), $this->_hash( $secretKey ) );\r\n            $data       = $data ^ $secretKey;\r\n            $output     = array();\r\n\r\n            foreach( str_split( $data, self::SIMPLECRYPT_SPLIT_SIZE ) as $chunk ) {\r\n                $tmp        = $this->_randSymbol() . $chunk;\r\n                $tmp        = unpack( ''H*'', $tmp );\r\n                $tmp        = $this->converter->encode( base_convert( $tmp[1], 16, 10 ) );\r\n                $output[]   = str_pad( $tmp, self::SIMPLECRYPT_SPLIT_SIZE * 2, self::SIMPLECRYPT_CHUNKPAD_SYMBOL, STR_PAD_RIGHT );\r\n                unset( $tmp );\r\n            }\r\n\r\n            return join( '''', $output );\r\n        }\r\n\r\n        public function decode( $data = null, $secretKey = null ){\r\n\r\n            $output = null;\r\n\r\n            foreach( str_split( $data, self::SIMPLECRYPT_SPLIT_SIZE * 2 ) as $i => $chunk ) {\r\n                $chunk = rtrim( $chunk, self::SIMPLECRYPT_CHUNKPAD_SYMBOL );\r\n                $chunk  = $this->converter->decode( $chunk );\r\n                $chunk  = base_convert( $chunk, 10, 16 );\r\n                $output .= substr( pack( ''H*'', $chunk ), 1 );\r\n            }\r\n\r\n            $secretKey  = str_pad( '''', strlen( $output ) * 2, $this->_hash( $secretKey ) );\r\n            $output     = $output ^ $secretKey;\r\n\r\n            return  ( $this->setting & self::SIMPLECRYPT_CHECK_TOKEN )\r\n                        ? ( $this->_checkString( $output ) ? substr( $output, 8 ) : false )\r\n                            : $output;\r\n        }\r\n\r\n        public function _encodedChunkSize() {\r\n            return ceil( self::SIMPLECRYPT_SPLIT_SIZE / $this->converter->getRatio() );\r\n        }\r\n\r\n        private function _tokenize( & $data ) {\r\n            $data = substr( md5( $data ), 0, 8 ) . $data;\r\n        }\r\n\r\n        private function _checkString( $data ) {\r\n            return ( substr( md5( $data ), 0, 8 ) == substr( $data, 0, 8 ) );\r\n        }\r\n\r\n        private function _hash( $data = null ) {\r\n            return md5( $data );\r\n        }\r\n\r\n        private function _randSymbol() {\r\n            return chr( rand( ord( ''a'' ), ord( ''z'' ) ) );\r\n        }\r\n\r\n    }', 0, '', '2014-06-03 11:16:11'),
(184, 'NumConv', 'php', '<?php\r\n\r\n// Ivan Gontarenko\r\n\r\n    class NumConv {\r\n\r\n        const\r\n            USE_UPPERCASE   = 1,\r\n            USE_LOWERCASE   = 2,\r\n            USE_NUMS        = 4,\r\n            USE_SYMBOLS     = 8;\r\n\r\n        private\r\n            $map        = array(),\r\n            $mapSize    = 0;\r\n\r\n        public function __construct( $mode = 0 ){\r\n\r\n            $this->map = array( -1 );\r\n\r\n            if( $mode & self::USE_LOWERCASE ) {\r\n                $this->map = array_merge( $this->map, range( ''a'', ''z'' ) );\r\n            }\r\n\r\n            if( $mode & self::USE_UPPERCASE ) {\r\n                $this->map = array_merge( $this->map, range( ''A'', ''Z'' ) );\r\n            }\r\n\r\n            if( $mode & self::USE_NUMS ) {\r\n                $this->map = array_merge( $this->map, range( ''0'', ''9'' ) );\r\n            }\r\n\r\n            if( $mode & self::USE_SYMBOLS ) {\r\n                $this->map = array_merge( $this->map, array( ''_'', ''-'' ) );\r\n            }\r\n\r\n            unset( $this->map[0] );\r\n\r\n            $this->mapSize = count( $this->map );\r\n        }\r\n\r\n        public function addCustom( array $customData = array() ) {\r\n            $this->map      = array_merge( $this->map, $customData );\r\n            $this->mapSize  = count( $this->map );\r\n        }\r\n\r\n        public function getRatio() {\r\n            return round( $this->mapSize / 10, 4 );\r\n        }\r\n\r\n        public function encode( $intData = 0 ) {\r\n            $mapStr     = join( '''', $this->map );\r\n            $result     = '''';\r\n\r\n            if( 0 >= $intData ) return 0;\r\n\r\n            do {\r\n                $index      = bcmod( $intData, $this->mapSize );\r\n                $result     = $mapStr[$index] . $result;\r\n                $intData    = floor( bcdiv( $intData, $this->mapSize ) );\r\n                if( $intData == 0 ) break;\r\n            } while ( true );\r\n\r\n            return $result;\r\n        }\r\n\r\n        public function decode( $data = '''' ){\r\n            $length     = strlen( $data ) - 1;\r\n            $resultInt  = 0;\r\n            $mapStr     = join( '''', $this->map );\r\n\r\n            if( 0 > $length ) return $resultInt;\r\n\r\n            $data       = strrev( $data );\r\n\r\n            for( $i = 0; $i <= $length; $i++ ){\r\n                $symbol     = $data[$i];\r\n                $position   = strpos( $mapStr, $symbol );\r\n                $resultInt  = bcadd( $resultInt, bcmul( $position, bcpow( $this->mapSize, $i ) ) );\r\n            }\r\n\r\n            return $resultInt;\r\n        }\r\n\r\n    }', 0, '', '2014-06-03 11:16:44'),
(185, 'No title', 'js', '$(".sidebar__list:not(.virtual) a, .sidebar__list-link.folders, .sidebar__folders-list a").droppable({\r\n				hoverClass: ''sidebar__list-link-droppable-hover'',\r\n				tolerance: ''pointer'',\r\n\r\n				drop: function(e) {\r\n					if ($(this).parents(''.sidebar__folders'').length && !$(this).parents(''.sidebar__folders'').hasClass(''show'')) {\r\n						return false;\r\n					}\r\n\r\n					e.currentTarget = e.target;\r\n					if ($(e.target).attr(''data-folder'') && !$(e.target).hasClass(''current'')) {\r\n						this.controls.move(e);\r\n\r\n						$(".sidebar__list:not(.virtual) a, .sidebar__list-link.folders").droppable(''enable'');\r\n					}\r\n				}.bind(this),\r\n\r\n				over: function(e) {\r\n\r\n					if ($(this).parents(''.sidebar__folders'').length && timeout) {\r\n						clearTimeout(timeout);\r\n						timeout = undefined;\r\n\r\n						return false;\r\n					}\r\n\r\n					if ($(this).hasClass(''folders'') && !$(this).parents(''.sidebar__folders'').hasClass(''show'')) {\r\n						$(this).click();\r\n\r\n						$(".sidebar__list:not(.virtual) a, .sidebar__list-link.folders").droppable(''disable'');\r\n					}\r\n				},\r\n\r\n				out: function(e) {\r\n					if ($(this).parents(''.sidebar__folders'').hasClass(''show'') && $(this).parents(''.sidebar__folders'').length && !timeout) {\r\n						timeout = setTimeout(function() {\r\n							$(''.sidebar__list-link.folders'').click();\r\n\r\n							$(".sidebar__list:not(.virtual) a, .sidebar__list-link.folders").droppable(''enable'');\r\n						}, 1000);\r\n					}\r\n				}\r\n			});', 0, '', '2014-06-06 12:01:18'),
(186, 'No title', 'js', '(function(scope) {\r\n	"use strict";\r\n\r\n	var init;\r\n\r\n	scope.$ = function(selector) {\r\n		return new init(selector);\r\n	};\r\n\r\n	$.core = $.prototype = {\r\n		ready: function(callback) {\r\n			this._event(document, "DOMContentLoaded", callback);\r\n\r\n			return this;\r\n		},\r\n\r\n		parent: function() {\r\n			this[0] = this[0].parentNode;\r\n			this.length = 1;\r\n\r\n			return this;\r\n		},\r\n\r\n		_event: function(elems, type, callback) {\r\n			if (elems === document) {\r\n				document.addEventListener(type, function(e) {\r\n					callback.bind(this)(e);\r\n				}.bind(this));\r\n			}\r\n			else {\r\n				[].forEach.call(elems, function(el) {\r\n					el.addEventListener(type, function(e) {\r\n						callback.bind(this)(e);\r\n					}.bind(this));\r\n				}.bind(this));\r\n			}\r\n		}\r\n	};\r\n\r\n	init = $.core.init = function(selector) {\r\n		if (!selector) {\r\n			return this;\r\n		}\r\n\r\n		if (typeof selector === "string") {\r\n			var elems = document.querySelectorAll(selector);\r\n\r\n			for (var i = 0; i < elems.length; i++) {\r\n				this[i] = elems[i];\r\n			}\r\n\r\n			this.length = elems.length;\r\n			this.selector = selector;\r\n		}\r\n\r\n		return this;\r\n	};\r\n\r\n	$.core.init.prototype = $.core;\r\n})(window);\r\n\r\n$(document).ready(function() {\r\n	$(''div'').parent();\r\n});', 0, '', '2014-06-16 12:30:04'),
(187, 'attr', 'js', 'attr: function( params ){        \r\n                        if( typeof params == ''object'' ){\r\n                            this.foreach(function(){\r\n                                for( var param in params ) \r\n                                    this[param] = params[ param ];\r\n                            });\r\n                            return this;\r\n                        }else if( typeof params == ''string'' ){\r\n                            return this[0][params];\r\n                        }        \r\n                    },', 0, '', '2014-06-16 12:30:33'),
(188, 'BikeJS', 'js', '/**\r\n * BikeJS Library\r\n * Велосипед для личных нужд\r\n *\r\n * @ver 1.0\r\n * @author Alex Hyrenko\r\n * @email alex.hyrenko@gmail.com\r\n */\r\n\r\n(function(scope) {\r\n    "use strict";\r\n\r\n    scope.BikeJS = function (selector) {\r\n        return new BikeJS.Init(selector);\r\n    };\r\n\r\n    BikeJS.Modules = {};\r\n\r\n    BikeJS.Core = BikeJS.prototype = {\r\n        constructor: BikeJS,\r\n        length: 0,\r\n\r\n        getElements: function() {\r\n            return [].slice.call(this);\r\n        },\r\n\r\n        each: function(elements, func) {\r\n              [].forEach.call(elements, func);\r\n        },\r\n\r\n        pushElements: function(elements) {\r\n            if (elements.length && elements != '''') {\r\n                return merge(BikeJS.Core.constructor(), elements);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        extend: function () {\r\n            for (var object in this.constructor.Modules) {\r\n                for (var method in this.constructor.Modules[object]) {\r\n                    this[method] = this.constructor.Modules[object][method];\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    BikeJS.Init = function(selector) {\r\n        if (!selector) {\r\n            return this;\r\n        }\r\n\r\n        if (typeof selector === "string") {\r\n            var elements = document.querySelectorAll(selector);\r\n\r\n            return this.pushElements(elements);\r\n        }\r\n        else if (selector instanceof Node) {\r\n            return this.pushElements([selector]);\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    BikeJS.Modules.Events =  {\r\n        _events: [],\r\n\r\n        ready: function(callback) {\r\n            this.on(''DOMContentLoaded'', function(e) {\r\n                callback.bind(this)(e);\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        click: function(callback) {\r\n            this.on(''click'', callback);\r\n\r\n            return this;\r\n        },\r\n\r\n        focus: function() {\r\n            this[0].focus();\r\n\r\n            return this;\r\n        },\r\n\r\n        on: function(event, callback) {\r\n            var elements = this.getElements();\r\n\r\n            if (elements.length) {\r\n                this.each(elements, function(el) {\r\n                    el.addEventListener(event, callback, false);\r\n\r\n                    if (!this._events[el]) {\r\n                        this._events[el] = [];\r\n                    }\r\n\r\n                    this._events[el].push({\r\n                        event: event,\r\n                        func: callback\r\n                    });\r\n                }.bind(this));\r\n            }\r\n            else {\r\n                document.addEventListener(event, callback, false);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        off: function(event, callback) {\r\n            var elements = this.getElements();\r\n\r\n            if (elements.length) {\r\n                this.each(elements, function(el) {\r\n                    el.removeEventListener(event, callback, false);\r\n                });\r\n            }\r\n            else {\r\n                document.removeEventListener(event, callback, false);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    BikeJS.Modules.DOM = {\r\n        html: function(value) {\r\n            if (value) {\r\n                this.each(this.getElements(), function(el) {\r\n                    el.innerHTML = value;\r\n                });\r\n            }\r\n\r\n            return value ? this : this[0].innerHTML;\r\n        },\r\n\r\n        text: function(value) {\r\n            if (value) {\r\n                this.each(this.getElements(), function(el) {\r\n                    el.innerText = value;\r\n                });\r\n\r\n                return this;\r\n            }\r\n\r\n            return this[0].innerText;\r\n        },\r\n\r\n        val: function(value) {\r\n            if (value) {\r\n                this.each(this.getElements(), function(el) {\r\n                    el.value = value;\r\n                });\r\n\r\n                return this;\r\n            }\r\n\r\n            return this[0].value;\r\n        },\r\n\r\n        append: function(html) {\r\n            this.toElements(''insertAdjacentHTML'', ''beforeend'', html);\r\n\r\n            return this;\r\n        },\r\n\r\n        appendInto: function(html) {\r\n            this.toElements(''insertAdjacentHTML'', ''afterend'', html);\r\n\r\n            return this;\r\n        },\r\n\r\n        prepend: function(html) {\r\n            this.toElements(''insertAdjacentHTML'', ''afterbegin'', html);\r\n\r\n            return this;\r\n        },\r\n\r\n        prependInto: function(html) {\r\n            this.toElements(''insertAdjacentHTML'', ''beforebegin'', html);\r\n\r\n            return this;\r\n        },\r\n\r\n        parent: function() {\r\n            var _parents = [];\r\n            this.each(this.getElements(), function(el) {\r\n                _parents.push(el.parentNode);\r\n            });\r\n\r\n            return this.pushElements(_parents);\r\n        },\r\n\r\n        next: function() {\r\n            return this.pushElements([this[0].nextSibling.nextSibling]);\r\n        },\r\n\r\n        prev: function() {\r\n            return this.pushElements([this[0].previousElementSibling]);\r\n        },\r\n\r\n        attr: function(key, value) {\r\n            if (value) {\r\n                this.toElements(''setAttribute'', key, value);\r\n            }\r\n\r\n            return value ? this : this[0].getAttribute(key);\r\n        },\r\n\r\n        data: function(key, value) {\r\n            if (value || typeof key === "object") {\r\n                this.each(this.getElements(), function(element) {\r\n                    if (typeof key === "object") {\r\n                        for (var obj in key) {\r\n                            element.dataset[obj] = key[obj];\r\n                        }\r\n                    }\r\n                    else {\r\n                        element.dataset[key] = value;\r\n                    }\r\n                });\r\n\r\n                return this;\r\n            }\r\n\r\n            if (!key) {\r\n                return this[0].dataset;\r\n            }\r\n\r\n            return this[0].dataset[key];\r\n        },\r\n\r\n        addClass: function(name) {\r\n            this.each(this.getElements(), function(el) {\r\n                el.classList.add(name);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        hasClass: function(name) {\r\n            return this[0].classList.contains(name);\r\n        },\r\n\r\n        toggleClass: function(name) {\r\n            this.each(this.getElements(), function(el) {\r\n                el.classList.toggle(name);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        removeClass: function(name) {\r\n            this.each(this.getElements(), function(el) {\r\n                el.classList.remove(name);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        index: function () {\r\n            return [].slice.call(this[0].parentNode.children).indexOf(this[0]);\r\n        },\r\n\r\n        find: function(selector) {\r\n            var elements = [].reduce.call(this.getElements(), function matcher(arr, elem) {\r\n                var matches = elem.querySelectorAll(selector);\r\n                if (matches.length) {\r\n                    [].forEach.call(matches, function pusher(item) {\r\n                        arr.push(item);\r\n                    });\r\n                }\r\n\r\n                return arr;\r\n            }, []);\r\n\r\n            return this.pushElements(elements);\r\n        },\r\n\r\n        last: function() {\r\n            return this.pushElements(this.getElements().slice(-1));\r\n        },\r\n\r\n        first: function() {\r\n            return this.pushElements([this[0]]);\r\n        },\r\n\r\n        eq: function(index) {\r\n            if (typeof index === "number" && this[index]) {\r\n                return this.pushElements([this[index]]);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        remove: function() {\r\n            this.each(this.getElements(), function(el) {\r\n                el.parentNode.removeChild(el);\r\n\r\n                if (this._events[el].length) {\r\n                    var events = this._events[el];\r\n\r\n                    for (var i = 0; i < events.length; i++) {\r\n                        el.removeEventListener(events[i][''event''], events[i][''func''], false);\r\n                    }\r\n\r\n                    events.length = 0;\r\n                }\r\n            }.bind(this));\r\n\r\n            return this.pushElements([document]);\r\n        },\r\n\r\n        toElements: function() {\r\n            if (typeof document.body[arguments[0]] === "function") {\r\n                var args = arguments;\r\n\r\n                this.each(this.getElements(), function(el) {\r\n                    el[args[0]].apply(el, [].slice.call(args, 1));\r\n                });\r\n            }\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    BikeJS.Modules.Styles = {\r\n        show: function() {\r\n            this.each(this.getElements(), function(el) {\r\n                el.style.display = '''';\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        hide: function() {\r\n            this.each(this.getElements(), function(el) {\r\n                el.style.display = ''none'';\r\n            });\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    var merge = function(first, second) {\r\n        var length = +second.length,\r\n            j = 0,\r\n            i = first.length;\r\n\r\n        while ( j < length ) {\r\n            first[i++] = second[j++];\r\n        }\r\n\r\n        first.length = i;\r\n\r\n        return first;\r\n    };\r\n\r\n    BikeJS.Core.extend();\r\n\r\n    BikeJS.Init.prototype = BikeJS.Core;\r\n})(window);', 0, '', '2014-06-18 18:22:10'),
(189, 'No title', 'php', 'var AdvertDOM =  {\r\n	createDocument: function (onload, removed) {\r\n		''use strict'';\r\n\r\n		var doc = { },\r\n			document = window.document,\r\n			IFrame = document.createElement(''iframe''),\r\n			interval = 0;\r\n\r\n		try {\r\n			IFrame.style.height = 0;\r\n			IFrame.style.width = 0;\r\n			IFrame.style.visibility = ''hidden'';\r\n			IFrame.setAttribute(''sanbox'', ''allow-scripts'');\r\n			IFrame.innerHTML = ''<body></body>'';\r\n\r\n			document.body.appendChild(IFrame);\r\n\r\n			doc = IFrame.contentDocument || IFrame.contentWindow.document;\r\n\r\n			interval = window.setInterval(function() {\r\n				if (doc.readyState === "complete") {\r\n					if (onload && typeof onload === "function") {\r\n						onload(doc);\r\n					}\r\n\r\n					(removed === 2) && document.body.removeChild(IFrame);\r\n					window.clearInterval(interval);\r\n				}\r\n			}, 100);\r\n\r\n			removed === 1 && document.body.removeChild(IFrame);\r\n		} catch (e) {\r\n			console.warn(''AdvertDOM:'', e);\r\n		}\r\n\r\n		return doc;\r\n	},\r\n\r\n	advertScope: function(document, script) {\r\n		''use strict'';\r\n\r\n		var permissions = {\r\n				document: document,\r\n				location: {\r\n					href: this.location.href,\r\n					host: this.location.host,\r\n					protocol: this.location.protocol\r\n				},\r\n				onerror: []\r\n			},\r\n			scope = {},\r\n			name = 0;\r\n\r\n		try {\r\n			for (name in this) {\r\n				scope[name] = permissions[name] || undefined;\r\n			}\r\n\r\n			(new Function( "with(this) { try { " + script + " } catch(e){ onerror.push(e) } }")).call(scope);\r\n		} catch (e) {\r\n			console.warn(''AdvertDOM:'', e);\r\n		}\r\n\r\n		return scope.document;\r\n	}\r\n};', 0, '', '2014-06-20 13:14:55');
INSERT INTO `codes` (`id`, `title`, `language`, `source`, `author_id`, `password`, `added_at`) VALUES
(190, 'Sy\\ORM\\Table\\Row', 'php', '<?php\r\n\r\n    namespace Sy\\ORM\\Table;\r\n\r\n    use Sy\\ORM\\Connection,\r\n        Sy\\ORM\\Table,\r\n        Sy\\ORM\\Exception,\r\n        Sy\\ORM\\Query;\r\n\r\n    class Row {\r\n\r\n        private\r\n            $table  = null,\r\n            $row    = array(),\r\n            $pk     = 0,\r\n            $query  = null;\r\n\r\n        public function __construct( array $row = array(), Table $table, Connection $connection ) {\r\n            $this->connection   = $connection;\r\n            $this->table        = $table;\r\n            $this->row          = $row;\r\n            $this->pk           = $this->table->pk();\r\n            $this->query        = new Builder;\r\n        }\r\n\r\n        public function __get( $key ) {\r\n            return $this->getCell( $key );\r\n        }\r\n\r\n        public function getCell( $key = null ) {\r\n            return isset( $this->row[$key] ) ? $this->row[$key] : null;\r\n        }\r\n\r\n        public function toJSON() {\r\n            return json_encode( (object) $this->row );\r\n        }\r\n\r\n        public function save() {\r\n\r\n        }\r\n\r\n        public function delete() {\r\n\r\n        }\r\n\r\n        public function update() {\r\n\r\n        }\r\n\r\n    }', 0, '', '2014-06-24 13:00:31'),
(191, 'Sy\\ORM\\Exception\\Error', 'php', '<?php\r\n\r\n    namespace Sy\\ORM\\Exception;\r\n\r\n    class Error extends \\Exception {\r\n        public function __construct( $message = null ) {\r\n            $prev = null;\r\n            if( $message !== null ) {\r\n                $prev       = $message;\r\n                $message    = null;\r\n            }\r\n\r\n            if( $prev !== null ) {\r\n                $message = __CLASS__ . '' [wrapped: '' . $prev . '']'';\r\n                parent::__construct( $message );\r\n            } else {\r\n                parent::__construct( $message );\r\n            }\r\n        }\r\n    }', 0, '', '2014-06-24 15:59:51'),
(192, 'No title', 'js', '(function() {\r\n	try {\r\n		if (window.top !== window) {\r\n			return true;\r\n		}\r\n\r\n		var iFrame = document.createElement(''iframe'');\r\n		iFrame.src =\r\n			"javascript:var s = document.createElement(''script'');" +\r\n			"s.src = ''/js/1402670877/adriver.core.2.js'';" +\r\n			"document.head.appendChild(s);" +\r\n			"s.onload = function() { new adriver.Plugin.require(''autoLoad.adriver''); new adriver(''adriver-test'', {sid:112738,bt:52,pz:2,bn:2}); }";\r\n		iFrame.style.height = 0;\r\n		iFrame.style.width = 0;\r\n		iFrame.style.visibility = ''hidden'';\r\n		iFrame.setAttribute(''sandbox'', ''allow-scripts'');\r\n\r\n		document.body.appendChild(iFrame);\r\n	} catch (e) {\r\n		typeof console === "object" && console.warn(''AdvertDOM:'', e);\r\n	}\r\n}());', 0, '', '2014-06-24 16:00:01'),
(193, '\\Sy\\ORM\\Common\\Config', 'php', '<?php\r\n\r\n    namespace Sy\\ORM\\Common;\r\n\r\n    use \\Sy\\ORM\\Exception\\Error as Exception;\r\n\r\n    class Config {\r\n\r\n        static private\r\n            $config = array();\r\n\r\n        static public function setConfig( $configFile = null ) {\r\n            if( ! file_exists( $configFile ) ) {\r\n                throw new Exception( ''Config file not found (''. $configFile .'')'' );\r\n            }\r\n            $tmpArray       = parse_ini_file( $configFile, true );\r\n            self::$config   = self::arrayToObject( $tmpArray[''orm''] ); unset( $tmpArray );\r\n        }\r\n\r\n        static public function getInstance() {\r\n            static $instance;\r\n\r\n            if( ! $instance && ! ( $instance instanceof self ) ) {\r\n                $instance = new self;\r\n            }\r\n\r\n            return $instance;\r\n        }\r\n\r\n        public function get( $path, $default = null ) {\r\n            if( ! $path ) return $default;\r\n\r\n            $config = self::$config;\r\n\r\n            foreach( explode( ''.'', $path ) as $chunk ) {\r\n                if( isset( $config->{ $chunk } ) ) {\r\n                    $config = $config->{ $chunk }; continue;\r\n                } else {\r\n                    return $default;\r\n                }\r\n            }\r\n\r\n            return $config;\r\n        }\r\n\r\n        static private function arrayToObject( array $array = array() ) {\r\n            $object = new \\stdClass();\r\n            foreach( $array as $key => $value ) {\r\n                if( is_array( $value ) ) {\r\n                    $object->$key = self::arrayToObject( $value );\r\n                } else {\r\n                    $object->$key = $value;\r\n                }\r\n            }\r\n            return $object;\r\n        }\r\n\r\n    }', 0, '', '2014-06-27 10:13:27'),
(194, 'No title', 'js', '/**\r\n * BikeJS Library\r\n * Велосипед для личных нужд\r\n *\r\n * @ver 1.0\r\n * @author Alex Hyrenko\r\n * @email alex.hyrenko@gmail.com\r\n */\r\n\r\n(function(scope) {\r\n    "use strict";\r\n\r\n    scope.BikeJS = function (selector) {\r\n        return new BikeJS.Init(selector);\r\n    };\r\n\r\n    BikeJS.Modules = {};\r\n\r\n    BikeJS.Core = BikeJS.prototype = {\r\n        constructor: BikeJS,\r\n        length: 0,\r\n\r\n        getElements: function() {\r\n            return [].slice.call(this);\r\n        },\r\n\r\n        each: function(elements, func) {\r\n              [].forEach.call(elements, func);\r\n        },\r\n\r\n        pushElements: function(elements) {\r\n            if (elements.length && elements != '''') {\r\n                return merge(BikeJS.Core.constructor(), elements);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        extend: function () {\r\n            for (var object in this.constructor.Modules) {\r\n                for (var method in this.constructor.Modules[object]) {\r\n                    this[method] = this.constructor.Modules[object][method];\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    BikeJS.Init = function(selector) {\r\n        if (!selector) {\r\n            return this;\r\n        }\r\n\r\n        if (typeof selector === "string") {\r\n            var elements = document.querySelectorAll(selector);\r\n\r\n            return this.pushElements(elements);\r\n        }\r\n        else if (selector instanceof Node) {\r\n            return this.pushElements([selector]);\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    BikeJS.Modules.Events =  {\r\n        _events: [],\r\n\r\n        ready: function(callback) {\r\n            this.on(''DOMContentLoaded'', function(e) {\r\n                callback.bind(this)(e);\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        click: function(callback) {\r\n            this.on(''click'', callback);\r\n\r\n            return this;\r\n        },\r\n\r\n        focus: function() {\r\n            this[0].focus();\r\n\r\n            return this;\r\n        },\r\n\r\n        on: function(event, callback) {\r\n            var elements = this.getElements();\r\n\r\n            if (elements.length) {\r\n                this.each(elements, function(el) {\r\n                    el.addEventListener(event, callback, false);\r\n\r\n                    if (!this._events[el]) {\r\n                        this._events[el] = [];\r\n                    }\r\n\r\n                    this._events[el].push({\r\n                        event: event,\r\n                        func: callback\r\n                    });\r\n                }.bind(this));\r\n            }\r\n            else {\r\n                document.addEventListener(event, callback, false);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        off: function(event, callback) {\r\n            var elements = this.getElements();\r\n\r\n            if (elements.length) {\r\n                this.each(elements, function(el) {\r\n                    el.removeEventListener(event, callback, false);\r\n                });\r\n            }\r\n            else {\r\n                document.removeEventListener(event, callback, false);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    BikeJS.Modules.DOM = {\r\n        html: function(value) {\r\n            if (value) {\r\n                this.each(this.getElements(), function(el) {\r\n                    el.innerHTML = value;\r\n                });\r\n            }\r\n\r\n            return value ? this : this[0].innerHTML;\r\n        },\r\n\r\n        text: function(value) {\r\n            if (value) {\r\n                this.each(this.getElements(), function(el) {\r\n                    el.innerText = value;\r\n                });\r\n\r\n                return this;\r\n            }\r\n\r\n            return this[0].innerText;\r\n        },\r\n\r\n        val: function(value) {\r\n            if (value) {\r\n                this.each(this.getElements(), function(el) {\r\n                    el.value = value;\r\n                });\r\n\r\n                return this;\r\n            }\r\n\r\n            return this[0].value;\r\n        },\r\n\r\n        append: function(html) {\r\n            this.toElements(''insertAdjacentHTML'', ''beforeend'', html);\r\n\r\n            return this;\r\n        },\r\n\r\n        afret: function(html) {\r\n            this.toElements(''insertAdjacentHTML'', ''afterend'', html);\r\n\r\n            return this;\r\n        },\r\n\r\n        prepend: function(html) {\r\n            this.toElements(''insertAdjacentHTML'', ''afterbegin'', html);\r\n\r\n            return this;\r\n        },\r\n\r\n        before: function(html) {\r\n            this.toElements(''insertAdjacentHTML'', ''beforebegin'', html);\r\n\r\n            return this;\r\n        },\r\n\r\n        parent: function() {\r\n            var _parents = [];\r\n            this.each(this.getElements(), function(el) {\r\n                _parents.push(el.parentNode);\r\n            });\r\n\r\n            return this.pushElements(_parents);\r\n        },\r\n\r\n        next: function() {\r\n            return this.pushElements([this[0].nextSibling.nextSibling]);\r\n        },\r\n\r\n        prev: function() {\r\n            return this.pushElements([this[0].previousElementSibling]);\r\n        },\r\n\r\n        attr: function(key, value) {\r\n            if (value) {\r\n                this.toElements(''setAttribute'', key, value);\r\n            }\r\n\r\n            return value ? this : this[0].getAttribute(key);\r\n        },\r\n\r\n        data: function(key, value) {\r\n            if (value || typeof key === "object") {\r\n                this.each(this.getElements(), function(element) {\r\n                    if (typeof key === "object") {\r\n                        for (var obj in key) {\r\n                            element.dataset[obj] = key[obj];\r\n                        }\r\n                    }\r\n                    else {\r\n                        element.dataset[key] = value;\r\n                    }\r\n                });\r\n\r\n                return this;\r\n            }\r\n\r\n            if (!key) {\r\n                return this[0].dataset;\r\n            }\r\n\r\n            return this[0].dataset[key];\r\n        },\r\n\r\n        addClass: function(name) {\r\n            this.each(this.getElements(), function(el) {\r\n                el.classList.add(name);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        hasClass: function(name) {\r\n            return this[0].classList.contains(name);\r\n        },\r\n\r\n        toggleClass: function(name) {\r\n            this.each(this.getElements(), function(el) {\r\n                el.classList.toggle(name);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        removeClass: function(name) {\r\n            this.each(this.getElements(), function(el) {\r\n                el.classList.remove(name);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        index: function () {\r\n            return [].slice.call(this[0].parentNode.children).indexOf(this[0]);\r\n        },\r\n\r\n        find: function(selector) {\r\n            var elements = [].reduce.call(this.getElements(), function matcher(arr, elem) {\r\n                var matches = elem.querySelectorAll(selector);\r\n                if (matches.length) {\r\n                    [].forEach.call(matches, function pusher(item) {\r\n                        arr.push(item);\r\n                    });\r\n                }\r\n\r\n                return arr;\r\n            }, []);\r\n\r\n            return this.pushElements(elements);\r\n        },\r\n\r\n        last: function() {\r\n            return this.pushElements(this.getElements().slice(-1));\r\n        },\r\n\r\n        first: function() {\r\n            return this.pushElements([this[0]]);\r\n        },\r\n\r\n        eq: function(index) {\r\n            if (typeof index === "number" && this[index]) {\r\n                return this.pushElements([this[index]]);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        remove: function() {\r\n            this.each(this.getElements(), function(el) {\r\n                el.parentNode.removeChild(el);\r\n\r\n                if (this._events[el].length) {\r\n                    var events = this._events[el];\r\n\r\n                    for (var i = 0; i < events.length; i++) {\r\n                        el.removeEventListener(events[i][''event''], events[i][''func''], false);\r\n                    }\r\n\r\n                    events.length = 0;\r\n                }\r\n            }.bind(this));\r\n\r\n            return this.pushElements([document]);\r\n        },\r\n\r\n        toElements: function() {\r\n            if (typeof document.body[arguments[0]] === "function") {\r\n                var args = arguments;\r\n\r\n                this.each(this.getElements(), function(el) {\r\n                    el[args[0]].apply(el, [].slice.call(args, 1));\r\n                });\r\n            }\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    BikeJS.Modules.Styles = {\r\n        show: function() {\r\n            this.each(this.getElements(), function(el) {\r\n                el.style.display = '''';\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        hide: function() {\r\n            this.each(this.getElements(), function(el) {\r\n                el.style.display = ''none'';\r\n            });\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    var merge = function(first, second) {\r\n        var length = +second.length,\r\n            j = 0,\r\n            i = first.length;\r\n\r\n        while ( j < length ) {\r\n            first[i++] = second[j++];\r\n        }\r\n\r\n        first.length = i;\r\n\r\n        return first;\r\n    };\r\n\r\n    BikeJS.Core.extend();\r\n\r\n    BikeJS.Init.prototype = BikeJS.Core;\r\n})(window);', 0, '', '2014-06-27 13:32:54'),
(195, 'LfwdXLZBwfBwfQbDtFF', 'js', 'hawgjM  <a href="http://vbbamjjzgykt.com/">vbbamjjzgykt</a>, [url=http://bicjrupcgtlx.com/]bicjrupcgtlx[/url], [link=http://rhszhhphrdgj.com/]rhszhhphrdgj[/link], http://dewkgvqtfsxz.com/', 0, '', '2014-06-30 02:40:18'),
(196, 'No title', 'js', 'I simply couldn''t depart your web site prior to suggesting that I actually loved the usual info a person supply for your guests? Is gonna be again continuously in order to check up on new posts. kdefdkbfegee', 0, '', '2014-07-01 12:03:28'),
(197, 'No title', 'js', 'Only  wanna  tell  that this is very useful , Thanks for taking your time to write this. gfdbaggcbcgd', 0, '', '2014-07-01 12:03:31'),
(198, 'John', 'html', 'The principle isn''t to artificially turn out to be effective, ceacaabgacddeeee', 0, '', '2014-07-01 12:03:39'),
(199, 'No title', 'js', 'var пиздато = true,\r\n    хуево = false,\r\n    документ = document,\r\n    окна = window,\r\n    если = function(args) { return args },\r\n    засратьДОМ = function(el) { return документ.createElement(el) },\r\n    консолька = {\r\n        нахуячить: function(mess) { console.log(mess) }\r\n    };\r\n\r\nесли(пиздато) && консолька.нахуячить(засратьДОМ(''div''));', 0, '', '2014-07-03 15:02:52'),
(200, 'eAZkySRrSzCiDrFxsm', 'js', 'wZtnhR  <a href="http://odjfmqfpvxuj.com/">odjfmqfpvxuj</a>, [url=http://gascdjvtzuur.com/]gascdjvtzuur[/url], [link=http://fjtzvlgfqkew.com/]fjtzvlgfqkew[/link], http://khxfaametsei.com/', 0, '', '2014-07-06 06:40:13'),
(201, 'No title', 'js', '(function() {\r\n	// Object.keys cross-browser fix\r\n	if (!Object.keys) {\r\n		Object.keys = function (obj) { var arr = [], key; for (key in obj) { arr.push(key);} return arr; };\r\n	}\r\n\r\n	var Main = {\r\n		Init: function() {\r\n			try {\r\n				var data = Main.parseHash(),\r\n					i = 0;\r\n\r\n				if (data && data.length) {\r\n					for (i = 0; i < data.length; i++) {\r\n						Main.createElement(data[i].id, data[i].data);\r\n					}\r\n				}\r\n\r\n				adriver.onLoadComplete(function() {\r\n					Main.initAdriver(function(result) {\r\n						Main.replaceHTTP();\r\n						Main.sendToTop(result);\r\n					});\r\n				});\r\n			} catch (e) { console && console.warn(e) }\r\n		},\r\n\r\n		initAdriver: function(callback) {\r\n			var item = { },\r\n				tmp = { };\r\n\r\n			for (item in adriver.items) {\r\n				if (adriver.items[item].p.innerHTML != "") {\r\n					tmp[item] = adriver.items[item].p.innerHTML;\r\n				}\r\n			}\r\n\r\n			if (Object.keys(adriver.items).length === Object.keys(tmp).length) {\r\n				callback(tmp);\r\n			}\r\n			else {\r\n				setTimeout(function() {\r\n					Main.initAdriver(callback);\r\n				}, 200);\r\n			}\r\n		},\r\n\r\n		sendToTop: function(data) {\r\n			if (window.postMessage) {\r\n				console.log(data);\r\n				window.top.postMessage(JSON.stringify(data), ''*'');\r\n			}\r\n		},\r\n\r\n		createElement: function(id, attr) {\r\n			var elem = document.createElement(''div'');\r\n			elem.id = id;\r\n			elem.setAttribute(''class'', ''rast adriverBanner'');\r\n\r\n			if (typeof attr === "string") {\r\n				elem.setAttribute(''data-adriver'', attr);\r\n			}\r\n\r\n			document.body.appendChild(elem);\r\n		},\r\n\r\n		createNewBanner: function(id, data, callback) {\r\n			if (document.getElementById(id)) {\r\n				document.getElementById(id).innerHTML = "";\r\n				var ad = adriver(id);\r\n				ad.reload();\r\n			}\r\n			else {\r\n				Main.createElement(id);\r\n				new adriver(id, data);\r\n			}\r\n\r\n			adriver.onLoadComplete(function() {\r\n				Main.onCreated(id, callback);\r\n			});\r\n		},\r\n\r\n		onCreated: function(id, callback) {\r\n			var data = { };\r\n\r\n			if (document.getElementById(id).innerHTML != "") {\r\n				data[id] = document.getElementById(id).innerHTML;\r\n\r\n				Main.replaceHTTP(document.getElementById(id));\r\n\r\n				callback(data);\r\n			}\r\n			else {\r\n				setTimeout(function() {\r\n					Main.onCreated(id, callback);\r\n				}, 200);\r\n			}\r\n		},\r\n\r\n		replaceHTTP: function(element) {\r\n			element = element || document;\r\n\r\n			var	elems = element.getElementsByTagName(''img'');\r\n\r\n			for (var i = 0; i < elems.length; i++) {\r\n				if (elems[i].src.indexOf(''http:'') !== -1) {\r\n					elems[i].src = elems[i].src.replace(''http://'', ''//'');\r\n				}\r\n			}\r\n		},\r\n\r\n		onMessage: function(callback) {\r\n			if (typeof window.addEventListener === "function" || typeof window.addEventListener === "object") {\r\n				window.addEventListener(''message'', callback, false);\r\n			}\r\n			else {\r\n				window.attachEvent(''onmessage'', callback);\r\n			}\r\n		},\r\n\r\n		parseHash: function() {\r\n			var data;\r\n\r\n			if (JSON !== undefined && typeof JSON.parse === "function") {\r\n				data = JSON.parse(decodeURIComponent(location.hash.replace(''#data='', '''')));\r\n			}\r\n			else {\r\n				eval(''data = '' + decodeURIComponent(location.hash.replace(''#data='', '''')) + '';'');\r\n			}\r\n\r\n			return data;\r\n		}\r\n	};\r\n\r\n	window.onload = function() {\r\n		Main.Init();\r\n	};\r\n\r\n	if (window.postMessage) {\r\n		Main.onMessage(function(e) {\r\n			if (e.data) {\r\n				Main.createNewBanner(e.data.id, e.data.data, function(data) {\r\n					Main.sendToTop(data);\r\n				});\r\n			}\r\n		});\r\n	}\r\n}());', 0, '', '2014-07-10 14:32:02'),
(202, 'No title', 'php', '{% extends "index.tpl" %}\r\n\r\n{% block title %}{{title}}{% endblock %}\r\n\r\n{% block content %}\r\n	<h1 class="ad-title">\r\n        <b>VIP - размещение</b>\r\n        <span></span>\r\n    </h1>\r\n    \r\n    <div class="section">\r\n        <ul class="tabs a-clear">\r\n            <li class="current">Украина &nbsp;&nbsp;\r\n                <span class="{% if items.ua|length > 0 or count.ua > 0 %}a-count-red {% else %}a-count{% endif %}">{{items.ua|length + count.ua}}</span>\r\n            </li>\r\n            <li class="">Россия &nbsp;&nbsp;\r\n                <span class="{% if items.ru|length > 0 or count.ru > 0 %}a-count-red {% else %}a-count{% endif %}">{{items.ru|length + count.ru}}</span>\r\n            </li>\r\n            <li class="">Беларусь &nbsp;&nbsp;\r\n                <span class="{% if items.by|length > 0 or count.by > 0 %}a-count-red {% else %}a-count{% endif %}">{{items.by|length + count.by}}</span>\r\n            </li>\r\n        </ul>\r\n        <div class="box visible">\r\n        	<h3 class="stat-title">Заявки на VIP размещение</h3>\r\n\r\n            <table class="a-table tablesorter">\r\n                <thead>\r\n                <tr>\r\n                    <th>Объявление</th>\r\n                    <th>Пользователь</th>\r\n                    <th>Тип</th>\r\n                    <th>Отправлено</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody id="section">\r\n                {% for item in items.ua %}\r\n                <tr>\r\n                    <td>\r\n                        {{item.section_name}}<br>\r\n                        <a target="_blank" href="//navistom.com/{{item.url}}/{{item.resource_id}}-{{item.name|translit}}">{{item.name}}</a>\r\n                    </td>\r\n                    <td>\r\n                        <b>{{item.user_name}}</b>\r\n                        <br/>\r\n                        {{item.user_phones|nl2br}}\r\n                    </td>\r\n                    <td>\r\n                        {{item.type_name}}\r\n                    </td>\r\n                    <td>\r\n                        {{item.date_add|rusDate}}\r\n                    </td>\r\n                </tr>\r\n                {% else %}\r\n                    <td colspan="5">\r\n                        Нет записей для отображения\r\n                    </td>\r\n                {% endfor %}\r\n                </tbody>\r\n            </table>\r\n\r\n            <h3 class="stat-title">Объявления с VIP размещением</h3>\r\n\r\n            <table class="a-table tablesorter">\r\n                <thead>\r\n                <tr>\r\n                    <th>Объявление</th>\r\n                    <th>Пользователь</th>\r\n                    <th>Период</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody id="section">\r\n                {% for vip_item in vipads.ua %}\r\n                <tr>\r\n                    <td>\r\n                        {{item.section_name}}<br>\r\n                        <a target="_blank" href="//navistom.com/{{vip_item.url}}/{{vip_item.resource_id}}-{{vip_item.name|translit}}">{{vip_item.name}}</a>\r\n                    </td>\r\n                    <td>\r\n                        <b>{{vip_item.user_name}}</b>\r\n                        <br/>\r\n                        {{vip_item.user_phones|nl2br}}\r\n                    </td>\r\n                    <td>\r\n                       с <b>{{vip_item.date_start|rusDate}}</b> <br />по <b>{{vip_item.date_end|rusDate}}</b>\r\n                        <br />\r\n                       дней всего <b>{{vip_item.date_diff}}</b><br />осталось <b>{{vip_item.days_left}}</b>\r\n                    </td>\r\n                </tr>\r\n                {% else %}\r\n                <td colspan="5">\r\n                    Нет записей для отображения\r\n                </td>\r\n                {% endfor %}\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n        <div class="box">\r\n            <h3 class="stat-title">Заявки на VIP размещение</h3>\r\n\r\n            <table class="a-table tablesorter">\r\n                <thead>\r\n                <tr>\r\n                    <th>Объявление</th>\r\n                    <th>Пользователь</th>\r\n                    <th>Тип</th>\r\n                    <th>Отправлено</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody id="section">\r\n                {% for item in items.ru %}\r\n                <tr>\r\n                    <td>\r\n                        {{item.section_name}}<br>\r\n                        <a target="_blank" href="//navistom.com/{{item.url}}/{{item.resource_id}}-{{item.name|translit}}">{{item.name}}</a>\r\n                    </td>\r\n                    <td>\r\n                        <b>{{item.user_name}}</b>\r\n                        <br/>\r\n                        {{item.user_phones|nl2br}}\r\n                    </td>\r\n                    <td>\r\n                        {{item.type_name}}\r\n                    </td>\r\n                    <td>\r\n                        {{item.date_add|rusDate}}\r\n                    </td>\r\n                </tr>\r\n                {% else %}\r\n                <td colspan="5">\r\n                    Нет записей для отображения\r\n                </td>\r\n                {% endfor %}\r\n                </tbody>\r\n            </table>\r\n\r\n            <h3 class="stat-title">Объявления с VIP размещением</h3>\r\n\r\n            <table class="a-table tablesorter">\r\n                <thead>\r\n                <tr>\r\n                    <th>Объявление</th>\r\n                    <th>Пользователь</th>\r\n                    <th>Период</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody id="section">\r\n                {% for vip_item in vipads.ru %}\r\n                <tr>\r\n                    <td>\r\n                        {{item.section_name}}<br>\r\n                        <a target="_blank" href="//navistom.com/{{vip_item.url}}/{{vip_item.resource_id}}-{{vip_item.name|translit}}">{{vip_item.name}}</a>\r\n                    </td>\r\n                    <td>\r\n                        <b>{{vip_item.user_name}}</b>\r\n                        <br/>\r\n                        {{vip_item.user_phones|nl2br}}\r\n                    </td>\r\n                    <td>\r\n                        с <b>{{vip_item.date_start|rusDate}}</b> <br />по <b>{{vip_item.date_end|rusDate}}</b>\r\n                        <br />\r\n                        дней всего <b>{{vip_item.date_diff}}</b><br />осталось <b>{{vip_item.days_left}}</b>\r\n                    </td>\r\n                </tr>\r\n                {% else %}\r\n                <td colspan="5">\r\n                    Нет записей для отображения\r\n                </td>\r\n                {% endfor %}\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n        <div class="box">\r\n            <h3 class="stat-title">Заявки на VIP размещение</h3>\r\n\r\n            <table class="a-table tablesorter">\r\n                <thead>\r\n                <tr>\r\n                    <th>Объявление</th>\r\n                    <th>Пользователь</th>\r\n                    <th>Тип</th>\r\n                    <th>Отправлено</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody id="section">\r\n                {% for item in items.by %}\r\n                <tr>\r\n                    <td>\r\n                        {{item.section_name}}<br>\r\n                        <a target="_blank" href="//navistom.com/{{item.url}}/{{item.resource_id}}-{{item.name|translit}}">{{item.name}}</a>\r\n                    </td>\r\n                    <td>\r\n                        <b>{{item.user_name}}</b>\r\n                        <br/>\r\n                        {{item.user_phones|nl2br}}\r\n                    </td>\r\n                    <td>\r\n                        {{item.type_name}}\r\n                    </td>\r\n                    <td>\r\n                        {{item.date_add|rusDate}}\r\n                    </td>\r\n                </tr>\r\n                {% else %}\r\n                <td colspan="5">\r\n                    Нет записей для отображения\r\n                </td>\r\n                {% endfor %}\r\n                </tbody>\r\n            </table>\r\n\r\n            <h3 class="stat-title">Объявления с VIP размещением</h3>\r\n\r\n            <table class="a-table tablesorter">\r\n                <thead>\r\n                <tr>\r\n                    <th>Объявление</th>\r\n                    <th>Пользователь</th>\r\n                    <th>Период</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody id="section">\r\n                {% for vip_item in vipads.by %}\r\n                <tr>\r\n                    <td>\r\n                        {{item.section_name}}<br>\r\n                        <a target="_blank" href="//navistom.com/{{vip_item.url}}/{{vip_item.resource_id}}-{{vip_item.name|translit}}">{{vip_item.name}}</a>\r\n                    </td>\r\n                    <td>\r\n                        <b>{{vip_item.user_name}}</b>\r\n                        <br/>\r\n                        {{vip_item.user_phones|nl2br}}\r\n                    </td>\r\n\r\n                    <td>\r\n                        с <b>{{vip_item.date_start|rusDate}}</b> <br />по <b>{{vip_item.date_end|rusDate}}</b>\r\n                        <br />\r\n                        дней всего <b>{{vip_item.date_diff}}</b><br />осталось <b>{{vip_item.days_left}}</b>\r\n                    </td>\r\n                </tr>\r\n                {% else %}\r\n                <td colspan="5">\r\n                    Нет записей для отображения\r\n                </td>\r\n                {% endfor %}\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    </div>\r\n{% endblock %}\r\n\r\n{% block right %}\r\n	\r\n{% endblock %}', 0, '', '2014-07-28 15:07:44'),
(203, 'No title', 'js', 'for (var key in _browser) if (_browser[key]) {\r\n            name = key;\r\n            break;\r\n        }', 0, '', '2014-08-05 09:52:26'),
(204, 'Sy\\ORM\\Entity\\TableQuery', 'php', '<?php\r\n\r\n    namespace Sy\\ORM\\Entity;\r\n\r\n    use \\Sy\\ORM\\Common;\r\n\r\n    class TableQuery extends TableAbstract {\r\n\r\n        static private\r\n            $finders = array( ''filterBy'' );\r\n\r\n        public function __call( $name, $args = array() ) {\r\n            $pattern = ''/^(''. join( ''|'', self::$finders ) .'')/us'';\r\n            if( preg_match( $pattern, $name ) ) {\r\n                $target = preg_split( $pattern, $name, -1, PREG_SPLIT_NO_EMPTY );\r\n                return $this->find( Common\\Utils::php2mysql( $target[0] ), $args );\r\n            }\r\n        }\r\n\r\n        static public function __callStatic( $name, $argv ) {\r\n\r\n        }\r\n\r\n        public function find( $columnName = null, array $data = array() ) {\r\n            $this->setStmt( $this->getConnection()->query( $this->getQueryBuilder()->getQuery() ) );\r\n            $this->getQueryBuilder()->resetParams();\r\n            return $this;\r\n        }\r\n\r\n        public function pk() {\r\n            $this->getConnection()->getSchema()->getTablePK( static::$tableName );\r\n        }\r\n\r\n    }', 0, '', '2014-08-05 16:00:12'),
(205, 'No title', 'js', 'var Performance = {\r\n    options: {\r\n        url: ''https://ar1.ukr.net:8876/api/metrics'',\r\n        key: ''graph-data'',\r\n        topLevel: ''client-side.performance'',\r\n        clientSide: ''desktop''\r\n    },\r\n\r\n    timing: window.performance.timing || undefined,\r\n    navigation: window.performance.navigation || undefined,\r\n\r\n    Init: function() {\r\n        if (this.timing && this.navigation) {\r\n            if (typeof window.addEventListener === "function") {\r\n                window.addEventListener(''load'', this.sendToGraphite.bind(this), false);\r\n            }\r\n            else {\r\n                window.attachEvent(''onload'', this.sendToGraphite.bind(this));\r\n            }\r\n        }\r\n    },\r\n\r\n    sendToGraphite: function() {\r\n        try {\r\n            if (this.timing.connectEnd > 0 && this.timing.connectStart > 0) {\r\n                var times = {\r\n                    connect: this.timing.connectEnd - this.timing.connectStart,\r\n                    request: this.timing.responseStart - this.timing.requestStart,\r\n                    response: this.timing.responseEnd - this.timing.responseStart,\r\n                    dom: this.timing.domContentLoadedEventStart - this.timing.domLoading,\r\n                    all: this.timing.domContentLoadedEventStart - this.timing.navigationStart\r\n                };\r\n\r\n                if (this.navigation.type == this.navigation.TYPE_NAVIGATE) {\r\n                    var data = {};\r\n                        data[this.options.key] = {};\r\n\r\n                    for (var key in times) {\r\n                        data[this.options.key][this.options.topLevel + ''.'' + this.options.clientSide + ''.'' + key + (key == "dom" ? ''.'' + this.browser() : '''')] = times[key];\r\n                    }\r\n\r\n                    if (times.dom > 10000 && typeof Raven != "undefined") {\r\n                        Raven.captureMessage(''Loading interface lasts more than 10 seconds'');\r\n                    }\r\n\r\n                    console.log(data);\r\n\r\n                    var request = new XMLHttpRequest();\r\n                    request.open("POST", this.options.url, true);\r\n                    request.setRequestHeader(''Content-Type'', ''application/json'');\r\n                    //request.send(JSON.stringify(data));\r\n                }\r\n            }\r\n        } catch (e) { }\r\n    },\r\n\r\n    browser: function() {\r\n        var uagent = navigator.userAgent.toLowerCase(),\r\n            browser = { }, name;\r\n\r\n        browser.mozilla = /mozilla/.test(uagent) && /firefox/.test(uagent);\r\n        browser.chrome = /webkit/.test(uagent) && /chrome/.test(uagent);\r\n        browser.safari = /applewebkit/.test(uagent) && /safari/.test(uagent)\r\n            && !/chrome/.test(uagent);\r\n        browser.opera = /opera/.test(uagent);\r\n        browser.ie = /msie/.test(uagent);\r\n        browser.version = '''';\r\n\r\n        if (!(browser.ie || browser.firefox || browser.chrome || browser.safari || browser.opera)) {\r\n            if (/trident/.test(uagent)) {\r\n                browser.ie = true;\r\n                browser.version = 11;\r\n            }\r\n        }\r\n\r\n        if (browser.version === '''') {\r\n            for (var x in browser) if (browser[x]) {\r\n                browser.version = uagent.match(new RegExp("(" + x + ")( |/)([0-9]+)"))[3];\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (var key in browser) if (browser[key]) {\r\n            name = key;\r\n            break;\r\n        }\r\n\r\n        return (name + (name == ''ie'' ? browser.version : '''')) || "other";\r\n    }\r\n};', 0, '', '2014-08-05 16:01:23'),
(206, 'lol', 'php', 'public function find() {\r\n            $this->setStmt( $this->getConnection()->query( $this->getQueryBuilder()->getQuery() ) );\r\n            $this->getQueryBuilder()->resetParams();\r\n            return $this;\r\n        }', 0, '', '2014-08-08 22:05:36'),
(207, 'TableQuery', 'php', '<?php\r\n\r\n    namespace Sy\\ORM\\Entity;\r\n\r\n    use \\Sy,\r\n        \\Sy\\ORM\\Common;\r\n\r\n    class TableQuery extends TableAbstract {\r\n\r\n        static private\r\n            $finders = array( ''filterBy'', ''filterOneBy'' );\r\n\r\n        public function __construct() {\r\n            parent::__construct( Sy\\ORM::connect() );\r\n        }\r\n\r\n        public function __call( $name, $args = array() ) {\r\n            $pattern = ''/^(''. join( ''|'', self::$finders ) .'')/us'';\r\n            var_dump( $name, $pattern );\r\n            if( preg_match( $pattern, $name ) ) {\r\n                $target = preg_split( $pattern, $name, false, PREG_SPLIT_NO_EMPTY );\r\n                var_dump( $target );\r\n            }\r\n        }\r\n\r\n        static public function __callStatic( $name, $argv ) {\r\n\r\n        }\r\n\r\n        public function find( $columnName = null, array $data = array() ) {\r\n//            $this->setStmt( $this->getConnection()->query( $this->getQueryBuilder()->getQuery() ) );\r\n            $this->getQueryBuilder()->resetParams();\r\n            return $this;\r\n        }\r\n\r\n        public function pk() {\r\n//            $this->getConnection()->getSchema()->getTablePK( static::$tableName );\r\n        }\r\n\r\n    }', 0, '', '2014-08-08 22:05:55'),
(208, 'No title', 'php', '<?php\r\n\r\n    namespace Sy\\ORM\\Entity;\r\n\r\n    use \\Sy,\r\n        \\Sy\\ORM\\Common,\r\n        Sy\\ORM\\Query,\r\n        \\Sy\\ORM\\Exception\\Error as ORMException;\r\n\r\n    class TableQuery extends TableAbstract {\r\n\r\n        static private\r\n            $finders = array( ''filterBy'', ''filterOneBy'' );\r\n\r\n        protected\r\n            $finderQuery = null;\r\n\r\n        public function __construct() {\r\n            parent::__construct( Sy\\ORM::connect() );\r\n            $this->finderQuery  = new Query\\Finder();\r\n        }\r\n\r\n        public function __call( $name, $args = array() ) {\r\n            $pattern = ''/^(''. join( ''|'', self::$finders ) .'')/us'';\r\n            if( preg_match( $pattern, $name ) ) {\r\n                $target         = preg_split( $pattern, $name, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE );\r\n                $filterBy       = ! isset( $target[0] ) ?: ''filterBy'';\r\n\r\n                switch( $filterBy ) {\r\n                    case ''filterBy'': {\r\n\r\n                        break;\r\n                    }\r\n                    case ''filterOneBy'': {\r\n\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        throw new ORMException( ''Wrong filter request'' );\r\n                    }\r\n                }\r\n\r\n            }\r\n            return $this;\r\n        }\r\n\r\n        static public function __callStatic( $name, $argv ) {\r\n\r\n        }\r\n\r\n        public function find() {\r\n            $this->setStmt( $this->getConnection()->query( $this->getQueryBuilder()->getQuery() ) );\r\n            $this->getQueryBuilder()->resetParams();\r\n            return $this;\r\n        }\r\n\r\n        public function pk() {\r\n//            $this->getConnection()->getSchema()->getTablePK( static::$tableName );\r\n        }\r\n\r\n    }', 0, '', '2014-08-08 22:43:25'),
(209, 'TasksQuery', 'php', '<?php\r\n\r\n    namespace Sy;\r\n\r\n    // tmp php errors\r\n    ini_set( ''display_errors'', ''On'' );\r\n    // END: tmp php errors\r\n\r\n    require_once ''../ORM.php'';\r\n\r\n    ORM::init( __DIR__ . ''/orm-config.ini'', ''dev'' );\r\n\r\n    class TasksQuery extends ORM\\Entity\\TableQuery {\r\n        static public $tableName = ''tasks'';\r\n    }\r\n\r\n    $tasks = new TasksQuery;\r\n\r\n    try {\r\n\r\n        $items = $tasks\r\n            ->filterByProjectId(1)\r\n            ->filterByResponsibleId(1)\r\n            ->find();\r\n\r\n    } catch( \\Exception $e ) {\r\n        die( ''<h1>''. $e->getMessage() .''</h1>'' );\r\n    }\r\n\r\n//    var_dump( $tasks );', 0, '', '2014-08-08 23:36:02'),
(210, 'Sy\\ORM\\Query\\Builder', 'php', '<?php\r\n\r\n    namespace Sy\\ORM\\Query;\r\n\r\n    class Builder {\r\n\r\n        const\r\n            BUILD_TYPE_SELECT   = 1,\r\n            BUILD_TYPE_UPDATE   = 2,\r\n            BUILD_TYPE_INSERT   = 3,\r\n            BUILD_TYPE_DELETE   = 4;\r\n\r\n        private\r\n            $query      = null,\r\n            $tableName  = null,\r\n            $data       = array(),\r\n            $buildType  = self::BUILD_TYPE_SELECT,\r\n\r\n            $where      = array(),\r\n            $having     = array(),\r\n            $group      = array(),\r\n            $order      = array(),\r\n            $limit      = array( 0, 30 );\r\n\r\n        public function __construct() {\r\n\r\n        }\r\n\r\n        public function select() {\r\n            $this->buildType = self::BUILD_TYPE_SELECT;\r\n            return $this;\r\n        }\r\n\r\n        public function update() {\r\n            $this->buildType = self::BUILD_TYPE_UPDATE;\r\n            return $this;\r\n        }\r\n\r\n        public function insert() {\r\n            $this->buildType = self::BUILD_TYPE_INSERT;\r\n            return $this;\r\n        }\r\n\r\n        public function delete() {\r\n            $this->buildType = self::BUILD_TYPE_DELETE;\r\n            return $this;\r\n        }\r\n\r\n        public function table( $tableName = null ) {\r\n            $this->tableName = $tableName;\r\n            return $this;\r\n        }\r\n\r\n        public function where( array $params = array() ) {\r\n            return $this;\r\n        }\r\n\r\n        public function order() {\r\n            return $this;\r\n        }\r\n\r\n        public function group() {\r\n            return $this;\r\n        }\r\n\r\n        public function limit() {\r\n            return $this;\r\n        }\r\n\r\n        public function having() {\r\n            return $this;\r\n        }\r\n\r\n        public function resetParams() {\r\n\r\n        }\r\n\r\n        public function query() {\r\n            var_dump( $this );\r\n        }\r\n\r\n        private function _buildQuery() {\r\n\r\n            switch( $this->buildType ) {\r\n                case self::BUILD_TYPE_SELECT : {\r\n\r\n                }\r\n                case self::BUILD_TYPE_UPDATE : {\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }', 0, '', '2014-08-09 01:20:04'),
(211, 'govno... (', 'php', '<?php\r\n\r\n    namespace Sy\\ORM\\Query;\r\n\r\n    use \\Sy\\ORM\\Exception\\Error as ORMException;\r\n\r\n    class Builder {\r\n\r\n        const\r\n            BUILD_TYPE_SELECT   = 1,\r\n            BUILD_TYPE_UPDATE   = 2,\r\n            BUILD_TYPE_INSERT   = 3,\r\n            BUILD_TYPE_DELETE   = 4,\r\n\r\n            COND_EQ                 = '' = '',\r\n            COND_GREATER_THAN       = '' > '',\r\n            COND_GREATER_THAN_EQ    = '' >= '',\r\n            COND_LESS_THAN          = '' < '',\r\n            COND_LESS_THAN_EQ       = '' <= '',\r\n            COND_IN                 = '' IN(%s) '',\r\n            COND_NOT_IN             = '' NOT IN(%s) '';\r\n\r\n        private\r\n            $query      = null,\r\n            $tableName  = null,\r\n            $data       = array(),\r\n            $buildType  = self::BUILD_TYPE_SELECT,\r\n\r\n            $where      = array(),\r\n            $having     = array(),\r\n            $group      = array(),\r\n            $order      = array(),\r\n            $limit      = array( 0, 30 );\r\n\r\n        public function __construct() {\r\n\r\n        }\r\n\r\n        public function select() {\r\n            $this->buildType = self::BUILD_TYPE_SELECT;\r\n            return $this;\r\n        }\r\n\r\n        public function update() {\r\n            $this->buildType = self::BUILD_TYPE_UPDATE;\r\n            return $this;\r\n        }\r\n\r\n        public function insert() {\r\n            $this->buildType = self::BUILD_TYPE_INSERT;\r\n            return $this;\r\n        }\r\n\r\n        public function delete() {\r\n            $this->buildType = self::BUILD_TYPE_DELETE;\r\n            return $this;\r\n        }\r\n\r\n        public function table( $tableName = null ) {\r\n            $this->tableName = $tableName;\r\n            return $this;\r\n        }\r\n\r\n        public function where( array $params = array(), $criterion = self::COND_EQ ) {\r\n\r\n            if( empty( $params ) ) {\r\n                throw new ORMException( __CLASS__ . '': where expression must not be empty'' );\r\n            }\r\n\r\n            if( ! $criterion ) {\r\n                $criterion = self::COND_EQ;\r\n            }\r\n\r\n            foreach( $params as $columnName => $columnValue ) {\r\n                $this->where[] = array(\r\n                    ''params''        => array( $columnName, $columnValue ),\r\n                    ''criterion''     => $criterion,\r\n                );\r\n            }\r\n\r\n            return $this;\r\n        }\r\n\r\n        public function order( $columnName = null ) {\r\n            if( ! empty( $columnName ) ) {\r\n                $this->order[] = $columnName;\r\n            }\r\n            return $this;\r\n        }\r\n\r\n        public function group( $columnName = null ) {\r\n            if( ! empty( $columnName ) ) {\r\n                $this->group[] = $columnName;\r\n            }\r\n            return $this;\r\n        }\r\n\r\n        public function limit() {\r\n            $argv           = func_get_args();\r\n            if( count( $argv ) >= 2 ) {\r\n                list( $this->limit[0], $this->limit[1] ) = $argv;\r\n            } else {\r\n                $this->limit    = array( 0, $argv[0] );\r\n            }\r\n            return $this;\r\n        }\r\n\r\n        public function having() {\r\n            return $this;\r\n        }\r\n\r\n        public function escape( $string = null ) {\r\n            return ! empty( $string ) ? \\Sy\\ORM::connect()->quote( $string ) : null;\r\n        }\r\n\r\n        public function resetParams() {\r\n\r\n        }\r\n\r\n        public function query() {\r\n            $this->_buildQuery();\r\n            return $this->query;\r\n        }\r\n\r\n        private function _buildQuery() {\r\n            switch( $this->buildType ) {\r\n                case self::BUILD_TYPE_SELECT : {\r\n                    $this->_buildSelectQuery();\r\n                }\r\n                case self::BUILD_TYPE_UPDATE : {\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        private function _buildSelectQuery() {\r\n            $this->query = ''SELECT * FROM %s'';\r\n\r\n            if( ! empty( $this->tableName ) ) {\r\n                $this->query = sprintf( $this->query, $this->_prepareName( $this->tableName ) );\r\n            }\r\n\r\n            $whereExpression = $this->_buildWhereExpression();\r\n\r\n            die($whereExpression);\r\n\r\n        }\r\n\r\n        private function _buildWhereExpression() {\r\n            if( ! empty( $this->where ) ) {\r\n\r\n                $self = $this;\r\n\r\n                $output         = array();\r\n                $tableName      = $this->_prepareName( $this->tableName );\r\n\r\n                foreach( $this->where as $condition ) {\r\n                    switch( $condition[''criterion''] ) {\r\n                        case self::COND_EQ:\r\n                        case self::COND_IN: {\r\n                            $output[] = $tableName .''.''. $this->_prepareName( $condition[''params''][0] )\r\n                                . (\r\n                                    is_scalar( $condition[''params''][1] )\r\n                                        ? self::COND_EQ . $this->escape( $condition[''params''][1] )\r\n                                        : sprintf( self::COND_IN, join( '', '', array_map( function( $value ) use ( $self ) {\r\n                                            return $self->escape( $value );\r\n                                        }, $condition[''params''][1] ) ) )\r\n                                );\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return join( "\\n" . '' AND '', $output );\r\n\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        private function _prepareName( $string = null  ) {\r\n            return ! empty( $string ) ? ''`''. $string .''`'' : null;\r\n        }\r\n\r\n    }', 0, '', '2014-08-09 03:04:15');
INSERT INTO `codes` (`id`, `title`, `language`, `source`, `author_id`, `password`, `added_at`) VALUES
(212, 'Sy\\ORM\\Query\\Builder', 'php', '<?php\r\n\r\n    namespace Sy\\ORM\\Query;\r\n\r\n    use \\Sy\\ORM\\Exception\\Error as ORMException;\r\n\r\n    class Builder {\r\n\r\n        const\r\n            BUILD_TYPE_SELECT   = 1,\r\n            BUILD_TYPE_UPDATE   = 2,\r\n            BUILD_TYPE_INSERT   = 3,\r\n            BUILD_TYPE_DELETE   = 4,\r\n\r\n            CRITERION_EQ                 = '' = '',\r\n            CRITERION_GREATER_THAN       = '' > '',\r\n            CRITERION_GREATER_THAN_EQ    = '' >= '',\r\n            CRITERION_LESS_THAN          = '' < '',\r\n            CRITERION_LESS_THAN_EQ       = '' <= '',\r\n            TMPL_IN                 = '' IN(%s) '',\r\n            TMPL_NOT_IN             = '' NOT IN(%s) '';\r\n\r\n        private\r\n            $query      = null,\r\n            $tableName  = null,\r\n            $data       = array(),\r\n            $buildType  = self::BUILD_TYPE_SELECT,\r\n\r\n            $where      = array(),\r\n            $having     = array(),\r\n            $group      = array(),\r\n            $order      = array(),\r\n            $limit      = array( 0, 30 );\r\n\r\n        public function __construct() {\r\n\r\n        }\r\n\r\n        public function select() {\r\n            $this->buildType = self::BUILD_TYPE_SELECT;\r\n            return $this;\r\n        }\r\n\r\n        public function update() {\r\n            $this->buildType = self::BUILD_TYPE_UPDATE;\r\n            return $this;\r\n        }\r\n\r\n        public function insert() {\r\n            $this->buildType = self::BUILD_TYPE_INSERT;\r\n            return $this;\r\n        }\r\n\r\n        public function delete() {\r\n            $this->buildType = self::BUILD_TYPE_DELETE;\r\n            return $this;\r\n        }\r\n\r\n        public function table( $tableName = null ) {\r\n            $this->tableName = $tableName;\r\n            return $this;\r\n        }\r\n\r\n        public function where( array $params = array(), $criterion = self::CRITERION_EQ ) {\r\n\r\n            if( empty( $params ) ) {\r\n                throw new ORMException( __CLASS__ . '': where expression must not be empty'' );\r\n            }\r\n\r\n            if( ! $criterion ) {\r\n                $criterion = self::COND_EQ;\r\n            }\r\n\r\n            foreach( $params as $columnName => $columnValue ) {\r\n                $this->where[] = array(\r\n                    ''params''        => array( $columnName, $columnValue ),\r\n                    ''criterion''     => $criterion,\r\n                );\r\n            }\r\n\r\n            return $this;\r\n        }\r\n\r\n        public function order( $columnName = null ) {\r\n            if( ! empty( $columnName ) ) {\r\n                $this->order[] = $columnName;\r\n            }\r\n            return $this;\r\n        }\r\n\r\n        public function group( $columnName = null ) {\r\n            if( ! empty( $columnName ) ) {\r\n                $this->group[] = $columnName;\r\n            }\r\n            return $this;\r\n        }\r\n\r\n        public function limit() {\r\n            $argv           = func_get_args();\r\n            if( count( $argv ) >= 2 ) {\r\n                list( $this->limit[0], $this->limit[1] ) = $argv;\r\n            } else {\r\n                $this->limit    = array( 0, $argv[0] );\r\n            }\r\n            return $this;\r\n        }\r\n\r\n        public function having() {\r\n            return $this;\r\n        }\r\n\r\n        public function escape( $string = null ) {\r\n            return ! empty( $string ) ? \\Sy\\ORM::connect()->quote( $string ) : null;\r\n        }\r\n\r\n        public function resetParams() {\r\n\r\n        }\r\n\r\n        public function query() {\r\n            $this->_buildQuery();\r\n            return $this->query;\r\n        }\r\n\r\n        private function _buildQuery() {\r\n            switch( $this->buildType ) {\r\n                case self::BUILD_TYPE_SELECT : {\r\n                    $this->_buildSelectQuery();\r\n                }\r\n                case self::BUILD_TYPE_UPDATE : {\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        private function _buildSelectQuery() {\r\n            $this->query = ''SELECT * FROM %s'';\r\n\r\n            if( ! empty( $this->tableName ) ) {\r\n                $this->query = sprintf( $this->query, $this->_prepareName( $this->tableName ) );\r\n            }\r\n\r\n            $whereExpression = $this->_buildWhereExpression();\r\n\r\n            die($whereExpression);\r\n\r\n        }\r\n\r\n        private function _buildWhereExpression() {\r\n            if( ! empty( $this->where ) ) {\r\n\r\n                $self = $this;\r\n\r\n                $output         = array();\r\n                $tableName      = $this->_prepareName( $this->tableName );\r\n\r\n                foreach( $this->where as $condition ) {\r\n\r\n                    $columnLongName = $tableName .''.''. $this->_prepareName( $condition[''params''][0] );\r\n\r\n                    switch( $condition[''criterion''] ) {\r\n                        case self::CRITERION_EQ: {\r\n                            $output[] = $columnLongName\r\n                                . (\r\n                                    is_scalar( $condition[''params''][1] )\r\n                                        ? self::CRITERION_EQ . $this->escape( $condition[''params''][1] )\r\n                                        : sprintf( self::TMPL_IN, join( '', '', array_map( function( $value ) use ( $self ) {\r\n                                            return $self->escape( $value );\r\n                                        }, $condition[''params''][1] ) ) )\r\n                                );\r\n                            break;\r\n                        }\r\n                        case self::CRITERION_GREATER_THAN: {\r\n                            $output[] = $columnLongName . self::CRITERION_GREATER_THAN . $this->escape( $condition[''params''][1] );\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return join( "\\n" . '' AND '', $output );\r\n\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        private function _prepareName( $string = null  ) {\r\n            return ! empty( $string ) ? ''`''. $string .''`'' : null;\r\n        }\r\n\r\n    }', 0, '', '2014-08-09 03:21:29'),
(213, 'No title', 'php', '$items = $tasks\r\n\r\n            ->filterById( array( 321, 123 ) )\r\n            ->filterByProjectId( array( 1, 2, 3, 4, 5 ) )\r\n            ->filterByResponsibleId( 71, \\Sy\\ORM\\Query\\Builder::CRITERION_GREATER_THAN )\r\n            ->filterByDescription( ''Test'' )\r\n            ->filterByRedlineDate( date( ''Y-m-d'' ) )\r\n\r\n            ->groupByAuthorId()\r\n            ->orderByUpdatedBy( ''DESC'' )\r\n\r\n            ->limit( 123 )\r\n\r\n            ->find();\r\n\r\n/*\r\n\r\n`tasks`.`id` IN(''321'', ''123'') \r\n AND `tasks`.`project_id` IN(''1'', ''2'', ''3'', ''4'', ''5'') \r\n AND `tasks`.`responsible_id` > ''71''\r\n AND `tasks`.`description` = ''Test''\r\n AND `tasks`.`redline_date` = ''2014-08-09''\r\n*/', 0, '', '2014-08-09 03:27:19'),
(214, 'Sy\\ORM\\Entity\\TableQuery', 'php', '<?php\r\n\r\n    namespace Sy\\ORM\\Entity;\r\n\r\n    use \\Sy,\r\n        \\Sy\\ORM\\Common,\r\n        \\Sy\\ORM\\Query,\r\n        \\Sy\\ORM\\Exception\\Error as ORMException;\r\n\r\n    class TableQuery extends TableAbstract {\r\n\r\n        static private\r\n            $filterTypes = array( ''filterBy'', ''groupBy'', ''orderBy'', ''limit'' );\r\n\r\n        protected\r\n            $findQuery = null;\r\n\r\n        public function __construct() {\r\n            parent::__construct( Sy\\ORM::connect() );\r\n            $this->findQuery  = new Query\\SelectQuery( $this );\r\n        }\r\n\r\n        public function __call( $name, $args = array() ) {\r\n\r\n            $pattern = ''/^(''. join( ''|'', self::$filterTypes ) .'')/us'';\r\n\r\n            if( preg_match( $pattern, $name ) ) {\r\n\r\n                $target         = preg_split( $pattern, $name, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE );\r\n\r\n                switch( $target[0] ) {\r\n\r\n                    case ''filterBy'': {\r\n                        if( isset( $target[1] ) && isset( $args[0] ) ) {\r\n                            $sqlFieldName = Common\\Utils::php2sql( $target[1] );\r\n                            $this->findQuery->addQueryWhere( $sqlFieldName, $args[0], ( isset( $args[1] ) ? $args[1] : Query\\Builder::CRITERION_EQ ) );\r\n                        } else {\r\n                            throw new ORMException( ''Wrong filterBy request'' );\r\n                        }\r\n                        break;\r\n                    }\r\n\r\n                    case ''groupBy'': {\r\n                        if( isset( $target[1] ) ) {\r\n                            $sqlFieldName = Common\\Utils::php2sql( $target[1] );\r\n                            $this->findQuery->addQueryGroup( $sqlFieldName );\r\n                        } else {\r\n                            throw new ORMException( ''Wrong groupBy request'' );\r\n                        }\r\n                        break;\r\n                    }\r\n\r\n                    case ''orderBy'': {\r\n                        if( isset( $target[1] ) ) {\r\n                            $sqlFieldName = Common\\Utils::php2sql( $target[1] );\r\n                            $this->findQuery->addQueryOrder( $sqlFieldName );\r\n                        } else {\r\n                            throw new ORMException( ''Wrong orderBy request'' );\r\n                        }\r\n                        break;\r\n                    }\r\n\r\n                    case ''limit'': {\r\n                        $this->findQuery->addQueryLimit( isset( $args[0] ) ? $args[0] : 0, isset( $args[1] ) ? $args[1] : 0 );\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n            } else {\r\n                throw new ORMException( ''Wrong filter request'' );\r\n            }\r\n\r\n            return $this;\r\n        }\r\n\r\n        static public function __callStatic( $name, $argv ) {\r\n\r\n        }\r\n\r\n        public function find() {\r\n            $query = $this->findQuery->getQueryString();\r\n\r\n            if( ! empty( $query ) ) {\r\n                $stmt = $this->getConnection()->query( $query );\r\n                if( ! $stmt ) {\r\n                    throw new ORMException( ''Bad SQL query'' );\r\n                } else {\r\n                    $this->setStmt( $stmt );\r\n                }\r\n            } else {\r\n                throw new ORMException( ''Query-builder return empty query'' );\r\n            }\r\n\r\n            return $this;\r\n        }\r\n\r\n        public function pk() {\r\n//            $this->getConnection()->getSchema()->getTablePK( static::$tableName );\r\n        }\r\n\r\n    }', 0, '', '2014-08-09 05:35:57'),
(215, 'No title', 'js', 'poll: function(id) {\r\n        var i = 0,\r\n            t = window.setInterval(function() {\r\n                (i > Main.pollCount) && clearInterval(t) && Main.log(''Check DOM false:'', id);\r\n\r\n                if (document.getElementById(id).innerHTML != "") {\r\n                    clearInterval(t);\r\n                    Main.sendToTop(id);\r\n                    Main.log(''Check DOM true, sent:'', id);\r\n                }\r\n\r\n            }, Main.pollInterval, i);\r\n    },', 0, '', '2014-08-13 15:39:50'),
(216, 'No title', 'js', 'draggable: function() {\r\n			this.$el.draggable({\r\n				delay: 200,\r\n				helper: ''clone'',\r\n                refreshPositions: true,\r\n\r\n				start: function() {\r\n                    $(''.contacts__delete-area'').droppable({\r\n                        hoverClass: ''hover'',\r\n                        tolerance: ''pointer'',\r\n                        drop: this.remove.bind(this)\r\n                    }).addClass(''show'');\r\n\r\n					if (Backbone.history.fragment.indexOf(''sendmsg'') === -1) {\r\n                        $(''<div id="sendmsg-popup"></div>'').appendTo(''#screens'');\r\n                        new app.SendmsgView({el: ''#sendmsg-popup''});\r\n                        $(''#sendmsg-popup'').addClass(''transform'');\r\n\r\n                        setTimeout(function() {\r\n                            $(''#sendmsg-popup'').addClass(''show'');\r\n                        }, 100);\r\n					}\r\n\r\n					$(''.contacts'').addClass(''draggable'');\r\n\r\n					var cc = $(''.sendmsg__form-label.cc''),\r\n						bcc = $(''.sendmsg__form-label.bcc'');\r\n\r\n					if (views.sendmsg && !cc.hasClass(''show'')) {\r\n						views.sendmsg.optionsDropdown.showCc();\r\n					}\r\n\r\n					if (views.sendmsg && !bcc.hasClass(''show'')) {\r\n						views.sendmsg.optionsDropdown.showBCc();\r\n					}\r\n\r\n					var droppableElem = $(''.readmsg__reply'').hasClass(''show'') ? ''.readmsg__reply-content-to'' : ''.sendmsg__form-label-field:not(:last)'';\r\n\r\n					$(droppableElem).droppable({\r\n						hoverClass: ''dragged-hover'',\r\n						tolerance: ''pointer'',\r\n\r\n						drop: function(e) {\r\n                            if (Backbone.history.fragment.indexOf(''sendmsg'') === -1) {\r\n                                app.page.navigate(''#sendmsg'', {trigger: true});\r\n                            }\r\n\r\n							var contact = $(e.toElement).parent(),\r\n								email = contact.find(''.contacts__contact-email'').text(),\r\n								name = contact.find(''.contacts__contact-name'').text(),\r\n								input = $(e.target),\r\n								currentEmails = [];\r\n\r\n							input.find(''.autocomplete__entry'').map(function() {\r\n								currentEmails.push($(this).attr(''title''));\r\n							});\r\n\r\n							if (currentEmails.join('''').indexOf(email) === -1) {\r\n								var key = $.Event("keydown");\r\n									key.keyCode = 13;\r\n\r\n								input.find(''input'').val(email).trigger(key);\r\n\r\n								if (name.length > 1) {\r\n									input.find(''.autocomplete__entry'').last().attr(''name'', name).html(''<span></span>'' + name);\r\n								}\r\n							}\r\n						}\r\n					}).addClass(''dragged-scope'').append(''<div class="dragged-scope-message">'' + Lang(''sendmsg_dragged_message'') + ''</div>'');\r\n				}.bind(this),\r\n\r\n				stop: function(e) {\r\n                    console.log(e.cancelBubble);\r\n					var droppableElem = $(''.readmsg__reply'').hasClass(''show'') ? ''.readmsg__reply-content-to'' : ''.sendmsg__form-label-field:not(:last)'';\r\n\r\n                    $(''#sendmsg-popup'').removeClass(''show'');\r\n\r\n                    $(''.contacts__delete-area'').removeClass(''show'');\r\n					$(''.contacts'').removeClass(''draggable show'');\r\n					$(droppableElem).droppable(''destroy'').removeClass(''dragged-scope'').find(''.dragged-scope-message'').remove();\r\n\r\n					var cc = $(''.sendmsg__form-label.cc''),\r\n						bcc = $(''.sendmsg__form-label.bcc'');\r\n\r\n					if (cc.find(''.sendmsg__form-label-field'').text() == '''') {\r\n						cc.removeClass(''show'');\r\n					}\r\n\r\n					if (bcc.find(''.sendmsg__form-label-field'').text() == '''') {\r\n						bcc.removeClass(''show'');\r\n					}\r\n\r\n                    setTimeout(function() {\r\n                        $(''#sendmsg-popup'').remove();\r\n                    }, 200);\r\n				}.bind(this)\r\n			});\r\n		}', 0, '', '2014-08-15 15:38:51'),
(217, 'No title', 'js', ' createSendmsgForm: function() {\r\n            this.isPopupSnedmsg = true;\r\n\r\n            $(''<div id="sendmsg-popup"></div>'').appendTo(''#screens'');\r\n            views.sendmsg = new app.SendmsgView({el: ''#sendmsg-popup''});\r\n            $(''#sendmsg-popup'').addClass(''transform'');\r\n\r\n            setTimeout(function() {\r\n                $(''#sendmsg-popup'').addClass(''show'');\r\n            }, 100);\r\n\r\n            return false;\r\n        },\r\n\r\n        removeSendmsgForm: function() {\r\n            this.isPopupSnedmsg = false;\r\n\r\n            $(''#sendmsg-popup'').removeClass(''show'');\r\n            $(''.sidebar button'').removeClass(''disabled'').addClass(''default'');\r\n\r\n            setTimeout(function() {\r\n                $(''#sendmsg-popup'').remove();\r\n            }, 200);\r\n\r\n            return false;\r\n        },\r\n\r\n		draggable: function() {\r\n			this.$el.draggable({\r\n				delay: 200,\r\n				helper: ''clone'',\r\n                refreshPositions: true,\r\n\r\n				start: function() {\r\n                    $(''.contacts__delete-area'').droppable({\r\n                        hoverClass: ''hover'',\r\n                        tolerance: ''pointer'',\r\n                        drop: function() {\r\n                            this.remove();\r\n                            this.isDropRmove = true;\r\n                        }.bind(this)\r\n                    }).addClass(''show'');\r\n\r\n					if (Backbone.history.fragment.indexOf(''sendmsg'') === -1) {\r\n                        this.createSendmsgForm();\r\n					}\r\n\r\n                    views.sendmsg && views.sendmsg.trigger(''contact.dragged'');\r\n				}.bind(this),\r\n\r\n				stop: function(e) {\r\n                    $(''.contacts__delete-area'').removeClass(''show'');\r\n                    $(''.contacts'').removeClass(''draggable show'');\r\n\r\n                    if (!e.cancelBubble || this.isDropRmove) {\r\n                        this.isPopupSnedmsg && this.removeSendmsgForm();\r\n                    }\r\n                    else {\r\n                        this.isPopupSnedmsg && app.page.navigate(''#sendmsg'', {trigger: true});\r\n                    }\r\n\r\n                    views.sendmsg && views.sendmsg.trigger(''contact.dropped'', {\r\n                        contact: this.isDropRmove ? '''' : this.model\r\n                    });\r\n\r\n                    this.isDropRmove = false;\r\n				}.bind(this)\r\n			});\r\n		}', 0, '', '2014-08-21 12:56:33'),
(218, 'No title', 'php', '\r\nArray\r\n(\r\n    [advertiser_ref_id] => \r\n    [advertiser_sub_ad_name] => \r\n    [advertiser_sub_ad] => \r\n    [advertiser_sub_adgroup_name] => \r\n    [advertiser_sub_adgroup] => \r\n    [advertiser_sub_campaign_name] => \r\n    [advertiser_sub_campaign] => \r\n    [advertiser_sub_keyword_name] => \r\n    [advertiser_sub_keyword] => \r\n    [advertiser_sub_placement_name] => \r\n    [advertiser_sub_placement] => \r\n    [advertiser_sub_publisher_name] => \r\n    [advertiser_sub_publisher] => \r\n    [advertiser_sub_site_name] => \r\n    [advertiser_sub_site] => \r\n    [click_device_brand] => Apple\r\n    [click_device_model] => iPad\r\n    [postback_publisher_id] => 11566\r\n    [publisher_name] => Popunder\r\n    [publisher_ref_id] => \r\n    [publisher_sub_ad_name] => \r\n    [publisher_sub_adgroup_name] => \r\n    [publisher_sub_campaign_name] => \r\n    [publisher_sub_keyword_name] => \r\n    [publisher_sub_placement_name] => \r\n    [publisher_sub_publisher_name] => \r\n    [publisher_sub_site_name] => 123123123\r\n    [publisher_sub1] => \r\n    [publisher_sub2] => \r\n    [publisher_sub3] => \r\n    [publisher_sub4] => \r\n    [publisher_sub5] => \r\n    [session_id] => 883b5a3758c63e3dd6-20140822-1199\r\n    [sub_ad] => \r\n    [sub_adgroup] => \r\n    [sub_campaign] => \r\n    [sub_keyword] => \r\n    [sub_placement] => \r\n    [sub_publisher] => \r\n    [sub_site] => 123123123\r\n    [tracking_id] => e9c7cb514d8f996effc5eb93bf26d314\r\n    [search_string] => \r\n    [sdk] => ios\r\n    [site_event_id] => 884247278\r\n    [site_event_offset] => 0\r\n    [store_app_id] => 520117759\r\n    [user_agent] => Mozilla/5.0 (iPad; CPU OS 6_1_3 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Mobile/10B329\r\n    [view_percent] => \r\n    [view_max] => \r\n    [conversion_date] => 2014-08-22\r\n    [conversion_datetime-120] => 2014-08-22 12:08:37\r\n    [conversion_datetime-300] => 2014-08-22 12:05:37\r\n    [conversion_datetime] => 2014-08-22 12:10:37\r\n    [conversion_time] => 12:10:37\r\n    [conversion_timestamp] => 1408709437\r\n    [conversion_timestamp_milliseconds] => 1408709437188\r\n    [conversion_timestamp-120] => 1408709317\r\n    [conversion_timestamp-300] => 1408709137\r\n    [date] => 2014-08-22\r\n    [datetime] => 2014-08-22 12:10:37\r\n    [impression_date] => \r\n    [impression_datetime] => \r\n    [impression_time] => \r\n    [impression_timestamp] => \r\n    [impression_timestamp_milliseconds] => \r\n    [install_datetime] => \r\n    [install_timestamp] => \r\n    [session_date] => 2014-08-22\r\n    [session_datetime] => 2014-08-22 12:03:15\r\n    [session_device_ip] => 193.243.174.43\r\n    [session_referrer] => \r\n    [session_time] => 12:03:15\r\n    [session_timestamp] => 1408708995\r\n    [session_timestamp_milliseconds] => 1408708995188\r\n    [session_user_agent] => Mozilla/5.0 (iPad; CPU OS 6_1_3 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10B329 Safari/8536.25\r\n    [time] => 12:10:37\r\n    [campaign_id] => 277328\r\n    [campaign_name] => Transport Empire - iOS (Default)\r\n    [campaign_url_id] => 48480\r\n    [attributable_log_id] => 883b5a3758c63e3dd6-20140822-1199\r\n    [install_log_id] => \r\n    [log_id] => b753bfab9933b16091-20140822-1199\r\n    [postback_log_id] => 042d0e233fd8725a36-20140822-1199\r\n    [ad_network_id] => \r\n    [advertiser_id] => 1199\r\n    [advertiser_name] => Game Insight\r\n    [amount] => 0\r\n    [app_ad_tracking_disabled] => 0\r\n    [app_ad_tracking] => 1\r\n    [app_version] => 1.03.4\r\n    [attribute_sub1] => \r\n    [attribute_sub2] => \r\n    [attribute_sub3] => \r\n    [attribute_sub4] => \r\n    [attribute_sub5] => \r\n    [authentication_method] => \r\n    [carrier] => Vodafone.de\r\n    [conversion_referral] => \r\n    [conversion_status] => approved\r\n    [conversion_user_agent] => Mozilla/5.0 (iPad; CPU OS 6_1_3 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Mobile/10B329\r\n    [country_code] => RUГ‚В¤cy_code=USD\r\n    [device_brand] => Apple\r\n    [device_carrier] => Vodafone.de\r\n    [device_ip] => 193.243.174.43\r\n    [device_model] => iPad3,3\r\n    [device_type] => ios tablet\r\n    [event_id] => 884247278\r\n    [event_items_count] => \r\n    [event_item_names_json] => []\r\n    [event_item_names_string] => \r\n    [event_items_json] => []\r\n    [event_name] => Install\r\n    [fb_app_id] => \r\n    [iap_receipt] => \r\n    [iap_receipt_md5] => \r\n    [is_assist] => 0\r\n    [is_attributed] => 1\r\n    [is_install_attributed] => 1\r\n    [is_first_event] => 1\r\n    [is_first_purchase] => \r\n    [is_reengagement] => \r\n    [is_view_through] => 0\r\n    [language] => ru\r\n    [match_type] => fingerprint\r\n    [mobile_app_type] => iOS\r\n    [nonwindowed_attribution] => 0\r\n    [os_jailbroke] => 0\r\n    [os_version] => 6.1.3\r\n    [package_app_name] => transportempire\r\n    [package_app_version] => 1.03.4\r\n    [package_name] => com.gameinsight.transportempire\r\n    [payout] => 0\r\n    [retry_attempts] => 3\r\n    [revenue_usd] => 0\r\n    [revenue] => 0\r\n)\r\n', 0, '', '2014-08-22 16:46:21'),
(219, 'No title', 'js', '$(''li span.image-title'').hover(function(){\r\n        $(this).prev().css({''border'':''1px solid red''});\r\n    }, function(){\r\n        $(this).prev().css({''border'':''1px solid red''}); // код который ставит старые стили\r\n    });', 0, '', '2014-08-26 19:31:11'),
(220, 'No title', 'php', '?php\r\n\r\nclass graphics\r\n{\r\n	public $data = array();\r\n	public $dataTmp = array();\r\n	\r\n	public $width = 600;\r\n	public $height = 400;\r\n	public $space = 10;\r\n	public $leftSpace = 100;\r\n	public $bottomSpace = 100;\r\n	\r\n	public $borderColor = 0xababab;\r\n	public $bgColor = 0xececec;\r\n	public $lineColor = 0xababab;\r\n	public $bgColumn = 0xafc900;\r\n	public $borderColumn = 0x8fa400;\r\n	public $textColor = 0x828282;\r\n	\r\n	public $onScale = true;\r\n	public $scaleColor = 0xdcdcdc;\r\n	public $numScale = 20;\r\n	public $fontSizeScale = 8;\r\n	\r\n	public $fontSizeValue = 8;\r\n	public $textColorValue = 0x828282;\r\n	\r\n	public $fontSizeKey = 8;\r\n	public $textColorKey = 0x828282;\r\n	\r\n	public $boxBorderColor = 0xababab;\r\n	public $boxBgColor = 0xffffff;\r\n	\r\n	public $font = ''tahoma.ttf'';\r\n	\r\n	public function maxValue()\r\n	{\r\n		$max = 0;\r\n		foreach ($this->data as $key=>$value) if ($value>$max)$max = $value;\r\n		return $max;\r\n	}\r\n	\r\n	public function image()\r\n	{\r\n		$image = imagecreatetruecolor($this->width, $this->height);\r\n		\r\n		imagefill($image, 0, 0, $this->bgColor);\r\n		\r\n		imageline($image, 0, 0, $this->width, 0, $this->borderColor);\r\n		imageline($image, 0, 0, 0, $this->width, $this->borderColor);\r\n		imageline($image, $this->width-1, $this->height, $this->width-1, 0, $this->borderColor);\r\n		imageline($image, 0, $this->height-1, $this->width-1, $this->height-1, $this->borderColor);\r\n		\r\n		$hOffset = $this->width - $this->leftSpace;\r\n		$vOffset = $this->height - $this->bottomSpace -$this->fontSizeValue;\r\n		\r\n		$prop = $this->maxValue()/$vOffset;\r\n		\r\n		foreach ($this->data as $key=>$value) $this->dataTmp[$key] = round($value/$prop);\r\n		\r\n		\r\n		$count = count($this->data);\r\n		$widthColumn = round($hOffset/$count)-$this->space;\r\n		$widthColumnCopy = round($hOffset/$count)-$this->space;\r\n		\r\n		$x1 = $this->leftSpace/2;\r\n		$y1 = 20;\r\n		$x2 = $this->leftSpace/2;\r\n		$y2 = $this->height-($this->bottomSpace/2);\r\n		imageline($image, $x1, $y1, $x2, $y2, $this->lineColor);\r\n		\r\n		$x1 = $this->leftSpace/2;\r\n		$y1 = $this->height - ($this->bottomSpace/2);\r\n		$x2 = $this->width - 20;\r\n		$y2 = $y1; \r\n		imageline($image, $x1, $y1, $x2, $y2, $this->lineColor);\r\n		\r\n		for ($i=0;$i<$vOffset;$i=$i+$this->numScale)\r\n		{\r\n			$x1 = ($this->leftSpace/2)-2;\r\n			$y1 = ($this->height-$this->bottomSpace/2)-$i;\r\n			$x2 = $this->width - 20;\r\n			$y2 = ($this->height-$this->bottomSpace/2)-$i;\r\n			if ($this->onScale) if ($i!=0) imageline($image, $x1+5, $y1, $x2, $y2, $this->scaleColor);\r\n			imagettftext($image, $this->fontSizeValue, 0, $this->leftSpace/(strlen($this->maxValue())+1)-$this->fontSizeValue, $y1+$this->fontSizeValue/2, $this->textColorValue, $this->font, round($i*$prop));\r\n		}\r\n		\r\n		$h = ($this->leftSpace/2)+$this->space;\r\n		\r\n		foreach ($this->dataTmp as $key=>$value)\r\n		{\r\n			$x1 = (($this->leftSpace/2)+$this->space);\r\n			$y1 = ($this->height-($this->bottomSpace/2))-1;\r\n			$x2 = $widthColumn+$h;\r\n			$y2 = ($this->height-($this->bottomSpace/2))-$value;\r\n			imagefilledrectangle($image, $x1, $y1, $x2, $y2, $this->bgColumn);\r\n			\r\n			imagettftext($image, $this->fontSizeValue, 0, $x1+$widthColumnCopy/2-$this->fontSizeValue/2.5*(strlen($value)), $y2-2, $this->textColorValue, $this->font, $this->data[$key]);\r\n			imagettftext($image, $this->fontSizeKey, 0, $x1+$widthColumnCopy/2-$this->fontSizeKey-(strlen($key)), $this->height-($this->bottomSpace/$this->fontSizeKey+2), $this->textColorKey, $this->font, $key);\r\n			\r\n			imageline($image,$x1, $y1, $x1, $y2, $this->borderColumn);\r\n			imageline($image,$x2, $y1, $x2, $y2, $this->borderColumn);\r\n			imageline($image,$x1, $y2, $x2, $y2, $this->borderColumn);\r\n			\r\n			$this->space=(($this->space-($this->leftSpace/2))+$widthColumnCopy)+$h;\r\n			$widthColumn = ($this->space+$widthColumnCopy)-10;\r\n		}\r\n		\r\n		return imagepng($image);\r\n	}\r\n	\r\n	public function ellipseImage()\r\n	{\r\n		$this->height = $this->height*2;\r\n		$color = array(0x5EA27D, 0x7DBFD9, 0xF78D5B, 0xCE64C1, 0xDFD54A);\r\n		$elipse = imagecreatetruecolor($this->height, $this->height);\r\n		imagefill($elipse, 0, 0, $this->bgColor);\r\n		if ($this->width>$this->height)$this->height = $this->width;\r\n		$i=0;\r\n		$r = 0;\r\n		\r\n		foreach ($this->dataTmp as $key=>$value)\r\n		{\r\n			$s = $value+$r;\r\n			imagefilledarc($elipse, $this->height/2, $this->height/2, $this->height-$this->leftSpace/2, $this->height-$this->leftSpace/2, $r, $s, $color[$i], IMG_ARC_EDGED);\r\n			$r = $r+$value;\r\n			$i++;\r\n		}\r\n		return $elipse;\r\n	}\r\n	\r\n	public function ellipse()\r\n	{\r\n		$image = imagecreatetruecolor($this->width, $this->height);\r\n		imagefill($image, 0, 0, $this->borderColor);\r\n		imagefilledrectangle($image, 1, 1, $this->width-2, $this->height-2, $this->bgColor);\r\n		$w = $this->width;\r\n		$h = $this->height;\r\n		$x = $this->width*2-$this->leftSpace;\r\n		$y = $this->height*2-$this->leftSpace;\r\n		if ($this->width<$this->height) $y = $x; else $x = $y;\r\n		\r\n		$color = array(0x5EA27D, 0x7DBFD9, 0xF78D5B, 0xCE64C1, 0xDFD54A);\r\n		$count = count($this->data);\r\n		$sum=0;\r\n		$sum = array_sum($this->data);\r\n		$prop = $sum/360;\r\n		foreach ($this->data as $key=>$value) $this->dataTmp[$key] = round($value/$prop);\r\n\r\n		imagecopyresampled($image,$this->ellipseImage(),150,1,1,2,($this->height/2)-1, ($this->height/2)-2,$this->height-1,$this->height-2);\r\n		\r\n		$h = ($this->fontSizeKey+18)*($count);\r\n		\r\n		imagefilledrectangle($image, 14, 14, 151, $h+1, $this->boxBorderColor);\r\n		imagefilledrectangle($image, 15, 15, 150, $h, $this->boxBgColor);\r\n		\r\n		$t = 1;\r\n		$i=0;\r\n		foreach ($this->data as $key=>$value)\r\n		{\r\n			$y = 35+$t;\r\n			imagettftext($image, 8, 0, 45, $y, $this->textColor, $this->font, $key.''  (''.$value.'')'');\r\n			imagefilledrectangle($image, 24, 25+$t, 36, 37+$t, $this->lineColor);\r\n			imagefilledrectangle($image, 25, 26+$t, 35, 36+$t, $color[$i]);\r\n			\r\n			$t=$t+20;\r\n			$i++;\r\n		}\r\n		\r\n		return imagepng($image);\r\n		\r\n		imagedestroy($image);\r\n		imagedestroy($elipse);\r\n		\r\n	}\r\n	\r\n	public function decGraph()\r\n	{\r\n		$image = imagecreatetruecolor($this->width, $this->height);\r\n		imagefill($image, 0, 0, $this->borderColor);\r\n		imagefilledrectangle($image, 1, 1, $this->width-2, $this->height-2, $this->bgColor);\r\n		\r\n		imageline($image, $this->leftSpace/2, $this->height-$this->bottomSpace/2, $this->width-20, $this->height-$this->bottomSpace/2, $this->borderColor);\r\n		imageline($image, $this->leftSpace/2, $this->height-$this->bottomSpace/2, $this->leftSpace/2, 20, $this->borderColor);\r\n		\r\n		$vOffset = $this->height-$this->bottomSpace/2-20;\r\n		$hOffset = $this->width-$this->leftSpace/2-20;\r\n		\r\n		$count = count($this->data);\r\n		$hProp = ($this->width-($this->leftSpace))/$count;\r\n		$xProp = $this->maxValue()/($vOffset-10);\r\n		\r\n		foreach ($this->data as $key=>$value) $this->dataTmp[$key] = round($value/$xProp);\r\n		/*\r\n		for ($i=0; $i<$hOffset;$i = $i + $this->numScale)\r\n		{\r\n			$x1 = $this->leftSpace/2+$i;\r\n			$y1 = 20;\r\n			$x2 = $this->leftSpace/2+$i;\r\n			$y2 = $this->height-$this->bottomSpace/2-3;\r\n			if ($this->onScale) if ($i!=0) imageline($image, $x1, $y1, $x2, $y2, $this->scaleColor);\r\n			imagefilledellipse($image, $x1, $y2+3, 5, 5, $this->lineColor);\r\n		}\r\n		*/\r\n		for ($i=0; $i<$vOffset;$i = $i + $hProp)\r\n		{\r\n			$x1 = ($this->leftSpace/2)+3;\r\n			$y1 = $this->height-($this->bottomSpace/2)-$i;\r\n			$x2 = $this->width - 20;\r\n			$y2 = $this->height-($this->bottomSpace/2)-$i;\r\n			if ($this->onScale) if ($i!=0) imageline($image, $x1, $y1, $x2, $y2, $this->scaleColor);\r\n			imagettftext($image, $this->fontSizeValue, 0, $this->leftSpace/(strlen($this->maxValue())+1)-$this->fontSizeValue, $y1+$this->fontSizeValue/2, $this->textColorValue, $this->font, round($i*$xProp));\r\n			imagefilledellipse($image, $x1-3, $y1, 5, 5, $this->lineColor);\r\n		}\r\n		\r\n		$x = $this->leftSpace/2+$hProp;\r\n		$w = 5;\r\n		$h = 5;\r\n		$i=1;\r\n		foreach ($this->data as $key=>$value)\r\n		{\r\n			$y = ($this->height - $this->bottomSpace/2)-$this->dataTmp[$key];\r\n			$yy = ($this->height - $this->bottomSpace/2)-next($this->dataTmp);\r\n			\r\n			imagefilledellipse($image, $x, $this->height-$this->bottomSpace/2, 5, 5, $this->lineColor);\r\n			imageline($image, $x, 20, $x, $this->height-$this->bottomSpace/2-3, $this->scaleColor);\r\n			if ($i<$count) imageline($image, $x, $y, $x+$hProp, $yy, $this->borderColumn);\r\n			imagefilledellipse($image, $x, $y, $w+2, $h+2, $this->borderColumn);\r\n			imagefilledellipse($image, $x, $y, $w, $h, $this->bgColumn);\r\n			$x=$x+$hProp;\r\n			$i++;\r\n		}\r\n		\r\n		return imagepng($image);\r\n	}\r\n	\r\n	function otl()\r\n	{\r\n		\r\n		$vOffset = $this->height-$this->bottomSpace/2-20;\r\n		$hOffset = $this->width-$this->leftSpace/2-20;\r\n		\r\n		$count = count($this->data);\r\n		$hProp = round(($this->width-$this->leftSpace/2)/$count);\r\n		$xProp = $this->maxValue()/($vOffset);\r\n		\r\n		foreach ($this->data as $key=>$value) $this->dataTmp[$key] = round($value/$xProp);\r\n		\r\n		$x = $hProp;\r\n		$w = 5;\r\n		$h = 5;\r\n		$i=1;\r\n		\r\n		foreach ($this->data as $key=>$value)\r\n		{\r\n			$y = ($this->height - $this->bottomSpace/2)-$this->dataTmp[$key];\r\n			$yy = ($this->height - $this->bottomSpace/2);\r\n			echo ''Value: ''.$this->dataTmp[$key].'' '';\r\n			echo ''Value Nex: ''.next($this->dataTmp).''<br/>'';\r\n			$x=$x+$hProp;\r\n			$i++;\r\n		}\r\n	}\r\n	\r\n}\r\nheader(''Content-type: image/png'');\r\n$g=new graphics();\r\n$data = array(\r\n	''Петя''=>rand(10,100), \r\n	''Вася''=>rand(10,100), \r\n	''Игорь''=>rand(10,100), \r\n	''Инокентий''=>rand(10,100), \r\n	''Xss''=>rand(10,100), \r\n	''Xss2''=>rand(10,100), \r\n	''Xss3''=>rand(10,100), \r\n	''Xss4''=>rand(10,100), \r\n	''Xss5''=>rand(10,100), \r\n	''Xss6''=>rand(10,100), \r\n	''Xss7''=>rand(10,100), \r\n	''Xss8''=>rand(10,100), \r\n	''Xss9''=>rand(10,100), \r\n	''Xss10''=>rand(10,100));\r\n	\r\n$g->data = $data;\r\n//$g->image();\r\n$g->decGraph();\r\n//$g->rozr();\r\n//s$g->otl();\r\n\r\n?>', 0, '', '2014-08-28 15:23:03'),
(221, 'No title', 'js', 'var Player = angular.module(''Player'', [''ngAnimate'', ''pascalprecht.translate'', ''ui.router'']);\r\n\r\nPlayer.config(function($stateProvider, $urlRouterProvider, $translateProvider, Config) {\r\n    $translateProvider.useStaticFilesLoader({\r\n        prefix: Config.lang.prefix,\r\n        suffix: Config.lang.suffix\r\n    });\r\n\r\n    $translateProvider.preferredLanguage(\r\n        Config.lang.support.indexOf(navigator.language) !== -1 ? navigator.language : Config.lang.default\r\n    );\r\n\r\n    $stateProvider.state(''main'', {\r\n        url: "",\r\n        views: {\r\n            "header": {\r\n                controller: "HeaderCtrl",\r\n                templateUrl: "views/main/headerView.html"\r\n            },\r\n            "menu": {\r\n                controller: "MenuCtrl",\r\n                templateUrl: "views/main/menuView.html"\r\n            },\r\n            "playlist": {\r\n                controller: "",\r\n                templateUrl: "views/main/playlistView.html"\r\n            },\r\n            "content": {\r\n                controller: "",\r\n                templateUrl: "views/main/contentView.html"\r\n            }\r\n        }\r\n    }).state(''main.slide'', {\r\n        views: {\r\n            "slide@": {\r\n                templateUrl: "views/main/slideView.html"\r\n            }\r\n        }\r\n    }).state(''main.slide.news'', {\r\n        template: ""\r\n    });\r\n}).run(function() {\r\n\r\n});', 0, '', '2014-09-03 09:50:09'),
(222, 'No title', 'js', 'if(data) {\r\n					if($(''.table_header'').length == 0 || $(''.table_header span'').eq(0).html()!=monthes[cur_month]+'', ''+cur_day) $(''#plan'').prepend(''<tr class="''+todays_class+'' table_header"><td colspan="7"><span>''+monthes[cur_month]+'', ''+cur_day+''</span></td></tr><tr class="''+todays_class+'' closer"><td colspan="7"></td></tr>'');\r\n					$(''.table_header'').eq(0).after(''<tr class="''+todays_class+''"><td class="data">#''+data[''response''][0][''id'']+''</td><td class="project">''+$(''.projects_selector option:selected'').text()+''</td><td class="about">''+$(''#add_thread_form textarea'').val()+''</td><td class="super_project">''+data[''response''][0][''name'']+''</td><td class="start"><a href="">начать</a>''+data[''time''].slice(-8)+''</td><td class="end">''+data[''time''].slice(-8)+''</td><td class="time">00:00:00</td></tr>'');\r\n				}', 0, '', '2014-09-18 16:33:37'),
(223, 'No title', 'php', '$(function(){\r\n        $( ''a#more-options'').click(function(){\r\n            $( ''#more-options-block'' ).show(); return false;\r\n        });\r\n        $( ''.change-status'' ).click(function(){\r\n            self = this;\r\n            $(this).attr( ''disabled'', true).val(''<?=_(''Загрузка...'')?>'');\r\n            $.ajax({\r\n                type:   ''post'',\r\n                url:    ''<?=$this->url_ajax( ''update'' )?>'',\r\n                data:   {\r\n                    lead_id:    $( this ).attr( ''lead_id'' ),\r\n                    status:     $( this ).attr( ''status'' ),\r\n                    dt:         $( this ).attr( ''dt'' )\r\n                },\r\n                success: function( response ){\r\n                    response = $.parseJSON( response );\r\n                    $(self).removeAttr( ''disabled'' ).attr( ''status'', response.lead_status == ''<?=\\DB\\lead::CONDITION_DISAPPROVED?>'' ? ''<?=\\DB\\lead::CONDITION_APPROVED?>'' : ''<?=\\DB\\lead::CONDITION_DISAPPROVED?>'' );\r\n                    if( response.status == ''ok'' ) {\r\n                        if( response.lead_status == ''<?=\\DB\\lead::CONDITION_DISAPPROVED?>'' ) {\r\n                            $(self).val(''<?=_( ''Принять'' )?>'');\r\n                        } else {\r\n                            $(self).val(''<?=_( ''Отклонить'' )?>'');\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    });', 0, '', '2014-09-18 16:38:23'),
(224, 'No title', 'js', 'callback && typeof callback === ''function'' && callback()', 0, '', '2014-09-25 14:48:29'),
(225, 'No title', 'js', 'Player.constant(''Config'', {\r\n    api: {\r\n        vk: {\r\n            url: ''https://api.vk.com/method/'',\r\n            clientId: 3989655,\r\n            scope: ''audio,status,offline'',\r\n            ver: ''5.25'',\r\n            requestLimit: 3\r\n        },\r\n        lastFm: {\r\n            url: ''https://ws.audioscrobbler.com/2.0/'',\r\n            key: ''4d1b3ad77378fa5c95fe3483b3caf97b'',\r\n            secret: ''b19a84c20f77a31b7113f128380d66d6'',\r\n            format: ''json''\r\n        }\r\n    },\r\n\r\n    oauth: {\r\n        redirectURL: ''https://'' + chrome.runtime.id + ''.chromiumapp.org/cb'',\r\n        vk: {\r\n            url: ''https://oauth.vk.com/authorize?'',\r\n            display: ''page'',\r\n            responseType: ''token''\r\n        }\r\n    },\r\n\r\n    analytics: {\r\n        service: ''cMusic Player'',\r\n        tracker: ''UA-47794396-1''\r\n    },\r\n\r\n    user: {\r\n\r\n    },\r\n\r\n    lang: {\r\n        default: ''ru'',\r\n        prefix: ''lang/'',\r\n        suffix: ''.json'',\r\n        support: [''ru'', ''en'']\r\n    },\r\n\r\n    app: {\r\n        volume: 0.8,\r\n        imageLocalCache: true,\r\n        syncGoogleDrive: true,\r\n        notifications: {\r\n            enable: true,\r\n            type: ''basic''\r\n        },\r\n        autocomplete: {\r\n            enable: true,\r\n            artists: 5,\r\n            tracks: 5\r\n        },\r\n        itemsInPage: {\r\n            tracks: {\r\n                default: 50,\r\n                top: 10,\r\n                user: 100\r\n            },\r\n            artists: {\r\n                lib: 36,\r\n                similar: {\r\n                    top: 4,\r\n                    all: 36\r\n                }\r\n            },\r\n            albums: {\r\n                top: 3,\r\n                all: 50\r\n            },\r\n            events: {\r\n                artist: 50,\r\n                user: 30\r\n            }\r\n        }\r\n    }\r\n});', 0, '', '2014-09-26 17:13:30'),
(226, '123', 'php', '123', 0, '', '2014-10-06 15:19:31'),
(227, 'No title', 'php', 'class Users extends ORM\\Entity\\Table {\r\n        static public $tableName = ''users'';\r\n    }\r\n\r\n    $users = Users::instance();\r\n\r\n    try {\r\n\r\n        $users->filterByStatus( ''active'' );\r\n        foreach( $users->find() as $item ) {\r\n            $item->setAccountId( rand( 1, 1000 ) )->setMailingAgree( ''YES'' )->save();\r\n        }\r\n\r\n    } catch( \\Exception $e ) {\r\n        die( ''<h1>''. $e->getMessage() .''</h1>'' );\r\n    }', 0, '', '2014-10-10 16:17:21'),
(228, '\\DB\\Post::row(); test', 'css', '            $row = \\DB\\Post::row();\r\n\r\n            $row->title = ''Lorem ipsum'';\r\n            $row->text  = md5( ''test'' );\r\n            $row->setAuthorId( rand( 1, 100 ) )->setCreated( date( ''Y-m-d H:i:s'', time() - 50944 ) );\r\n\r\n            $row->save();\r\n\r\n            die(var_dump( $row->id() )); // id of new post', 0, '', '2014-10-16 19:32:37'),
(229, 'Func', 'php', '<?php\r\n\r\n    namespace Sy\\ORM\\Query;\r\n\r\n    abstract class Func {\r\n\r\n        use BuilderTrait;\r\n\r\n        abstract public function wrap( $tableName = null, $columnName = null, $aliasName = null );\r\n\r\n    }', 0, '', '2014-10-18 13:15:22'),
(230, 'test', 'php', '        if( $codeItem->id() > 0 ) {\r\n            return $this->render( ''code/item'', array(\r\n                ''item''  => $codeItem,\r\n                ''mime''  => array(\r\n                    ''php''	=> ''text/x-php'',\r\n                    ''js''	=> ''text/javascript'',\r\n                    ''html''	=> ''text/html'',\r\n                    ''css''	=> ''text/css''\r\n                )\r\n            ) );\r\n        } else {\r\n            Error::warning( ''Access denied'' );\r\n            return $this->render( ''code/enter-password'', array() );\r\n        }', 0, '', '2014-11-06 16:00:36'),
(231, 'CodeModel', 'php', '<?php\r\n\r\n    use \\Sy\\Core,\r\n        \\Sy\\Error\\Error,\r\n        \\Sy\\Common\\Validator,\r\n        \\Sy\\Utils;\r\n\r\n    class CodeModel extends Core\\Model {\r\n\r\n        public function getCode( $codeId = 0 ) {\r\n            $shareLink              = $this->request->get( ''share-link'', null );\r\n            $accessPassword         = $this->request->get( ''access-password'', null );\r\n\r\n            $codeItem               = \\DB\\Code::instance()->findPk( $codeId );\r\n\r\n            if( $codeItem->getAuthorId() > 0 && $codeItem->getPassword() != '''' ) {\r\n                if( ! empty( $shareLink ) ) {\r\n                    $parts = explode( '':'', Utils\\Crypt::instance()->decode( $shareLink, ''kill.li'' ) );\r\n                    if( isset( $parts[0] ) && isset( $parts[1] ) ) {\r\n                        $codeId     = intval( $parts[0] );\r\n                        $authorId   = intval( $parts[1] );\r\n                        if( $codeItem->id() == $codeId && $codeItem->getAuthorId() == $authorId ) {\r\n                            return $codeItem;\r\n                        }\r\n                    }\r\n                } else if ( ! empty( $accessPassword ) ) {\r\n                    $password = Utils\\Crypt::instance()->decode( $accessPassword, session_id() );\r\n                    if( $codeItem->getPassword() == $password ) {\r\n                        return $codeItem;\r\n                    } else {\r\n//                        Error::critical( ''Password invalid'' );\r\n                    }\r\n                }\r\n                return \\DB\\Code::row();\r\n            } else {\r\n                return $codeItem;\r\n            }\r\n\r\n        }\r\n\r\n        public function addCode( array $data = [] ) {\r\n\r\n            $code = \\DB\\Code::row();\r\n\r\n            $validator  = new Validator();\r\n            $validator->attachData( $data );\r\n            $validator->addRule(\r\n                new Validator\\Rule( ''title'', ''notempty'', null, ''Заголовок не может быть пустым'' )\r\n            );\r\n            $validator->addRule(\r\n                new Validator\\Rule( ''source'', ''notempty'', null, ''Поле с кодом не может быть пустое'' )\r\n            );\r\n            $validator->addRule(\r\n                new Validator\\Rule( ''password'', ''callback'', function( $data ){\r\n                    return ( $data == '''' || \\Sy::app()->auth->isLogged() );\r\n                }, ''Чтобы ввести пароль Вас нужно авторизироватся'' )\r\n            );\r\n            $validator->run();\r\n\r\n            if( $validator->isError() ) {\r\n                Error::critical( join( ''<br />'', $validator->getErrors() ) );\r\n            } else {\r\n                $auth = \\Sy::app()->auth;\r\n\r\n                $code->setTitle( $data[''title''] );\r\n                $code->setLanguage( $data[''language''] );\r\n                $code->setSource( $data[''source''] );\r\n\r\n                if( $auth->isLogged() )\r\n                    $code->setAuthorId( $auth->id() );\r\n                if( ! empty( $data[''password''] ) )\r\n                    $code->setPassword( md5( $data[''password''] ) );\r\n\r\n                $code->setAddedAt( date( ''Y-m-d H:i:s'' ) );\r\n\r\n                $code->save();\r\n            }\r\n\r\n            return $code;\r\n        }\r\n\r\n    }', 17, '098f6bcd4621d373cade4e832627b4f6', '2014-11-06 16:01:12'),
(232, 'CodeController', 'php', '<?php\r\n\r\nuse \\Sy\\Core,\r\n    \\Sy\\Common\\Validator,\r\n    \\Sy\\Error\\Error,\r\n    \\Sy\\Utils\\NumConv,\r\n    \\Sy\\Utils\\Crypt;\r\n\r\nclass CodeController extends Core\\Controller {\r\n\r\n    public function __construct() {\r\n        parent::__construct();\r\n        $this->response->setLayout( ''index'' );\r\n        $this->response->set( ''left'', $this->render( ''code/common/left_menu'', array(\r\n            ''latest''    => \\DB\\Code::instance()->orderByAddedAt( ''DESC'' )->limit( 0, 5 )->find()\r\n        ) ) );\r\n    }\r\n\r\n    public function listAction(){\r\n        $page   = $this->request->get( ''page'', 0 );\r\n        $codes  = \\DB\\Code::instance()->orderByAddedAt( ''DESC'' )->pagi( $page, 36 )->find();\r\n        return $this->render( ''code/list'', array(\r\n            ''items''  => $codes\r\n        ) );\r\n    }\r\n\r\n    public function itemAction( $codeId = null ) {\r\n        $codeId         = NumConv::instance()->decode( $codeId );\r\n        $model          = $this->getModel( ''code'' );\r\n        $codeItem       = $model->getCode( $codeId );\r\n\r\n        if( $this->request->isPost() ) {\r\n            $accessPassword = Crypt::instance()->encode( md5( $this->request->post( ''password'' ) ), session_id() );\r\n            $this->redirect( url( null, [ ''access-password'' => $accessPassword ] ) );\r\n        }\r\n\r\n        if( $codeItem->id() > 0 ) {\r\n            return $this->render( ''code/item'', array(\r\n                ''item''  => $codeItem,\r\n                ''mime''  => array(\r\n                    ''php''	=> ''text/x-php'',\r\n                    ''js''	=> ''text/javascript'',\r\n                    ''html''	=> ''text/html'',\r\n                    ''css''	=> ''text/css''\r\n                )\r\n            ) );\r\n        } else {\r\n            Error::warning( ''Access denied'' );\r\n            return $this->render( ''code/enter-password'', array() );\r\n        }\r\n    }\r\n\r\n    public function addAction() {\r\n        $data = [];\r\n        if( $this->request->isPost() ) {\r\n            $data   = $this->request->post( ''code'', [] );\r\n            $model  = $this->getModel( ''code'' );\r\n            $code   = $model->addCode( $data );\r\n            if( !! $code ) {\r\n                $this->redirect( ''k/''. NumConv::instance()->encode( $code->id() ) );\r\n            }\r\n        }\r\n        return $this->render( ''code/form'', array(\r\n            ''data''  => $data\r\n        ) );\r\n    }\r\n\r\n}', 17, '46f94c8de14fb36680850768ff1b7f2a', '2014-11-07 07:10:00'),
(233, 'ToolModel', 'php', '<?php\r\n\r\n    use \\Sy\\Core,\r\n        \\Sy\\Error\\Error,\r\n        \\Sy\\Common\\Validator;\r\n\r\n    class ToolModel extends Core\\Model {\r\n\r\n        public function addTool( array $data = [] ) {\r\n\r\n            $validator  = new Validator();\r\n            $auth       = \\Sy::app()->auth;\r\n            $tool       = \\DB\\Tool::row();\r\n\r\n            if( $auth->isLogged() ) {\r\n\r\n                $validator->attachData( $data );\r\n                $validator->addRule( new Validator\\Rule( ''title'', ''notempty'', null, ''Введите название'' ) );\r\n                $validator->addRule( new Validator\\Rule( ''description'', ''notempty'', null, ''Введите описание'' ) );\r\n                $validator->addRule( new Validator\\Rule( ''url'', ''notempty'', null, ''Введите URL'' ) );\r\n                $validator->run();\r\n\r\n                if( $validator->isError() ) {\r\n                    Error::critical( join( ''<br />'', $validator->getErrors() ) );\r\n                } else {\r\n\r\n                    $tool\r\n                        ->setTitle( $data[''title''] )\r\n                        ->setDescription( $data[''description''] )\r\n                        ->setUrl( $data[''url''] );\r\n                    $tool->save();\r\n                }\r\n\r\n            } else {\r\n                Error::critical( ''Авторизируйтесь для совершения данного действия'' );\r\n            }\r\n\r\n            return $tool;\r\n        }\r\n\r\n    }', 17, '46f94c8de14fb36680850768ff1b7f2a', '2014-11-13 12:40:05');
INSERT INTO `codes` (`id`, `title`, `language`, `source`, `author_id`, `password`, `added_at`) VALUES
(234, 'UrlBuilder', 'php', '<?php\r\n\r\n    namespace Sy\\Core;\r\n\r\n    class UrlBuilder {\r\n\r\n        use SingletonTrait;\r\n\r\n        protected\r\n            $routes         = [],\r\n\r\n            $controller     = null,\r\n            $action         = null,\r\n            $params         = [],\r\n            $method         = null,\r\n\r\n            $path           = [];\r\n\r\n        protected function init() {\r\n            $app = \\Sy::app();\r\n            if( $app->router->getCacheFile() != false ) {\r\n                $this->routes   = include $app->router->getCacheFile();\r\n            }\r\n        }\r\n\r\n        public function setControllerName( $name = null ) {\r\n            $this->controller = $name; return $this;\r\n        }\r\n\r\n        public function setActionName( $name = null ) {\r\n            $this->action = $name; return $this;\r\n        }\r\n\r\n        public function setMethodName( $name = null ) {\r\n            $this->method = $name; return $this;\r\n        }\r\n\r\n        public function setParams( array $params = [] ) {\r\n            $this->params = $params; return $this;\r\n        }\r\n\r\n        public function create( $placeholder = null, array $params = [], $method = null ) {\r\n\r\n            if( $placeholder != null ) {\r\n                list( $controller, $action )\r\n                    = explode( '':'', $placeholder );\r\n                $this->setControllerName( $controller )->setActionName( $action );\r\n            }\r\n\r\n            if( $method != null )\r\n                $this->setMethodName( $method );\r\n\r\n            if( ! empty( $params ) )\r\n                $this->setParams( $params );\r\n\r\n            $cacheKey   = ''url_builder.url:''\r\n                . join( '''', $params )\r\n                . $this->controller\r\n                . $this->action\r\n                . $this->method;\r\n\r\n            $cache = new Cache( $cacheKey, 86400 );\r\n\r\n            $cache->clean();\r\n\r\n            if( $cache->check() ) {\r\n                $this->path = $cache->get();\r\n            } else {\r\n                $this->_findPath( $this->routes[''routes''], [], 0 );\r\n                $cache->write( $this->path );\r\n            }\r\n\r\n            return ! empty( $this->path )\r\n                ? join( ''/'',  $this->path )\r\n                : null;\r\n        }\r\n\r\n        protected function _findPath( array $routes = [], array $parent = [], $i = 0 ) {\r\n            foreach( $routes as $route ) {\r\n                $route[''parent''] = & $parent;\r\n                if (\r\n                    $route[''controller'']    == $this->controller\r\n                    && $route[''action'']     == $this->action\r\n                    && (\r\n                        ! isset( $route[''method''] )\r\n                        || $route[''method''] == $this->method\r\n                    )\r\n                ) {\r\n                    $this->_buildPath( $route )->_renderParams();\r\n                } else if( isset( $route[''children''] ) ) {\r\n                    $this->_findPath( $route[''children''], $route, $i + 1 );\r\n                }\r\n            }\r\n        }\r\n\r\n        protected function _buildPath( array $route = [] ) {\r\n            $parts  = [];\r\n            while( $route ) {\r\n                $parts[] = $route[''match''];\r\n                $route = isset( $route[''parent''] ) ? $route[''parent''] : false;\r\n            }\r\n            $this->path = array_reverse( $parts );\r\n            return $this;\r\n        }\r\n\r\n        protected function _renderParams() {\r\n            $params = $this->params;\r\n            $parts  = [];\r\n\r\n            if( count( $this->path ) > 0 ) {\r\n                foreach( $this->path as $part ) {\r\n                    if( strpos( $part, ''}'' ) === false ) {\r\n                        $parts[] = $part;\r\n                    } else {\r\n                        $parts[] = preg_replace_callback( ''/\\{([-_\\w]+)\\|?(num|str)?\\}/uis'',\r\n                            function( $match ) use ( & $params ) {\r\n                                return count( $params ) > 0\r\n                                    ? isset( $match[2] ) && $match[2] == ''num''\r\n                                        ? (int) array_pop( $params )\r\n                                        : (string) array_pop( $params )\r\n                                    : 0;\r\n                            }, $part );\r\n                    }\r\n                }\r\n                $this->path = $parts;\r\n            }\r\n        }\r\n\r\n    }', 17, '', '2014-11-20 11:52:37'),
(235, ' Sy\\Core\\SingletonTrait', 'php', '<?php\r\n\r\n    namespace Sy\\Core;\r\n\r\n    trait SingletonTrait {\r\n\r\n        protected static\r\n            $instances = [];\r\n\r\n        final static public function instance() {\r\n            $args   = func_get_args();\r\n            $hash   = md5( get_called_class() . implode( $args ) . count( $args, true ) );\r\n\r\n            if( ! isset( static::$instances[$hash] ) ) {\r\n                static::$instances[$hash] = ( new \\ReflectionClass( get_called_class() ) )\r\n                    ->newInstanceArgs( $args );\r\n            }\r\n\r\n            return static::$instances[$hash];\r\n        }\r\n\r\n        final public function __construct() {\r\n            call_user_func_array( [ $this, ''init'' ], func_get_args() );\r\n        }\r\n\r\n        abstract protected function init();\r\n\r\n    }', 17, '46f94c8de14fb36680850768ff1b7f2a', '2014-11-25 09:37:46'),
(236, 'HasDataTrait', 'php', '<?php\r\n\r\n    namespace Sy\\Core;\r\n\r\n    trait HasDataTrait {\r\n\r\n        public function & get( $key = null, $default = null ) {\r\n            $data   = & $this->getData();\r\n            if( $this->has( $key ) ) $value = & $data[$key];\r\n            else $value = $default;\r\n            return $value;\r\n        }\r\n\r\n        public function set( $key = null, $value = null ) {\r\n            $data       = & $this->getData();\r\n            $data[$key] = $value;\r\n            return $this;\r\n        }\r\n\r\n        public function & all() {\r\n            return $this->getData();\r\n        }\r\n\r\n        public function has( $key = null ) {\r\n            return array_key_exists( $key, $this->getData() );\r\n        }\r\n\r\n        abstract protected function & getData();\r\n\r\n    }', 17, '698d51a19d8a121ce581499d7b701668', '2014-11-25 11:43:15'),
(237, 'User Row', 'php', '<?php\r\n\r\n    namespace DB;\r\n\r\n    use \\Sy\\ORM\\Entity;\r\n\r\n    class User extends Entity\\Table {\r\n        static protected\r\n            $tableName  = ''system_auth'',\r\n            $rowClass   = ''\\DB\\RowUser'';\r\n    }\r\n\r\n    class RowUser extends Entity\\Row {\r\n\r\n        public function registerDate() {\r\n            return ( new \\DateTime( $this->getAddedAt() ) )->format( ''d.m.Y H:i:s'' );\r\n        }\r\n\r\n    }', 20, '', '2014-12-05 19:37:31'),
(238, 'active query', 'php', '<?php\r\n\r\n    namespace Sy\\ORM\\Query;\r\n\r\n    use \\Sy\\ORM\\Exception\\Error as ORMException,\r\n        \\Sy\\ORM\\Query;\r\n\r\n    class ActiveQuery {\r\n\r\n        private\r\n            $builder = null;\r\n\r\n        public function __construct( Query\\Builder $builder ) {\r\n            $this->builder = $builder;\r\n        }\r\n\r\n        public function select( $table = null, array $where = array(), array $groupBy = array(), array $orderBy = array() ) {\r\n            $this->builder\r\n                ->select()\r\n                ->table( $table )\r\n                ->group( $groupBy )\r\n                ->order( $orderBy );\r\n            $this->_where( $where );\r\n            return $this->builder->getConnection()->query( $this->builder->query() );\r\n        }\r\n\r\n        public function insert( $table = null, array $data = array() ) {\r\n            $query = $this->builder\r\n                ->insert()\r\n                ->table( $table )\r\n                ->bind( $data )\r\n                ->query();\r\n            return $this->builder->getConnection()->execute( $query );\r\n        }\r\n\r\n        public function update( $table = null, array $data = array(), array $where = array() ) {\r\n            $this->builder\r\n                ->update()\r\n                ->table( $table )\r\n                ->bind( $data );\r\n            $this->_where( $where );\r\n            return $this->builder->getConnection()->execute( $this->builder->query() );\r\n        }\r\n\r\n        public function delete( $table = null, array $where = array() ) {\r\n            $this->builder\r\n                ->delete()\r\n                ->table( $table );\r\n            $this->_where( $where );\r\n            return $this->builder->getConnection()->execute( $this->builder->query() );\r\n        }\r\n\r\n        private function _where( array $where = array() ) {\r\n            if( count( $where ) != count( $where, true ) && is_numeric( key( $where ) ) ) {\r\n                foreach( $where as $expression ) {\r\n                    $this->builder->where( $expression );\r\n                }\r\n            } else {\r\n                $this->builder->where( $where );\r\n            }\r\n        }\r\n\r\n    }', 20, '', '2014-12-05 19:52:27'),
(239, 'php hl', 'js', '(function() {\r\n  function keywords(str) {\r\n    var obj = {}, words = str.split(" ");\r\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\r\n    return obj;\r\n  }\r\n  function heredoc(delim) {\r\n    return function(stream, state) {\r\n      if (stream.match(delim)) state.tokenize = null;\r\n      else stream.skipToEnd();\r\n      return "string";\r\n    };\r\n  }\r\n  var phpConfig = {\r\n    name: "clike",\r\n    keywords: keywords("abstract and array as break case catch class clone const continue declare default " +\r\n                       "do else elseif enddeclare endfor endforeach endif endswitch endwhile extends final " +\r\n                       "for foreach function global goto if implements interface instanceof namespace " +\r\n                       "new or private protected public static switch throw trait try use var while xor " +\r\n                       "die echo empty exit eval include include_once isset list require require_once return " +\r\n                       "print unset __halt_compiler self static parent"),\r\n    blockKeywords: keywords("catch do else elseif for foreach if switch try while"),\r\n    atoms: keywords("true false null TRUE FALSE NULL"),\r\n    multiLineStrings: true,\r\n    hooks: {\r\n      "$": function(stream, state) {\r\n        stream.eatWhile(/[\\w\\$_]/);\r\n        return "variable-2";\r\n      },\r\n      "<": function(stream, state) {\r\n        if (stream.match(/<</)) {\r\n          stream.eatWhile(/[\\w\\.]/);\r\n          state.tokenize = heredoc(stream.current().slice(3));\r\n          return state.tokenize(stream, state);\r\n        }\r\n        return false;\r\n      },\r\n      "#": function(stream, state) {\r\n        while (!stream.eol() && !stream.match("?>", false)) stream.next();\r\n        return "comment";\r\n      },\r\n      "/": function(stream, state) {\r\n        if (stream.eat("/")) {\r\n          while (!stream.eol() && !stream.match("?>", false)) stream.next();\r\n          return "comment";\r\n        }\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  CodeMirror.defineMode("php", function(config, parserConfig) {\r\n    var htmlMode = CodeMirror.getMode(config, "text/html");\r\n    var phpMode = CodeMirror.getMode(config, phpConfig);\r\n\r\n    function dispatch(stream, state) {\r\n      var isPHP = state.curMode == phpMode;\r\n      if (stream.sol() && state.pending != ''"'') state.pending = null;\r\n      if (!isPHP) {\r\n        if (stream.match(/^<\\?\\w*/)) {\r\n          state.curMode = phpMode;\r\n          state.curState = state.php;\r\n          return "meta";\r\n        }\r\n        if (state.pending == ''"'') {\r\n          while (!stream.eol() && stream.next() != ''"'') {}\r\n          var style = "string";\r\n        } else if (state.pending && stream.pos < state.pending.end) {\r\n          stream.pos = state.pending.end;\r\n          var style = state.pending.style;\r\n        } else {\r\n          var style = htmlMode.token(stream, state.curState);\r\n        }\r\n        state.pending = null;\r\n        var cur = stream.current(), openPHP = cur.search(/<\\?/);\r\n        if (openPHP != -1) {\r\n          if (style == "string" && /\\"$/.test(cur) && !/\\?>/.test(cur)) state.pending = ''"'';\r\n          else state.pending = {end: stream.pos, style: style};\r\n          stream.backUp(cur.length - openPHP);\r\n        }\r\n        return style;\r\n      } else if (isPHP && state.php.tokenize == null && stream.match("?>")) {\r\n        state.curMode = htmlMode;\r\n        state.curState = state.html;\r\n        return "meta";\r\n      } else {\r\n        return phpMode.token(stream, state.curState);\r\n      }\r\n    }\r\n\r\n    return {\r\n      startState: function() {\r\n        var html = CodeMirror.startState(htmlMode), php = CodeMirror.startState(phpMode);\r\n        return {html: html,\r\n                php: php,\r\n                curMode: parserConfig.startOpen ? phpMode : htmlMode,\r\n                curState: parserConfig.startOpen ? php : html,\r\n                pending: null};\r\n      },\r\n\r\n      copyState: function(state) {\r\n        var html = state.html, htmlNew = CodeMirror.copyState(htmlMode, html),\r\n            php = state.php, phpNew = CodeMirror.copyState(phpMode, php), cur;\r\n        if (state.curMode == htmlMode) cur = htmlNew;\r\n        else cur = phpNew;\r\n        return {html: htmlNew, php: phpNew, curMode: state.curMode, curState: cur,\r\n                pending: state.pending};\r\n      },\r\n\r\n      token: dispatch,\r\n\r\n      indent: function(state, textAfter) {\r\n        if ((state.curMode != phpMode && /^\\s*<\\//.test(textAfter)) ||\r\n            (state.curMode == phpMode && /^\\?>/.test(textAfter)))\r\n          return htmlMode.indent(state.html, textAfter);\r\n        return state.curMode.indent(state.curState, textAfter);\r\n      },\r\n\r\n      electricChars: "/{}:",\r\n\r\n      innerMode: function(state) { return {state: state.curState, mode: state.curMode}; }\r\n    };\r\n  }, "htmlmixed");\r\n\r\n  CodeMirror.defineMIME("application/x-httpd-php", "php");\r\n  CodeMirror.defineMIME("application/x-httpd-php-open", {name: "php", startOpen: true});\r\n  CodeMirror.defineMIME("text/x-php", phpConfig);\r\n})();', 20, '', '2014-12-05 19:53:08'),
(240, 'active query 5.4 php', 'php', '<?php\r\n\r\n    namespace Sy\\ORM\\Query;\r\n\r\n    use \\Sy\\ORM\\Exception\\Error as ORMException,\r\n        \\Sy\\ORM\\Query;\r\n\r\n    class ActiveQuery {\r\n\r\n        private\r\n            $builder = null;\r\n\r\n        public function __construct( Query\\Builder $builder ) {\r\n            $this->builder = $builder;\r\n        }\r\n\r\n        public function select( $table = null, array $where = [], array $groupBy = [], array $orderBy = [] ) {\r\n            $this->builder\r\n                ->select()\r\n                ->table( $table )\r\n                ->group( $groupBy )\r\n                ->order( $orderBy );\r\n            $this->_where( $where );\r\n            return $this->builder->getConnection()->query( $this->builder->query() );\r\n        }\r\n\r\n        public function insert( $table = null, array $data = [] ) {\r\n            $query = $this->builder\r\n                ->insert()\r\n                ->table( $table )\r\n                ->bind( $data )\r\n                ->query();\r\n            return $this->builder->getConnection()->execute( $query );\r\n        }\r\n\r\n        public function update( $table = null, array $data = [], array $where = [] ) {\r\n            $this->builder\r\n                ->update()\r\n                ->table( $table )\r\n                ->bind( $data );\r\n            $this->_where( $where );\r\n            return $this->builder->getConnection()->execute( $this->builder->query() );\r\n        }\r\n\r\n        public function delete( $table = null, array $where = [] ) {\r\n            $this->builder\r\n                ->delete()\r\n                ->table( $table );\r\n            $this->_where( $where );\r\n            return $this->builder->getConnection()->execute( $this->builder->query() );\r\n        }\r\n\r\n        private function _where( array $where = [] ) {\r\n            if( count( $where ) != count( $where, true ) && is_numeric( key( $where ) ) ) {\r\n                foreach( $where as $expression ) {\r\n                    $this->builder->where( $expression );\r\n                }\r\n            } else {\r\n                $this->builder->where( $where );\r\n            }\r\n        }\r\n\r\n    }', 17, '202cb962ac59075b964b07152d234b70', '2014-12-11 02:26:50');
INSERT INTO `codes` (`id`, `title`, `language`, `source`, `author_id`, `password`, `added_at`) VALUES
(241, 'vk audio html', 'html', '\r\n<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\r\n<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">\r\n<head>\r\n<meta http-equiv="X-UA-Compatible" content="IE=edge" />\r\n<link rel="shortcut icon" href="/images/favicon_vk.ico?3" />\r\n\r\n<link rel="apple-touch-icon" href="/images/safari_60.png">\r\n<link rel="apple-touch-icon" sizes="76x76" href="/images/safari_76.png">\r\n<link rel="apple-touch-icon" sizes="120x120" href="/images/safari_120.png">\r\n<link rel="apple-touch-icon" sizes="152x152" href="/images/safari_152.png">\r\n\r\n<meta http-equiv="content-type" content="text/html; charset=windows-1251" />\r\n<meta name="description" content="" />\r\n\r\n<title>Ste Wie&#39;s audio files | 916 audio files</title>\r\n\r\n<noscript><meta http-equiv="refresh" content="0; URL=/badbrowser.php"></noscript>\r\n\r\n<script type="text/javascript">\r\nvar vk = {\r\n  ads_rotate_interval: 120000,\r\n  al: parseInt(''3'') || 4,\r\n  id: 222635444,\r\n  intnat: ''1'' ? true : false,\r\n  host: ''vk.com'',\r\n  lang: 3,\r\n  rtl: parseInt('''') || 0,\r\n  version: 16646,\r\n  stDomains: 3,\r\n  zero: false,\r\n  contlen: 122232,\r\n  loginscheme: ''https'',\r\n  ip_h: ''0973139b72ce4c43ad'',\r\n  vc_h: ''21a92d0fedf8d48c328e121c571d7066'',\r\n  navPrefix: ''/'',\r\n  dt: parseInt(''0'') || 0,\r\n  fs: parseInt(''12'') || 11,\r\n  ts: 1418261362,\r\n  tz: 10800,\r\n  pd: 0,\r\n  pads: 1,\r\n  time: [2014, 12, 11, 4, 29, 22]\r\n}\r\n\r\nwindow.locDomain = vk.host.match(/[a-zA-Z]+\\.[a-zA-Z]+\\.?$/)[0];\r\nvar _ua = navigator.userAgent.toLowerCase();\r\nif (/opera/i.test(_ua) || !/msie 6/i.test(_ua) || document.domain != locDomain) document.domain = locDomain;\r\nvar ___htest = (location.toString().match(/#(.*)/) || {})[1] || '''', ___to;\r\nif (vk.al != 1 && ___htest.length && ___htest.substr(0, 1) == vk.navPrefix) {\r\n  if (vk.al != 3 || vk.navPrefix != ''!'') {\r\n    ___to = ___htest.replace(/^(\\/|!)/, '''');\r\n    if (___to.match(/^([^\\?]*\\.php|login)([^a-z0-9\\.]|$)/)) ___to = '''';\r\n    location.replace(location.protocol + ''//'' + location.host + ''/'' + ___to);\r\n  }\r\n}\r\n\r\nvar StaticFiles = {\r\n  ''common.js'' : {v: 1113},\r\n  ''common.css'': {v: 487},\r\n  ''ie6.css''   : {v: 26},\r\n  ''ie7.css''   : {v: 18}\r\n  ,''lang3_0.js'':{v:3363},''audio.css'':{v:128},''audio.js'':{v:243},''indexer.js'':{v:19},''audioplayer.js'':{v:142},''audioplayer.css'':{v:17},''public.js'':{v:43},''ui_controls.css'':{v:58},''ui_controls.js'':{v:172},''sorter.js'':{v:21},''notifier.js'':{v:333},''notifier.css'':{v:129}\r\n}\r\n</script>\r\n\r\n<link rel="stylesheet" type="text/css" href="/css/al/common.css?487" />\r\n<!--[if lte IE 6]><style type="text/css" media="screen">/* <![CDATA[ */ @import url(/css/al/ie6.css?26); /* ]]> */</style><![endif]-->\r\n<!--[if IE 7]><style type="text/css" media="screen">/* <![CDATA[ */ @import url(/css/al/ie7.css?18); /* ]]> */</style><![endif]-->\r\n<link type="text/css" rel="stylesheet" href="/css/al/audio.css?128"></link><link type="text/css" rel="stylesheet" href="/css/al/audioplayer.css?17"></link><link type="text/css" rel="stylesheet" href="/css/ui_controls.css?58"></link><link type="text/css" rel="stylesheet" href="/css/al/notifier.css?129"></link><script type="text/javascript" src="/js/loader_nav16646_3.js"></script><script type="text/javascript" src="/js/al/common.js?1113_122"></script><script type="text/javascript" src="/js/lang3_0.js?3363"></script><link rel="alternate" media="only screen and (max-width: 640px)" href="https://m.vk.com/audio?id=222635444" /><link rel="alternate" href="android-app://com.vkontakte.android/vkontakte/m.vk.com/audio?id=222635444" /><script type="text/javascript" src="/js/al/audio.js?243"></script><script type="text/javascript" src="/js/al/indexer.js?19"></script><script type="text/javascript" src="/js/al/audioplayer.js?142"></script><script type="text/javascript" src="/js/al/public.js?43"></script><script type="text/javascript" src="/js/lib/ui_controls.js?172"></script><script type="text/javascript" src="/js/al/sorter.js?21"></script><script type="text/javascript" src="/js/al/notifier.js?333"></script>\r\n\r\n</head>\r\n\r\n<body onresize="onBodyResize()" class="is_rtl font_medium pads ">\r\n  <div id="system_msg" class="fixed"></div>\r\n  <div id="utils"></div>\r\n\r\n  <div id="layer_bg" class="fixed"></div><div id="layer_wrap" class="scroll_fix_wrap fixed"><div id="layer"></div></div>\r\n  <div id="box_layer_bg" class="fixed"></div><div id="box_layer_wrap" class="scroll_fix_wrap fixed"><div id="box_layer"><div id="box_loader"><div class="loader"></div><div class="back"></div></div></div></div>\r\n\r\n  <div id="stl_left"></div><div id="stl_side"></div>\r\n\r\n  <script type="text/javascript">domStarted();</script>\r\n\r\n  <div class="scroll_fix_wrap" id="page_wrap">\r\n<div><div class="scroll_fix">\r\n  <div id="page_layout" style="width: 791px;">\r\n    <div id="page_header" class="p_head1 p_head_l3">\r\n      <div class="back"></div>\r\n      <div class="left"></div>\r\n      <div class="right"></div>\r\n      <div class="content">\r\n        <div id="top_nav" class="head_nav">\r\n  <table cellspacing="0" cellpadding="0" id="top_links">\r\n    <tr>\r\n      <td class="top_home_link_td">\r\n        <div id="top_logo_down"></div>\r\n        <a class="top_home_link" href="/feed" onmousedown="addClass(''top_logo_down'',''tld_d'');" onclick="return nav.go(this, event);"></a>\r\n      </td>\r\n      <td class="top_back_link_td">\r\n        <a class="top_nav_link fl_l" href="" id="top_back_link" onclick="if (nav.go(this, event, {back: true}) === false) { showBackLink(); return false; }" onmousedown="tnActive(this);"></a>\r\n      </td>\r\n      <td style=""><nobr>\r\n        <a class="top_nav_link" id="top_search" href="/search" ontouchstart="event.cancelBubble = true;" onmousedown="event.cancelBubble = true; tnActive(this);" onclick="return nav.go(this, event, {search: true, noframe: true});">search</a>\r\n      </nobr></td>\r\n      <td style=""><nobr>\r\n        <a class="top_nav_link" id="head_games" href="/apps" onclick="return nav.go(this, event, {noback: true});" onmousedown="tnActive(this);">games</a>\r\n      </nobr></td>\r\n      <td id="support_link_td" style=""><nobr>\r\n        <a class="top_nav_link" id="top_support_link" href="/support?act=new" ontouchstart="event.cancelBubble = true;" onmousedown="event.cancelBubble = true; tnActive(this);" onclick="return nav.go(this, event);">help</a>\r\n      </nobr></td>\r\n      <td id="invite_link_td" style=""><nobr>\r\n        <a class="top_nav_link" id="top_invite_link" href="/invite" ontouchstart="event.cancelBubble = true;" onmousedown="event.cancelBubble = true; tnActive(this);" onclick="return nav.go(this, event);">invite</a>\r\n      </nobr></td>\r\n      <td style=""><nobr>\r\n        <a class="top_nav_link" id="head_music" href="/audios222635444?act=popular" onclick="return Pads.show(''mus'', event);" onmousedown="tnActive(this)">\r\n          <span id="head_music_text">music</span>\r\n          <div id="head_play_btn" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over''); removeClass(this, ''down'')" onmousedown="addClass(this, ''down''); addClass(ge(''head_music''), ''head_play_down'');" onmouseup="removeClass(this, ''down'')" onclick="headPlayPause(event)"></div>\r\n        </a>\r\n      </nobr></td>\r\n      <td id="logout_link_td"><nobr>\r\n        <a class="top_nav_link" id="logout_link" href="https://login.vk.com/?act=logout&hash=1950b38fa1ea5f21b0&_origin=https://vk.com" ontouchstart="event.cancelBubble = true;" onmousedown="event.cancelBubble = true; tnActive(this);" onclick="if (checkEvent(event) === false) { window.Notifier && Notifier.lcSend(''logged_off''); location.href = this.href; return cancelEvent(event); }">log out</a>\r\n      </nobr></td>\r\n    </tr>\r\n  </table>\r\n  <div id="ts_wrap" class="clear_fix">\r\n    <div id="ts_input_wrap" class="ts_input_wrap fl_r" onmouseover="TopSearch.highlightInput(true); TopSearch.initFriendsList();" onmouseout="TopSearch.highlightInput(false)">\r\n      <div class="ts" onmousedown="event.cancelBubble = true;">\r\n        <div class="ts_input_wrap2"><div>\r\n          <input type="text" onmousedown="event.cancelBubble = true;" ontouchstart="event.cancelBubble = true;" class="text" id="ts_input" autocomplete="off" placeholder="Search" />\r\n        </div></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <span style="display: none" id="top_new_msg"></span>\r\n</div>\r\n<div id="ts_cont_wrap" ontouchstart="event.cancelBubble = true;" onmousedown="event.cancelBubble = true;"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div id="side_bar" class="fl_l" style="">\r\n      <ol>\r\n  <li>\r\n  <table id="myprofile_table" cellspacing="0" cellpadding="0"><tr>\r\n    <td id="myprofile_wrap">\r\n      <a href="/id.undefined" onclick="return nav.go(this, event, {noback: true})" id="myprofile" class="left_row"><span class="left_label inl_bl">My Profile</span></a>\r\n    </td>\r\n    <td id="myprofile_edit_wrap">\r\n      <a href="/edit" id="myprofile_edit" class="left_row"><span class="left_label inl_bl">edit</span></a>\r\n    </td>\r\n  </tr></table>\r\n</li><li id="l_fr"><a href="/friends" onclick="return nav.go(this, event, {noback: true, params: {_ref: ''left_nav''}});" class="left_row"><span class="left_count_pad" onmouseover="Pads.preload(''fr'')" onmousedown="return Pads.show(''fr'', event)" onclick="return (checkEvent(event) || browser.msie6) ? true : cancelEvent(event)"><span class="left_count_wrap  left_void fl_r"><span class="inl_bl left_plus">+</span></span></span><span class="left_label inl_bl">My Friends</span></a></li><li id="l_ph"><a href="/albums222635444" onclick="return nav.go(this, event, {noback: true, params: {_ref: ''left_nav''}});" class="left_row"><span class="left_count_pad" onmouseover="Pads.preload(''ph'')" onmousedown="return Pads.show(''ph'', event)" onclick="return (checkEvent(event) || browser.msie6) ? true : cancelEvent(event)"><span class="left_count_wrap  left_void fl_r"><span class="inl_bl left_plus">+</span></span></span><span class="left_label inl_bl">My Photos</span></a></li><li id="l_vid"><a href="/video" onclick="return nav.go(this, event, {noback: true, params: {_ref: ''left_nav''}});" class="left_row"><span class="left_count_pad" onmouseover="Pads.preload(''vid'')" onmousedown="return Pads.show(''vid'', event)" onclick="return (checkEvent(event) || browser.msie6) ? true : cancelEvent(event)"><span class="left_count_wrap  left_void fl_r"><span class="inl_bl left_plus">+</span></span></span><span class="left_label inl_bl">My Videos</span></a></li><li><a href="/audios222635444" onclick="return nav.go(this, event, {noback: true, params: {_ref: ''left_nav''}});" class="left_row"><span class="left_count_wrap  left_void fl_r"><span class="inl_bl left_plus">+</span></span><span class="left_label inl_bl">My Music</span></a></li><li id="l_msg"><a href="/im" onclick="return nav.go(this, event, {noback: true, params: {_ref: ''left_nav''}});" class="left_row"><span class="left_count_pad left_count_persist" onmouseover="Pads.preload(''msg'')" onmousedown="return Pads.show(''msg'', event)" onclick="return (checkEvent(event) || browser.msie6) ? true : cancelEvent(event)"><span class="left_count_wrap  left_void fl_r"><span class="inl_bl left_plus">+</span></span></span><span class="left_label inl_bl">My Messages</span></a></li><li style="display: none" id="l_nts"><a href="/notes" onclick="return nav.go(this, event, {noback: true, params: {_ref: ''left_nav''}});" class="left_row"><span class="left_count_wrap  left_void fl_r"><span class="inl_bl left_plus">+</span></span><span class="left_label inl_bl">My Notes</span></a></li><li id="l_gr"><a href="/groups" onclick="return nav.go(this, event, {noback: true, params: {_ref: ''left_nav''}});" class="left_row"><span class="left_count_pad" onmouseover="Pads.preload(''gr'')" onmousedown="return Pads.show(''gr'', event)" onclick="return (checkEvent(event) || browser.msie6) ? true : cancelEvent(event)"><span class="left_count_wrap  left_void fl_r"><span class="inl_bl left_plus">+</span></span></span><span class="left_label inl_bl">My Communities</span></a></li><li style="display: none" id="l_ev"><a href="/events" onclick="return nav.go(this, event, {noback: true, params: {_ref: ''left_nav''}});" class="left_row"><span class="left_count_wrap  left_void fl_r"><span class="inl_bl left_plus">+</span></span><span class="left_label inl_bl">My Events</span></a></li><li id="l_nwsf"><a href="/feed" onclick="return nav.go(this, event, {noback: true, params: {_ref: ''left_nav''}});" class="left_row"><span class="left_count_wrap  left_void fl_r"><span class="inl_bl left_plus">+</span></span><span class="left_label inl_bl">My News</span></a></li><li id="l_nws"><a href="/feed?section=notifications" onclick="return nav.go(this, event, {noback: true, params: {_ref: ''left_nav''}});" class="left_row"><span class="left_count_pad left_count_persist" onmouseover="Pads.preload(''nws'')" onmousedown="return Pads.show(''nws'', event)" onclick="return (checkEvent(event) || browser.msie6) ? true : cancelEvent(event)"><span class="left_count_wrap  left_void fl_r"><span class="inl_bl left_plus">+</span></span></span><span class="left_label inl_bl">My Feedback</span></a></li><li id="l_set"><a href="/settings" onclick="return nav.go(this, event, {noback: true, params: {_ref: ''left_nav''}});" class="left_row"><span class="left_count_wrap  left_void fl_r"><span class="inl_bl left_plus">+</span></span><span class="left_label inl_bl">My Settings</span></a></li><div class="more_div" style="display: none"></div><li style="display: none" id="l_ap"><a href="/apps" onclick="return nav.go(this, event, {noback: true, params: {_ref: ''left_nav''}});" class="left_row"><span class="left_count_pad left_count_persist" onmouseover="Pads.preload(''ap'')" onmousedown="return Pads.show(''ap'', event)" onclick="return (checkEvent(event) || browser.msie6) ? true : cancelEvent(event)"><span class="left_count_wrap  left_void fl_r"><span class="inl_bl left_plus">+</span></span></span><span class="left_label inl_bl">Applications</span></a></li><li style="display: none" id="l_ads"><a href="/ads?act=office&last=1" onclick="return nav.go(this, event, {noback: true, params: {_ref: ''left_nav''}});" class="left_row"><span class="left_count_wrap  left_void fl_r"><span class="inl_bl left_plus">+</span></span><span class="left_label inl_bl">Ads</span></a></li><li style="display: none" id="l_spr"><a href="/support" onclick="return nav.go(this, event, {noback: true, params: {_ref: ''left_nav''}});" class="left_row"><span class="left_count_wrap  left_void fl_r"><span class="inl_bl left_plus">+</span></span><span class="left_label inl_bl">Support</span></a></li>\r\n</ol>\r\n<div id="left_blocks"></div><div id="left_ads"></div>\r\n    </div>\r\n\r\n    <div id="page_body" class="fl_r" style="width: 631px;">\r\n      <div id="header_wrap2">\r\n        <div id="header_wrap1">\r\n          <div id="header" style="display: none">\r\n            <h1 id="title"></h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id="wrap_between"></div>\r\n      <div id="wrap3"><div id="wrap2">\r\n  <div id="wrap1">\r\n    <div id="content"><div id="audio" class="new">\r\n<div id="ac" class="">\r\n  <div class="ac_wrap clear_fix"><div id="ac_controls" class="fl_l">\r\n    <div id="ac_play" class="fl_l"></div>\r\n    <div class="next_prev fl_l">\r\n      <div id="ac_prev" class="ctrl_wrap">\r\n        <div class="prev ctrl"></div>\r\n      </div>\r\n      <div id="ac_next" class="ctrl_wrap">\r\n        <div class="next ctrl"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class="info fl_l">\r\n    <div class="title_wrap clear_fix">\r\n      <div id="ac_name" class="ac_name fl_l">\r\n        <span id="ac_performer" class="performer">The Birthday Massacre</span> &ndash;\r\n        <span id="ac_title" class="title">Blue</span>\r\n      </div>\r\n      <span id="ac_duration" class="duration fl_r">4:29</span>\r\n    </div>\r\n    <div class="player_wrap">\r\n      <div id="ac_line"><div></div></div>\r\n      <div id="ac_player" class="ac_player" ondragstart="return false;" onselectstart="return false;">\r\n        <table cellspacing="0" cellpadding="0" border="0" width="100%">\r\n          <tbody><tr>\r\n            <td style="width: 100%;">\r\n              <div id="ac_pr">\r\n                <div id="ac_white_line" class="ac_white_line"></div>\r\n                <div id="ac,back_line" class="ac_back_line"><!-- --></div>\r\n                <div id="ac_load_line" class="ac_load_line"><!-- --></div>\r\n                <div id="ac_pr_line" class="ac_progress_line">\r\n                  <div id="ac_pr_slider" class="ac_slider"><!-- --></div>\r\n                </div>\r\n              </div>\r\n            </td>\r\n            <td>\r\n              <div id="ac_vol">\r\n                <div id="ac_vol_white_line" class="ac_vol_white_line"><!-- --></div>\r\n                <div id="ac_vol_back_line" class="ac_load_line"><!-- --></div>\r\n                <div id="ac_vol_line" class="ac_progress_line">\r\n                  <div id="ac_vol_slider" class="ac_slider"><!-- --></div>\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody></table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class="extra_ctrls fl_r">\r\n    <div id="ac_add" class="ctrl_wrap clear_fix fl_l">\r\n      <div class="add ctrl"></div>\r\n    </div>\r\n    <div id="ac_repeat" class="ctrl_wrap clear_fix fl_l">\r\n      <div class="repeat ctrl"></div>\r\n    </div>\r\n    <div id="ac_shuffle" class="ctrl_wrap clear_fix fl_l">\r\n      <div class="shuffle ctrl"></div>\r\n    </div>\r\n    <div id="ac_rec" class="ctrl_wrap clear_fix fl_l">\r\n      <div class="rec ctrl"></div>\r\n    </div>\r\n    <div id="ac_status" class="ctrl_wrap clear_fix fl_l">\r\n      <div class="status ctrl"></div>\r\n    </div>\r\n  </div></div>\r\n  <div class="shadow">\r\n    <div class="sh1"></div>\r\n    <div class="sh2"></div>\r\n    <div class="sh3"></div>\r\n    <div class="sh4"></div>\r\n  </div>\r\n</div>\r\n<div id="audio_wrap" class="audio_wrap ">\r\n<table class="audio_table" cellspacing="0" cellpadding="0">\r\n  <tr>\r\n    <td id="main_panel" class="main_panel">\r\n      <div id="audio_search" class="audio_search top_search_wrap clear_fix">\r\n        <div class="fl_l">\r\n  <input placeholder="Search" onpaste="Audio.updateList({event: event});" onkeyup="Audio.updateList({event: event});" id="s_search" type="text" class="s_search top_search_inp text" value="" />\r\n</div>\r\n<div class="search_progress fl_l"></div>\r\n<div id="audio_query_reset" class="search_reset fl_l" onmouseover="if (isVisible(this)) animate(this, {opacity: 1}, 100)" onmouseout="if (isVisible(this)) animate(this, {opacity: .6}, 100)" onclick="Audio.clearSearch({el: this, event: event})"></div>\r\n<div class="abutton_wrap fl_l">\r\n  <button class="flat_button">by title<span class="arrow"></span></button>\r\n</div>\r\n      </div>\r\n      <div id="audios_list" class="audio_list clear_fix">\r\n        <div id="initial_list"><div class="audio  fl_l" id="audio222635444_329653900" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_329653900"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_329653900'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_329653900"></div></div>\r\n      <input type="hidden" id="audio_info222635444_329653900" value="https://cs7-4v4.vk-cdn.net/p10/f515f2cc0d9a3a.mp3?extra=O7O02EYHfbmc50G_lEbGFVCYzdfTH-lfa_X6t9D4dyd_vyLEuRoEJkyTzAAHutFz9uW544019cqp-Uo_QML92IlZCqmtoVOi6Q,269" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=The%20Birthday%20Massacre&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''The Birthday Massacre''}); return false">The Birthday Massacre</a></b> &ndash; <span class="title"><a href="" onclick="Audio.showLyrics(''222635444_329653900'',2560869,0); return cancelEvent(event);">Blue</a> </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_329653900''); return cancelEvent(event)" id="remove222635444_329653900">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_329653900'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">4:29</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_329653900" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_329631362" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_329631362"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_329631362'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_329631362"></div></div>\r\n      <input type="hidden" id="audio_info222635444_329631362" value="https://cs7-2v4.vk-cdn.net/p3/dd0afd38886ed2.mp3?extra=o4WYYKRVZ0RV41pNlj9Eg4ip1LTyhHwB6wjQH27GtIn_ciwVsDzhyLTjESKBZtXZ2aRURpIdsdyDzCjCdSG1e4NlHUlG7AjGyQ,248" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=USB&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''USB''}); return false">USB</a></b> &ndash; <span class="title"><a href="" onclick="Audio.showLyrics(''222635444_329631362'',130686810,0); return cancelEvent(event);">Скажи Зачем ft Сергей Жуков</a> </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_329631362''); return cancelEvent(event)" id="remove222635444_329631362">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_329631362'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">4:08</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_329631362" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_329630939" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_329630939"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_329630939'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_329630939"></div></div>\r\n      <input type="hidden" id="audio_info222635444_329630939" value="https://cs7-3v4.vk-cdn.net/p16/4b1511175202df.mp3?extra=fqQni5bB3Ym8tSe9YfCKKJ-_8NoHgUEyui7hbyklJgW_YB8amMDBAqkUsmqEKreuVrmTH0Dp4EEH3LP1xZBpmal-K7a1yqmsIg,219" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=The%20Birthday%20Massacre&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''The Birthday Massacre''}); return false">The Birthday Massacre</a></b> &ndash; <span class="title"><a href="" onclick="Audio.showLyrics(''222635444_329630939'',2982132,0); return cancelEvent(event);">Happy Birthday</a> </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_329630939''); return cancelEvent(event)" id="remove222635444_329630939">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_329630939'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">3:39</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_329630939" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_329630341" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_329630341"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_329630341'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_329630341"></div></div>\r\n      <input type="hidden" id="audio_info222635444_329630341" value="https://cs7-1v4.vk-cdn.net/p23/553f44298bccdf.mp3?extra=MR3nxqExuH1vZG6e5BhArXKmRcQLgmq0ICjHIE-nr46tMQUs6Q1dH6G-KgeSJvPDxgZlFVDtV4Z5t-Zx9iW7cGEGOAdgBdUzew,222" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=The%20Birthday%20Massacre&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''The Birthday Massacre''}); return false">The Birthday Massacre</a></b> &ndash; <span class="title"><a href="" onclick="Audio.showLyrics(''222635444_329630341'',19835614,0); return cancelEvent(event);">In The Dark</a> </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_329630341''); return cancelEvent(event)" id="remove222635444_329630341">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_329630341'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">3:42</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_329630341" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_329629252" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_329629252"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_329629252'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_329629252"></div></div>\r\n      <input type="hidden" id="audio_info222635444_329629252" value="https://cs7-3v4.vk-cdn.net/p7/51e408809d3df2.mp3?extra=2cahQjijhOK7u8JKy86pmffkpeRTiwmTz4Hx6KMs23O33pninKaGxLVyZ-dVTV9p8mWDbyMWuWD-0Rw3VncC7Zu0thJbxeo9Pg,226" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=The%20Birthday%20Massacre&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''The Birthday Massacre''}); return false">The Birthday Massacre</a></b> &ndash; <span class="title"><a href="" onclick="Audio.showLyrics(''222635444_329629252'',209954364,0); return cancelEvent(event);">Rain</a> </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_329629252''); return cancelEvent(event)" id="remove222635444_329629252">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_329629252'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">3:46</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_329629252" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_329617784" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_329617784"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_329617784'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_329617784"></div></div>\r\n      <input type="hidden" id="audio_info222635444_329617784" value="https://cs7-4v4.vk-cdn.net/p12/e8730558f5f995.mp3?extra=tBVA6ehDw8xRvD7JZu6trnZl1ImRARmdLoVgwCPCQfOQ4Ti3Kqv8EbgsVGSb8nRgBf7uayhYmYtT-5LuWygaEgX9BD-KPbQ4Yw,277" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=Celin%20Dion&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''Celin Dion''}); return false">Celin Dion</a></b> &ndash; <span class="title"><a href="" onclick="Audio.showLyrics(''222635444_329617784'',1959607,0); return cancelEvent(event);">My heart will go on (Titanik)</a> </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_329617784''); return cancelEvent(event)" id="remove222635444_329617784">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_329617784'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">4:37</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_329617784" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_326586163" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_326586163"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_326586163'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_326586163"></div></div>\r\n      <input type="hidden" id="audio_info222635444_326586163" value="https://psv4.vk.me/c5114/u4106707/audios/2ef91ad386d8.mp3?extra=06Yu43KF3CEFt5921tlicyFLEMY9E98uCnFGKHq24mjh1ahCMDib6tSw74HqgT9_XACCYJ_amWXiR4mAieVzFy-vpkz8TtxYlA,223" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=Livid&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''Livid''}); return false">Livid</a></b> &ndash; <span class="title"><a href="" onclick="Audio.showLyrics(''222635444_326586163'',21356749,0); return cancelEvent(event);">Fading Away</a> </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_326586163''); return cancelEvent(event)" id="remove222635444_326586163">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_326586163'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">3:43</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_326586163" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_326501645" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_326501645"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_326501645'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_326501645"></div></div>\r\n      <input type="hidden" id="audio_info222635444_326501645" value="https://psv4.vk.me/c536611/u228057441/audios/ad16ac7d390b.mp3?extra=hF0MvOXNYdb5bNdyUANhuVQRoczfmRpu8KQo00Wu0BVH-9j1wgrgbPz6gI1vnXcDQ8hczfpt_cCqJRMAGnP2gS3YAaNsfqwyKQ,210" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=Engel&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''Engel''}); return false">Engel</a></b> &ndash; <span class="title">Hollow Soul </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_326501645''); return cancelEvent(event)" id="remove222635444_326501645">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_326501645'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">3:30</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_326501645" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_324802809" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_324802809"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_324802809'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_324802809"></div></div>\r\n      <input type="hidden" id="audio_info222635444_324802809" value="https://cs7-4v4.vk-cdn.net/p6/9706a5476f213b.mp3?extra=vjSqz0j0vx0lls-5_vIZnMl2VAxwqXgwty_f1oZL4L5RPe2ec3hKEpgQoG4nCxH6Yqwe8TZFCju5i_b_mvJODh3liA97V3zk5Q,216" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=Him&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''Him''}); return false">Him</a></b> &ndash; <span class="title"><a href="" onclick="Audio.showLyrics(''222635444_324802809'',3763691,0); return cancelEvent(event);">Join Me In Death</a> </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_324802809''); return cancelEvent(event)" id="remove222635444_324802809">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_324802809'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">3:36</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_324802809" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_324800877" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_324800877"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_324800877'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_324800877"></div></div>\r\n      <input type="hidden" id="audio_info222635444_324800877" value="https://cs7-3v4.vk-cdn.net/p15/3d9e734fded299.mp3?extra=e07xqKFRkwenIliGrnZXwHSw1OZLpEF__cPnMEAGz2caxJYwe5S7jQdotvb_-FXxc9ROZF3RUjMI93sMgRVpxclZymH2BkthUg,208" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=The%20Calling&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''The Calling''}); return false">The Calling</a></b> &ndash; <span class="title"><a href="" onclick="Audio.showLyrics(''222635444_324800877'',6798426,0); return cancelEvent(event);">Wherever You Will Go</a> </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_324800877''); return cancelEvent(event)" id="remove222635444_324800877">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_324800877'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">3:28</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_324800877" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_324378140" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_324378140"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_324378140'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_324378140"></div></div>\r\n      <input type="hidden" id="audio_info222635444_324378140" value="https://psv4.vk.me/c536213/u39778433/audios/5171dca40e57.mp3?extra=wvLIEPmDBGVdPbyXCGFa7eprOZBKseCOCQSqyntfA46jSilazrxlgZeyNNCwjkR9sC4xXyW50UdGNhKs7s0UOpdiPvK23mkjgg,203" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=%5BASOT%20661%5D%2007.%20Protoculture%20Feat.%20Ilana&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''[ASOT 661] 07. Protoculture Feat. Ilana''}); return false">[ASOT 661] 07. Protoculture Feat. Ilana</a></b> &ndash; <span class="title"><a href="" onclick="Audio.showLyrics(''222635444_324378140'',171260553,0); return cancelEvent(event);">Vertigo</a> </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_324378140''); return cancelEvent(event)" id="remove222635444_324378140">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_324378140'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">3:23</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_324378140" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_324376928" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_324376928"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_324376928'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_324376928"></div></div>\r\n      <input type="hidden" id="audio_info222635444_324376928" value="https://psv4.vk.me/c536313/u39778433/audios/4fbf9c9454f2.mp3?extra=IoY88dn3b2AKeJkyzXfNDQjoSTvvZt-a0Y89aeET7utZHKdXWbiB34iuraagymJoF36pY2z5HFuknPT3DmiJgAco3SzgXGDirg,205" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=%5BASOT%20660%5D%2007.%20Max%20Graham&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''[ASOT 660] 07. Max Graham''}); return false">[ASOT 660] 07. Max Graham</a></b> &ndash; <span class="title"><a href="" onclick="Audio.showLyrics(''222635444_324376928'',168012872,0); return cancelEvent(event);">Purple</a> </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_324376928''); return cancelEvent(event)" id="remove222635444_324376928">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_324376928'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">3:25</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_324376928" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_324243851" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_324243851"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_324243851'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_324243851"></div></div>\r\n      <input type="hidden" id="audio_info222635444_324243851" value="https://cs7-1v4.vk-cdn.net/p16/5671cd1ad08564.mp3?extra=VSiZw7EOxl9GTwZKCjAgIhfBN6W5DjF5pSvDY0AsPkHcMuw380uFBc2eW-IxYqay67Tw-53oY_vi5RcJe251D9hK7hI6ay_GzQ,191" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=Overseer&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''Overseer''}); return false">Overseer</a></b> &ndash; <span class="title"><a href="" onclick="Audio.showLyrics(''222635444_324243851'',3976797,0); return cancelEvent(event);">Doomsday</a> </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_324243851''); return cancelEvent(event)" id="remove222635444_324243851">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_324243851'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">3:11</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_324243851" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_324097609" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_324097609"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_324097609'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_324097609"></div></div>\r\n      <input type="hidden" id="audio_info222635444_324097609" value="https://cs7-2v4.vk-cdn.net/p16/5d058b66d70ddf.mp3?extra=h_nD42fAOCXr0xxR_hH0Wqf3i8el1uWwAfOzu7bjfH1w3UrRJHuTVEUPWHiCYlf8_e2wD5XQLzzVF1aRD48ywuNTJR3mdYMaIg,246" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=Rasmus&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''Rasmus''}); return false">Rasmus</a></b> &ndash; <span class="title"><a href="" onclick="Audio.showLyrics(''222635444_324097609'',3694311,0); return cancelEvent(event);">In the Shadows</a> </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_324097609''); return cancelEvent(event)" id="remove222635444_324097609">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_324097609'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">4:06</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_324097609" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_323295340" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_323295340"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_323295340'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_323295340"></div></div>\r\n      <input type="hidden" id="audio_info222635444_323295340" value="https://cs7-1v4.vk-cdn.net/p9/6c7341c49d402f.mp3?extra=nqiS8NrMXSmhHP3rNjGk9BpS0uo6f8RrzIAfLtBCkIXOofDbGMQy7e2EnYy13JXvNgrScxQzcC1ysNlLbQ2qsynABUVbrL-G3A,230" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=Rasmus&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''Rasmus''}); return false">Rasmus</a></b> &ndash; <span class="title">Live In A World Without You </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_323295340''); return cancelEvent(event)" id="remove222635444_323295340">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_323295340'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">3:50</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_323295340" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_322672554" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_322672554"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_322672554'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_322672554"></div></div>\r\n      <input type="hidden" id="audio_info222635444_322672554" value="https://psv4.vk.me/c5178/u90158059/audios/962a762833bc.mp3?extra=RxzIHHRqyKbv46YC-n50ldWtqHGMkeP9LS1J2KWUOEYxx9fXTijUbnZY1_yekRzyQjZ53sZeb_mQGx0Ari7s_L45_oEHxm5_UQ,313" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=Sunna&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''Sunna''}); return false">Sunna</a></b> &ndash; <span class="title">After the Third Pin </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_322672554''); return cancelEvent(event)" id="remove222635444_322672554">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_322672554'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">5:13</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_322672554" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_319930594" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_319930594"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_319930594'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_319930594"></div></div>\r\n      <input type="hidden" id="audio_info222635444_319930594" value="https://cs7-2v4.vk-cdn.net/p18/b0f3e0a24fd630.mp3?extra=71czZ33L3Cy1Rlw1ZD3YpjucnsySF_Tm1Db1VV0LlPXOkhB3-jc5uiH15_Vws7vtHnznNefCR3dokGyILJuKn4pu7MIk2i_WCA,237" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=Green%20Gray&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''Green Gray''}); return false">Green Gray</a></b> &ndash; <span class="title"><a href="" onclick="Audio.showLyrics(''222635444_319930594'',4445976,0); return cancelEvent(event);">Солнце и Луна</a> </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_319930594''); return cancelEvent(event)" id="remove222635444_319930594">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_319930594'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">3:57</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_319930594" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_319929645" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_319929645"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_319929645'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_319929645"></div></div>\r\n      <input type="hidden" id="audio_info222635444_319929645" value="https://cs7-3v4.vk-cdn.net/p21/0cbc2db017539c.mp3?extra=mznZ374rJVPw1SSnwuY_cy4pmQ9MLV7dTVQOvuf7krriv5OF1mkJeO11CAFQ_lILZQaPp5Td26iDxnmOoi0inmmUBrShDEqCew,102" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=%C3%B3%EC%ED&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''Гімн''}); return false">Гімн</a></b> &ndash; <span class="title"><a href="" onclick="Audio.showLyrics(''222635444_319929645'',138068899,0); return cancelEvent(event);">Гімн Украіни</a> </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_319929645''); return cancelEvent(event)" id="remove222635444_319929645">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_319929645'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">1:42</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_319929645" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_312440801" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_312440801"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_312440801'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_312440801"></div></div>\r\n      <input type="hidden" id="audio_info222635444_312440801" value="https://cs7-4v4.vk-cdn.net/p24/ec256fbfdaea3b.mp3?extra=vnAv-jPPsHpR2ndvyINt2IHuhWt6XGSAv15IKOBE2pOvzC67MEWicVuvZ3atSZ2lyV_XbBeNF_kJblvFSHgZGpzQEmjTgqHgNw,191" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=Amaranthe&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''Amaranthe''}); return false">Amaranthe</a></b> &ndash; <span class="title"><a href="" onclick="Audio.showLyrics(''222635444_312440801'',201184297,0); return cancelEvent(event);">Trinity</a> </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_312440801''); return cancelEvent(event)" id="remove222635444_312440801">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_312440801'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">3:11</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_312440801" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_311260815" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_311260815"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_311260815'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_311260815"></div></div>\r\n      <input type="hidden" id="audio_info222635444_311260815" value="https://cs7-2v4.vk-cdn.net/p5/9a0a89023c54d7.mp3?extra=rEZ6jag3b8Ng-FY9upudGHzc9TwNq94BeJeGoyTKhvRTrtPkoIaR_Ki4juHesGkvxD3ftSJ6R4KmKn7NTi0vW_wqwQ-2CBjvhw,224" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=Bon%20Jovi&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''Bon Jovi''}); return false">Bon Jovi</a></b> &ndash; <span class="title"><a href="" onclick="Audio.showLyrics(''222635444_311260815'',6901870,0); return cancelEvent(event);">It &#39;s My Life (Album Version)</a> </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_311260815''); return cancelEvent(event)" id="remove222635444_311260815">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_311260815'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">3:44</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_311260815" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_306839310" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_306839310"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_306839310'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_306839310"></div></div>\r\n      <input type="hidden" id="audio_info222635444_306839310" value="https://cs7-1v4.vk-cdn.net/p23/6cd0aab0952e19.mp3?extra=wEMivOe2DYbl35VF7punVLZc91Xk5_wUpdJiDy8Wqq9sLQo5JXwHlfh11XoxFhA4jUDblOmKqGnRtcjQ6YE85uC2LeqMMWwxEw,196" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=Amaranthe&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''Amaranthe''}); return false">Amaranthe</a></b> &ndash; <span class="title">Drop Dead Cynical </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_306839310''); return cancelEvent(event)" id="remove222635444_306839310">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_306839310'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">3:16</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_306839310" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_305471402" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_305471402"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_305471402'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_305471402"></div></div>\r\n      <input type="hidden" id="audio_info222635444_305471402" value="https://cs7-3v4.vk-cdn.net/p12/4920f1ea1d0cdd.mp3?extra=5d3W4GFMiTuv5Idx8Ji_ecJt_raJz-x79h-uSg2TWSCfmoNehCF4UhNka9rGJk4WI3sBtWshaetX7_qEoyGN4c9Jn4hTrcTm9A,237" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=In%20Flames&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''In Flames''}); return false">In Flames</a></b> &ndash; <span class="title"><a href="" onclick="Audio.showLyrics(''222635444_305471402'',195061733,0); return cancelEvent(event);">With Eyes Wide Open</a> </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_305471402''); return cancelEvent(event)" id="remove222635444_305471402">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_305471402'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">3:57</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_305471402" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_305037704" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_305037704"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_305037704'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_305037704"></div></div>\r\n      <input type="hidden" id="audio_info222635444_305037704" value="https://cs7-3v4.vk-cdn.net/p13/0a360b34711b5f.mp3?extra=kVebyxOJdsSuZr0zUMI0hPS99ND5ZYBLm2tCcwcJMhWLxmzRFXXwtkIOMHFqNULKnOoIrxI8KJGhpP5blKrszlfhClp2Nr10AA,200" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=In%20Flames&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''In Flames''}); return false">In Flames</a></b> &ndash; <span class="title">Everything&#39;s Gone </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_305037704''); return cancelEvent(event)" id="remove222635444_305037704">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_305037704'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">3:20</div>\r\n    </div>\r\n  </div>\r\n  <div id="lyrics222635444_305037704" class="lyrics" nosorthandle="1"></div>\r\n</div><div class="audio  fl_l" id="audio222635444_305406802" onmouseover="addClass(this, ''over'');" onmouseout="removeClass(this, ''over'');">\r\n  <a name="222635444_305406802"></a>\r\n  <div class="area clear_fix" onclick="if (cur.cancelClick){ cur.cancelClick = false; return;} playAudioNew(''222635444_305406802'')">\r\n    <div class="play_btn fl_l">\r\n      <div class="play_btn_wrap"><div class="play_new" id="play222635444_305406802"></div></div>\r\n      <input type="hidden" id="audio_info222635444_305406802" value="https://psv4.vk.me/c536303/u145312312/audios/14c3a5de8091.mp3?extra=EUsz-4hNWebNt7hvNnBe5alNwL1EabmMcWyoLr41SUh3nlBa-sY0bO3fzZcYrdooFHCwArx9GXWdoGiPR8TdREmyfgYgOd2RXw,183" />\r\n    </div>\r\n    <div class="info fl_l">\r\n      <div class="title_wrap fl_l" onmouseover="setTitle(this);"><b><a href="/search?c[q]=In%20Flames&c[section]=audio&c[performer]=1" onclick="if (checkEvent(event)) { event.cancelBubble = true; return}; Audio.selectPerformer({from_pad: 0, event: event, name: ''In Flames''}); return false">In Flames</a></b> &ndash; <span class="title">Siren Charms </span><span class="user" onclick="cur.cancelClick = true;"></span></div>\r\n      <div class="actions">\r\n        <div class="audio_remove_wrap fl_r" onmouseover="Audio.rowActive(this, ''Delete song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.deleteAudio(''222635444_305406802''); return cancelEvent(event)" id="remove222635444_305406802">\r\n  <div class="audio_remove"></div>\r\n</div><div class="audio_edit_wrap fl_r" onmouseover="Audio.rowActive(this, ''Edit song'', [9, 5, 0]);" onmouseout="Audio.rowInactive(this);" onclick="Audio.editAudio(''222635444_305406802'', event);">\r\n  <div class="audio_edit"></div>\r\n</div>\r\n      </div>\r\n      <div class="duration fl_r">3:03</div>\r', 17, 'c4ca4238a0b923820dcc509a6f75849b', '2014-12-11 03:29:40');
INSERT INTO `codes` (`id`, `title`, `language`, `source`, `author_id`, `password`, `added_at`) VALUES
(242, 'debug///', 'php', '		private function initDatabase() {\r\n            \\Sy\\Autoloader::addIncludeDirs( SY_PATH . DS . ''Db'' );\r\n			\\Sy\\ORM::init( APP_PATH . DS . ''conf'' . DS . ''app.ini'', ''dev'' );\r\n			$this->attachObject( ''db'', \\Sy\\ORM::connect() );\r\n            if( \\Sy::cfg()->path( ''debug/enable'' ) ) {\r\n                \\Sy\\ORM\\Common\\Event::instance()->attach( ''query'', function( $query = null ){\r\n                    Helper\\Debug::instance()->sql( $query );\r\n                } );\r\n            }\r\n		}', 0, '', '2014-12-11 03:52:49');

-- --------------------------------------------------------

--
-- Структура таблицы `log_redirects`
--

CREATE TABLE IF NOT EXISTS `log_redirects` (
`id` int(11) NOT NULL,
  `link_id` int(10) unsigned NOT NULL,
  `refferer` int(11) NOT NULL,
  `ip` int(11) NOT NULL,
  `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Структура таблицы `posts`
--

CREATE TABLE IF NOT EXISTS `posts` (
`id` int(11) NOT NULL,
  `author_id` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  `short_text` text NOT NULL,
  `text` text NOT NULL,
  `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00'
) ENGINE=MyISAM AUTO_INCREMENT=121 DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `posts`
--

INSERT INTO `posts` (`id`, `author_id`, `title`, `short_text`, `text`, `created`) VALUES
(98, 17, 'js', '', '<p>lalalala</p>', '2014-10-20 12:58:43'),
(99, 17, 'Бухло', '', '<p>фывфывфыв</p>', '2014-10-20 12:59:59'),
(100, 17, 'lol', '', '<p>sdfsdfsadfsdf</p>', '2014-10-24 08:14:22'),
(101, 17, 'sadasdasd', '', '<p>asdasdasdasd</p>', '2014-10-24 08:16:49'),
(102, 17, 'ASDASDasd', '', '<p>asdasdasdasd</p><hr><p>sdfasdasd</p>', '2014-10-24 16:48:39'),
(103, 17, 'test', '', '<p>alalla</p>', '2014-10-28 09:40:45'),
(104, 17, '​Lorem ipsum', '', '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin ac quam fermentum quam ultricies vulputate quis in magna. Praesent luctus massa non libero tincidunt cursus. Pellentesque vestibulum sed mauris vel cursus. Vivamus mattis ultricies tempus. Praesent id sagittis dui. Suspendisse quis enim vel tortor egestas tincidunt et sed est. Donec gravida odio non mauris imperdiet consequat. Nunc eget diam et libero varius efficitur. Proin et nisi posuere, cursus turpis vel, tempor ex. Proin gravida magna diam, vitae tristique nunc imperdiet a. Donec aliquam quam eu dictum laoreet. Maecenas sed sapien sit amet nunc volutpat cursus ac vel tellus. Aenean sagittis felis at nibh vulputate convallis. Maecenas cursus elit magna, quis molestie sem finibus quis. Integer scelerisque pretium magna, a maximus dolor pharetra eleifend.</p>', '2014-10-29 17:09:31'),
(105, 17, 'Гриффины', '', '<p>«<b>Гриффины</b>» (англ. <i>Family Guy</i>, <small>МФА:</small> <span class="IPA" style="font-size: 14px; line-height: 1.6em; background-color: initial;">[ˈfæm.(ə)l.i gaɪ]</span>, дословно «семьянин») — американский анимационный ситком <span class="ref-info" style="font-size: 14px; line-height: 1.6em; background-color: initial;">(англ.)</span><span class="link-ru" style="font-size: 14px; line-height: 1.6em; background-color: initial;">русск.</span>, созданный Сетом Макфарлейном для телекомпании Fox Broadcasting Company. В центре сюжета неблагополучная<sup>[2]</sup><sup>[3]</sup> семья Гриффинов, состоящая из родителей, Питера и Лоис, их детей, Криса, Мэги Стьюи, а также Брайана — антропоморфного пса. Действие ситкома происходит в Куахоге, вымышленном пригороде Провиденса, штат Род-Айленд. <span class="noprint" style="font-size: 14px; line-height: 1.6em; background-color: initial;"></span> Бо́льшая часть юмора сериала представлена в форме так называемых врезок, которые зачастую не имеют ничего общего с сюжетом и содержат шутки на различные щепетильные и спорные темы, такие как политика, рабство, инвалидность, феминизм, ожирение и другие.</p><p> <br></p>', '2014-10-29 17:11:08'),
(112, 17, '^^,', '', '<p><img src="uploads/images/20141117_15/4961416230243_QN0pWSrxlmY.jpg"></p>', '2014-11-17 15:18:08'),
(113, 17, 'test lalalala', '', '<p>lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalala test lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalala<span class="redactor-invisible-space">test lalalala test lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalala test lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalala test lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest lalalalatest </span></p>', '2014-11-21 16:24:18'),
(97, 17, 'DevilDriver', '', '<p><b>«DevilDriver»</b> (с <a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%B8%D0%B9_%D1%8F%D0%B7%D1%8B%D0%BA" title="Английский язык">англ.</a> на <a href="https://ru.wikipedia.org/wiki/%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9_%D1%8F%D0%B7%D1%8B%D0%BA" title="Русский язык">рус.</a> Уводящие злых духов колокольчики (магический оберег) буквально Водитель дьявола ) — <a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B5%D0%BB%D0%BE%D0%B4%D0%B8%D1%87%D0%BD%D1%8B%D0%B9_%D0%B4%D1%8D%D1%82-%D0%BC%D0%B5%D1%82%D0%B0%D0%BB" title="Мелодичный дэт-метал">мелодичная дэт-метал</a>/<a href="https://ru.wikipedia.org/wiki/%D0%93%D1%80%D1%83%D0%B2-%D0%BC%D0%B5%D1%82%D0%B0%D0%BB" title="Грув-метал">грув-метал</a>-группа из Санта-Барбары, <a href="https://ru.wikipedia.org/wiki/%D0%9A%D0%B0%D0%BB%D0%B8%D1%84%D0%BE%D1%80%D0%BD%D0%B8%D1%8F" title="Калифорния">Калифорния</a>.</p><p>DevilDriver возникли на обломках <a href="https://ru.wikipedia.org/wiki/Coal_Chamber" title="Coal Chamber">Coal Chamber</a>, когда <a href="https://ru.wikipedia.org/wiki/%D0%A4%D0%B0%D1%84%D0%B0%D1%80%D0%B0,_%D0%94%D0%B5%D0%B7" title="Фафара, Дез">Дэз Фафара</a> (вокал) разошелся в музыкальных взглядах с остальными участниками коллектива и решил создать принципиально новую по стилю и звучанию группу. Собрав первый состав из гитаристов Эвана Питса и Джефа Кендрика, басиста Джона Миллера и барабанщика Джона Боклина ребята назвались Deathride. Но из-за проблем авторского права и названия, взятого несколькими группами, Deathride изменили свое название на DevilDriver, что обозначает колокольчики, которыми итальянские ведьмы изгоняли злые силы.</p><p>Первый одноименный альбом <i><a href="https://ru.wikipedia.org/wiki/DevilDriver_(%D0%B0%D0%BB%D1%8C%D0%B1%D0%BE%D0%BC)" title="DevilDriver (альбом)" class="mw-redirect">DevilDriver</a></i> был не самым удачным по словам музыкальных критиков. Поэтому автор первого альбома Питтс решил уйти из группы, на смену которому пришел <a href="https://ru.wikipedia.org/w/index.php?title=%D0%9C%D0%B0%D0%B9%D0%BA_%D0%A8%D0%BF%D1%80%D0%B5%D0%B9%D1%82%D1%86%D0%B5%D1%80&amp;action=edit&amp;redlink=1" class="new" title="Майк Шпрейтцер (страница отсутствует)">Майк Шпрейтцер</a>. Их второй альбом <i><a href="https://ru.wikipedia.org/wiki/The_Fury_of_Our_Maker%27s_Hand" title="The Fury of Our Maker''s Hand" class="mw-redirect">The Fury of Our Maker''s Hand</a></i> получил лестные отзывы от критиков и вошел в <a href="https://ru.wikipedia.org/wiki/Billboard_200" title="Billboard 200">Billboard 200</a> под номером 117. Группа провела несколько туров, включая выступление на <a href="https://ru.wikipedia.org/wiki/Ozzfest" title="Ozzfest">Ozzfest</a>, также был поставлен рекорд Гиннеса по самому длинному «сёркл-питу».</p><p><br></p>', '2014-10-18 19:22:13'),
(95, 17, 'SyFrm-RC_20141018', '', '<p><strong>SyFrm-RC_20141018</strong></p><p>Легкий и простой в использовании PHP Framework.</p><ul><li>ORM</li><li>Routing</li><li>Twig</li><li>MVC</li></ul>', '2014-10-17 23:07:26'),
(96, 17, 'Меконг', '', '<p><b>Меко́нг</b> (в переводе с <a href="https://ru.wikipedia.org/wiki/%D0%9B%D0%B0%D0%BE%D1%81%D1%81%D0%BA%D0%B8%D0%B9_%D1%8F%D0%B7%D1%8B%D0%BA" title="Лаосский язык">лаосского</a> — «Матерь вод Ганг»<sup><a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B5%D0%BA%D0%BE%D0%BD%D0%B3#cite_note-1">[1]</a></sup>, вьет. «Река девяти драконов»<sup><a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B5%D0%BA%D0%BE%D0%BD%D0%B3#cite_note-autogenerated1-2">[2]</a></sup>) — река в <a href="https://ru.wikipedia.org/wiki/%D0%9A%D0%B8%D1%82%D0%B0%D0%B9%D1%81%D0%BA%D0%B0%D1%8F_%D0%9D%D0%B0%D1%80%D0%BE%D0%B4%D0%BD%D0%B0%D1%8F_%D0%A0%D0%B5%D1%81%D0%BF%D1%83%D0%B1%D0%BB%D0%B8%D0%BA%D0%B0" title="Китайская Народная Республика">Китае</a>, <a href="https://ru.wikipedia.org/wiki/%D0%9B%D0%B0%D0%BE%D1%81" title="Лаос">Лаосе</a>, <a href="https://ru.wikipedia.org/wiki/%D0%A2%D0%B0%D0%B8%D0%BB%D0%B0%D0%BD%D0%B4" title="Таиланд">Таиланде</a>, <a href="https://ru.wikipedia.org/wiki/%D0%9A%D0%B0%D0%BC%D0%B1%D0%BE%D0%B4%D0%B6%D0%B0" title="Камбоджа">Камбодже</a> и <a href="https://ru.wikipedia.org/wiki/%D0%92%D1%8C%D0%B5%D1%82%D0%BD%D0%B0%D0%BC" title="Вьетнам">Вьетнаме</a> (частично образует границу Лаоса с <a href="https://ru.wikipedia.org/wiki/%D0%9C%D1%8C%D1%8F%D0%BD%D0%BC%D0%B0" title="Мьянма">Мьянмой</a> и <a href="https://ru.wikipedia.org/wiki/%D0%A2%D0%B0%D0%B8%D0%BB%D0%B0%D0%BD%D0%B4" title="Таиланд">Таиландом</a>), самая большая на <a href="https://ru.wikipedia.org/wiki/%D0%98%D0%BD%D0%B4%D0%BE%D0%BA%D0%B8%D1%82%D0%B0%D0%B9" title="Индокитай">Индокитайском полуострове</a>. Длина — около 4500 км, площадь бассейна — 810 тыс. км²<sup><a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B5%D0%BA%D0%BE%D0%BD%D0%B3#cite_note-3">[3]</a></sup>.</p><a href="https://commons.wikimedia.org/wiki/File:Sunset_at_Mekong_River.jpg?uselang=ru" class="image"><img alt="" src="https://upload.wikimedia.org/wikipedia/commons/thumb/5/58/Sunset_at_Mekong_River.jpg/220px-Sunset_at_Mekong_River.jpg"></a><a href="https://ru.wikipedia.org/wiki/%D0%A4%D0%B0%D0%B9%D0%BB:Sunset_at_Mekong_River.jpg" class="internal" title="Увеличить"></a>Закат на Меконге в <a href="https://ru.wikipedia.org/wiki/%D0%9A%D0%B0%D0%BC%D0%BF%D0%BE%D0%BD%D0%B3%D1%82%D1%8F%D0%BC" title="Кампонгтям">Кампонгтяме</a>, Камбоджа<ul><li></li></ul>', '2014-10-18 18:38:03'),
(93, 17, 'PDOStatement::bindValue', '', '<p>Binds a value to a corresponding named or question mark placeholder in the SQL statement that was used to prepare the statement.</p><h3>Parameters<a class="genanchor" href="http://php.net/manual/en/pdostatement.bindvalue.php#refsect1-pdostatement.bindvalue-parameters"> ¶</a></h3><dl><dt><code>parameter</code></dt><dd><p>Parameter identifier. For a prepared statement using named placeholders, this will be a parameter name of the form <var><var data-redactor-tag="var">:name</var></var>. For a prepared statement using question mark placeholders, this will be the 1-indexed position of the parameter.</p></dd><dt><code>value</code></dt><dd><p>The value to bind to the parameter.</p></dd><dt><code>data_type</code></dt><dd><p>Explicit data type for the parameter using the <a href="http://php.net/manual/en/pdo.constants.php" class="link"><em>PDO::PARAM_*</em> constants</a>.</p></dd></dl>', '2014-10-17 23:04:41'),
(94, 17, 'PDOStatement::bindParam', '', '<h3>Description<a class="genanchor" href="http://php.net/manual/en/pdostatement.bindparam.php#refsect1-pdostatement.bindparam-description"> ¶</a></h3><p><span class="modifier">public</span> <span class="type">bool</span> <span class="methodname">PDOStatement::bindParam</span> ( <span class="methodparam"><span class="type" data-redactor-class="type"><a href="http://php.net/manual/en/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code>$parameter</code></span> , <span class="methodparam"><span class="type" data-redactor-class="type"><a href="http://php.net/manual/en/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code>&amp;$variable</code></span> [, <span class="methodparam"><span class="type" data-redactor-class="type">int</span> <code>$data_type</code> = PDO::PARAM_STR</span> [, <span class="methodparam"><span class="type" data-redactor-class="type">int</span><code>$length</code></span> [, <span class="methodparam"><span class="type" data-redactor-class="type"><a href="http://php.net/manual/en/language.pseudo-types.php#language.types.mixed" class="type mixed">mixed</a></span> <code>$driver_options</code></span> ]]] )</p><p>Binds a PHP variable to a corresponding named or question mark placeholder in the SQL statement that was used to prepare the statement. Unlike <span class="function"><a href="http://php.net/manual/en/pdostatement.bindvalue.php" class="function">PDOStatement::bindValue()</a></span>, the variable is bound as a reference and will only be evaluated at the time that <span class="function"><a href="http://php.net/manual/en/pdostatement.execute.php" class="function">PDOStatement::execute()</a></span>is called.</p><p>Most parameters are input parameters, that is, parameters that are used in a read-only fashion to build up the query. Some drivers support the invocation of stored procedures that return data as output parameters, and some also as input/output parameters that both send in data and are updated to receive it.</p>', '2014-10-17 23:05:08'),
(92, 17, 'PHP', '', '<p><b>PHP</b> (<a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%B8%D0%B9_%D1%8F%D0%B7%D1%8B%D0%BA" title="Английский язык">англ.</a> <i>PHP: Hypertext Preprocessor</i> — «PHP: <a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%B5%D0%BF%D1%80%D0%BE%D1%86%D0%B5%D1%81%D1%81%D0%BE%D1%80" title="Препроцессор">препроцессор</a> <a href="https://ru.wikipedia.org/wiki/%D0%93%D0%B8%D0%BF%D0%B5%D1%80%D1%82%D0%B5%D0%BA%D1%81%D1%82" title="Гипертекст">гипертекста</a>»; первоначально <i>Personal Home Page Tools</i><sup><a href="https://ru.wikipedia.org/wiki/PHP#cite_note-off_history-4">[4]</a></sup> — «Инструменты для создания персональных веб-страниц»; произносится <i>пи-эйч-пи</i>) — <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%BA%D1%80%D0%B8%D0%BF%D1%82%D0%BE%D0%B2%D1%8B%D0%B9_%D1%8F%D0%B7%D1%8B%D0%BA" title="Скриптовый язык" class="mw-redirect">скриптовый язык</a><sup><a href="https://ru.wikipedia.org/wiki/PHP#cite_note-5">[5]</a></sup> программирования общего назначения, интенсивно применяемый для разработки веб-приложений. В настоящее время поддерживается подавляющим большинством <a href="https://ru.wikipedia.org/wiki/%D0%A5%D0%BE%D1%81%D1%82%D0%B8%D0%BD%D0%B3" title="Хостинг">хостинг-провайдеров</a> и является одним из лидеров среди языков программирования, применяющихся для создания <a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D0%BD%D0%B0%D0%BC%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9_%D1%81%D0%B0%D0%B9%D1%82" title="Динамический сайт">динамических веб-сайтов</a><sup><a href="https://ru.wikipedia.org/wiki/PHP#cite_note-tiobe-6">[6]</a></sup>.</p><p>Язык и его интерпретатор разрабатываются группой энтузиастов в рамках проекта с <a href="https://ru.wikipedia.org/wiki/%D0%9E%D1%82%D0%BA%D1%80%D1%8B%D1%82%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D0%BE%D0%B5_%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5" title="Открытое программное обеспечение">открытым кодом</a><sup><a href="https://ru.wikipedia.org/wiki/PHP#cite_note-7">[7]</a></sup>. Проект распространяется под <a href="https://ru.wikipedia.org/wiki/%D0%9B%D0%B8%D1%86%D0%B5%D0%BD%D0%B7%D0%B8%D1%8F_PHP" title="Лицензия PHP" class="mw-redirect">собственной лицензией</a>, несовместимой с <a href="https://ru.wikipedia.org/wiki/GNU_GPL" title="GNU GPL" class="mw-redirect">GNU GPL</a>.</p>', '2014-10-17 23:03:52'),
(114, 17, 'asdasdasd', '', '<p>asdasdasd</p>', '2014-11-21 16:27:45'),
(115, 17, 'zXasdasd', '', '<p>asdasdasd</p>', '2014-11-25 07:00:17'),
(116, 17, 'asdasd', '', '<p>asdasdasd</p>', '2014-11-25 10:52:05'),
(117, 17, 'asdasd', '', '<p>asdasdasd</p>', '2014-11-25 10:52:40'),
(118, 17, 'jhgfdsa', '', '<p>fgdsfds</p>', '2014-11-25 10:54:26'),
(119, 17, 'gfdxcz', '', '<p>xcvxcsdsdf</p>', '2014-11-25 15:50:20'),
(120, 17, 'Кодинг...', '', '<p>такие дела... надо спать ити...</p>', '2014-12-12 04:13:40');

-- --------------------------------------------------------

--
-- Структура таблицы `short_urls`
--

CREATE TABLE IF NOT EXISTS `short_urls` (
`id` int(11) NOT NULL,
  `url` varchar(255) NOT NULL,
  `author_id` int(11) NOT NULL,
  `created` datetime NOT NULL
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `short_urls`
--

INSERT INTO `short_urls` (`id`, `url`, `author_id`, `created`) VALUES
(1, 'https://vk.com/id.undefined', 17, '2014-11-29 12:50:30'),
(2, 'https://vk.com/im', 17, '2014-11-29 12:56:13'),
(13, 'https://vk.com/im?var=1', 17, '2014-12-01 08:07:02'),
(14, 'http://sy.local/short-link', 20, '2014-12-05 19:42:14'),
(15, 'http://toster.ru/user/dez-fafara', 20, '2014-12-05 19:50:20');

-- --------------------------------------------------------

--
-- Структура таблицы `system_auth`
--

CREATE TABLE IF NOT EXISTS `system_auth` (
`id` int(8) NOT NULL,
  `login` varchar(64) NOT NULL,
  `email` varchar(64) NOT NULL DEFAULT '',
  `level_access` varchar(128) NOT NULL DEFAULT '-1',
  `password` varchar(32) NOT NULL,
  `added_at` datetime NOT NULL
) ENGINE=MyISAM AUTO_INCREMENT=21 DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `system_auth`
--

INSERT INTO `system_auth` (`id`, `login`, `email`, `level_access`, `password`, `added_at`) VALUES
(1, 'admin', 'vania.gontarenko@gmail.com', '1107330082.270600.2114.16', '8e2b0e6d2c6d4bfe4912343ef563346e', '2014-03-02 14:00:29'),
(19, 'traf-man', 'test-user@mail.com', '-1', 'be6c513e84c21cfdcce570a0ded1d266', '2014-11-13 17:37:43'),
(17, 'dez', '000.stewie@gmail.com', '-1', '8e2b0e6d2c6d4bfe4912343ef563346e', '2014-10-16 12:28:34'),
(18, 'dez', 'devdez@gamil.com', '-1', '8e2b0e6d2c6d4bfe4912343ef563346e', '2014-10-29 07:54:49'),
(20, 'ex_ua', 'stewie@ex.ua', '-1', 'be6c513e84c21cfdcce570a0ded1d266', '2014-12-05 19:26:49');

-- --------------------------------------------------------

--
-- Структура таблицы `system_sessions`
--

CREATE TABLE IF NOT EXISTS `system_sessions` (
`id` int(11) NOT NULL,
  `user_id` int(8) NOT NULL,
  `uni_key` varchar(32) NOT NULL,
  `token_key` char(32) NOT NULL,
  `user_agent` varchar(128) NOT NULL DEFAULT '',
  `user_ip` int(10) NOT NULL DEFAULT '0',
  `expired_date` datetime NOT NULL,
  `last_date` datetime DEFAULT '0000-00-00 00:00:00'
) ENGINE=MyISAM AUTO_INCREMENT=75 DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `system_sessions`
--

INSERT INTO `system_sessions` (`id`, `user_id`, `uni_key`, `token_key`, `user_agent`, `user_ip`, `expired_date`, `last_date`) VALUES
(74, 17, '26300100c0a5b8ac7f40298c431c3dbf', '86bbd9638399e8f09d7bdb6c13e4d4b0', 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.94 Safari/537.36', 2130706433, '2015-01-12 17:05:04', '2014-12-13 17:57:50');

-- --------------------------------------------------------

--
-- Структура таблицы `tags`
--

CREATE TABLE IF NOT EXISTS `tags` (
`id` int(11) NOT NULL,
  `name` varchar(16) NOT NULL
) ENGINE=MyISAM AUTO_INCREMENT=89 DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `tags`
--

INSERT INTO `tags` (`id`, `name`) VALUES
(25, 'orm'),
(24, 'wiki'),
(23, 'mp3'),
(22, 'server'),
(21, 'oop'),
(20, 'trololo'),
(19, 'js'),
(18, 'programming'),
(17, 'dev'),
(16, 'web'),
(15, 'php'),
(14, 'pdo'),
(26, 'mvc'),
(27, 'twig'),
(28, 'routing'),
(29, 'cambodia'),
(30, 'mekong'),
(31, 'drink'),
(32, 'devildriver'),
(33, 'music'),
(34, 'music for work'),
(35, 'programing'),
(36, 'sources'),
(37, 'examples'),
(38, 'js-app'),
(39, 'chrome'),
(40, 'google'),
(41, 'chrome-app'),
(42, 'бухло'),
(43, 'алкоголь'),
(44, 'веселье'),
(45, 'программирование'),
(46, 'камбоджа'),
(47, 'toster'),
(48, 'habr'),
(49, 'fb'),
(50, 'facebook'),
(51, 'vk'),
(52, 'ооп'),
(53, 'syorm'),
(54, 'in flames'),
(55, 'lol'),
(56, 'govno code'),
(57, 'php excel'),
(58, 'php5'),
(59, 'stat'),
(60, '​lorem ipsum'),
(61, 'test site'),
(62, 'dead eyes'),
(63, 'siren charms'),
(64, 'Гриффины'),
(65, 'stewie'),
(66, 'piter'),
(67, 'lois'),
(68, 'fuck'),
(69, 'wtf'),
(70, 'what the fuck'),
(71, 'kill.li tools'),
(72, 'tools of kill.li'),
(73, 'web tools'),
(74, 'aaa'),
(75, 'asd'),
(76, 'asdasd'),
(77, 'nice'),
(78, 'коля'),
(79, 'вася'),
(80, 'петя'),
(81, '123qwe'),
(82, 'zerg'),
(83, 'asdfsadf'),
(84, 'lalala'),
(85, 'sy'),
(86, 'sy-frm'),
(87, 'sf2'),
(88, 'php-sy');

-- --------------------------------------------------------

--
-- Структура таблицы `tools`
--

CREATE TABLE IF NOT EXISTS `tools` (
`id` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  `description` tinytext NOT NULL,
  `url` varchar(32) NOT NULL
) ENGINE=MyISAM AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `tools`
--

INSERT INTO `tools` (`id`, `title`, `description`, `url`) VALUES
(1, 'CodeShare', '<p>Share your sources, on <strong>PHP</strong>, <strong>JavaScript</strong>, <strong>HTML</strong> web-languages on public mode or private mode, using you password or share-link. </p><p>Enjoy!</p>', 'code-share'),
(2, 'XCrypter', '<p>You can code your text data using password, and decoding back usinng this tool</p>', 'x-crypt'),
(5, 'Reminder', '<p>Reminder =)</p>', 'reminder'),
(4, 'Kill.li URL Shortener', '<p>Make short your URL until view http://kill.li/l/x</p>', 'short-link');

-- --------------------------------------------------------

--
-- Структура таблицы `xref_tags`
--

CREATE TABLE IF NOT EXISTS `xref_tags` (
  `tag_id` int(11) NOT NULL,
  `post_id` int(11) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `xref_tags`
--

INSERT INTO `xref_tags` (`tag_id`, `post_id`) VALUES
(14, 93),
(14, 94),
(14, 101),
(15, 92),
(15, 93),
(15, 94),
(15, 95),
(16, 98),
(17, 92),
(17, 98),
(19, 98),
(21, 101),
(24, 92),
(25, 95),
(25, 101),
(26, 95),
(27, 95),
(28, 95),
(29, 96),
(30, 96),
(31, 96),
(32, 97),
(33, 97),
(34, 97),
(35, 98),
(36, 98),
(37, 98),
(38, 98),
(39, 98),
(40, 98),
(40, 100),
(41, 98),
(42, 99),
(43, 99),
(44, 99),
(45, 99),
(46, 99),
(47, 100),
(48, 100),
(49, 100),
(50, 100),
(51, 100),
(52, 101),
(53, 101),
(54, 102),
(55, 102),
(56, 102),
(57, 103),
(58, 103),
(59, 103),
(60, 104),
(61, 104),
(62, 104),
(63, 104),
(64, 105),
(65, 105),
(66, 105),
(67, 105),
(68, 106),
(69, 106),
(70, 106),
(71, 107),
(72, 107),
(73, 107),
(74, 108),
(75, 109),
(75, 110),
(76, 111),
(76, 116),
(76, 117),
(77, 112),
(78, 113),
(79, 113),
(80, 113),
(81, 114),
(82, 115),
(83, 118),
(84, 119),
(85, 120),
(86, 120),
(87, 120),
(88, 120);

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `codes`
--
ALTER TABLE `codes`
 ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `log_redirects`
--
ALTER TABLE `log_redirects`
 ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `posts`
--
ALTER TABLE `posts`
 ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `short_urls`
--
ALTER TABLE `short_urls`
 ADD PRIMARY KEY (`id`), ADD UNIQUE KEY `url` (`url`,`author_id`);

--
-- Индексы таблицы `system_auth`
--
ALTER TABLE `system_auth`
 ADD PRIMARY KEY (`id`), ADD KEY `login` (`login`,`password`);

--
-- Индексы таблицы `system_sessions`
--
ALTER TABLE `system_sessions`
 ADD PRIMARY KEY (`id`), ADD UNIQUE KEY `user_id` (`user_id`,`uni_key`);

--
-- Индексы таблицы `tags`
--
ALTER TABLE `tags`
 ADD PRIMARY KEY (`id`), ADD UNIQUE KEY `name` (`name`);

--
-- Индексы таблицы `tools`
--
ALTER TABLE `tools`
 ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `xref_tags`
--
ALTER TABLE `xref_tags`
 ADD UNIQUE KEY `xref` (`tag_id`,`post_id`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `codes`
--
ALTER TABLE `codes`
MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=243;
--
-- AUTO_INCREMENT для таблицы `log_redirects`
--
ALTER TABLE `log_redirects`
MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;
--
-- AUTO_INCREMENT для таблицы `posts`
--
ALTER TABLE `posts`
MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=121;
--
-- AUTO_INCREMENT для таблицы `short_urls`
--
ALTER TABLE `short_urls`
MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=16;
--
-- AUTO_INCREMENT для таблицы `system_auth`
--
ALTER TABLE `system_auth`
MODIFY `id` int(8) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=21;
--
-- AUTO_INCREMENT для таблицы `system_sessions`
--
ALTER TABLE `system_sessions`
MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=75;
--
-- AUTO_INCREMENT для таблицы `tags`
--
ALTER TABLE `tags`
MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=89;
--
-- AUTO_INCREMENT для таблицы `tools`
--
ALTER TABLE `tools`
MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=6;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
