<?php	namespace Dez\Core;    use Dez\Error\Exception;	abstract class App {        use ObjectTrait;        static protected            $appStorage     = [];        public function __construct() {            // system            \Dez::setAlias( '@dez',          realpath( __DIR__ .'/..' ) );            \Dez::setAlias( '@cache',        CACHE_DIR );            \Dez::setAlias( '@app',          APP_PATH );            \Dez::setAlias( '@modules',      '@app/modules' );            // web            \Dez::setAlias( '@host',         Url::host() );            \Dez::setAlias( '@full_web',     Url::base() );            \Dez::setAlias( '@web',          Url::web() );            \Dez::setAlias( '@media',        '@web/media' );            \Dez::setAlias( '@js',           '@media/js' );            \Dez::setAlias( '@css',          '@media/css' );        }		public function __get( $name ){			if( isset( static::$appStorage[$name] ) ) {				return static::$appStorage[$name];			} else {                throw new Exception\InvalidCall( $this->getClassName() .' [Getting undefined property]' );			}		}		public function attach( $name, $value ) {			static::$appStorage[$name] = $value;		}		abstract public function run();	}